{"version":3,"sources":["components/context/reducer.js","components/context/index.js","utils/configs.js","utils/getDates.js","components/GetSheets/index.js","components/Header/Hamburger.js","assets/che.svg","assets/cart.svg","components/Header/index.js","components/EmblaCarousel/EmblaCarouselButtons.js","assets/carousel/vertical1.JPG","assets/carousel/vertical2.JPG","assets/carousel/vertical3.JPG","assets/carousel/vertical4.JPG","assets/carousel/vertical5.JPG","assets/carousel/vertical6.JPG","assets/carousel/horizontal1.JPG","assets/carousel/horizontal2.JPG","assets/carousel/horizontal3.JPG","assets/carousel/horizontal4.JPG","assets/carousel/horizontal5.JPG","assets/carousel/horizontal6.JPG","assets/carousel/index.js","components/EmblaCarousel/EmblaCarousel.js","utils/formatString.js","components/Pages/Flavours.js","components/Pages/ShopItem.js","utils/productImages.js","assets/package/box5.JPG","assets/package/macagram.JPG","assets/package/batch.JPG","assets/package/bulk.JPG","utils/awayMessage.js","components/Pages/Home/index.js","components/Pages/AllFlavours/index.js","components/Pages/Products/index.js","utils/countProducts.js","utils/isPromotion.js","utils/calculateTotal.js","components/Pages/Cart/CheckoutBasket.js","components/Pages/Cart/ContactInfo.js","components/Pages/Cart/CouponCode.js","components/Pages/Cart/DeliveryOptions.js","utils/sendToDiscord.js","utils/sendOrderEmail.js","utils/sheets/addRow.js","utils/getWeeklyFlavourNames.js","components/Pages/Cart/index.js","components/Footer/index.js","components/Pages/FlavourInfo/index.js","utils/ScrollToTop.js","components/Pages/Shop/index.js","components/Pages/BulkForm/index.js","components/Pages/CartInput.js","components/Pages/Shop/FlavourPicker.js","utils/getProductType.js","components/Pages/Shop/OrderForm.js","components/Pages/ThankYou/index.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","state","action","pushToLocalState","sessionStorage","setItem","JSON","stringify","seen","WeakSet","key","value","has","add","getCircularReplacer","newState","type","push","orderCount","data","date","matchedCoupon","couponCode","contactInfo","pickup","deliveryAddress","pickupOptions","delivery","total","prices","selectedFlavour","loading","showHamburger","couponList","bulkCalendar","cart","checkout","flavours","initialState","getItem","parse","all","weekly","Code","Amount","Type","Context","React","createContext","Provider","children","initCart","useReducer","dispatch","CLIENT_EMAIL","process","PRIVATE_KEY","replace","SPREADSHEET_ID","GOOGLE_ORDERS_ID","momentInt","format","day","parseInt","moment","getNextDay","daysToDay","thisSaturday","nextSaturday","nextOrderDates","weeklyFlavours","filter","flavour","isFutureFlavour","isMoreThanTwoDaysBeforeFlavourDate","diff","twoDaysBeforeFlavourDate","isBeforeEightPm","reduce","acc","curr","includes","GetSheets","setCheckout","useContext","useEffect","forEach","item","extension","split","reverse","Boolean","toLowerCase","Object","keys","length","initialCart","weeklyCart","doc","GoogleSpreadsheet","isCancel","a","useServiceAccountAuth","client_email","private_key","loadInfo","sheetsById","getRows","GOOGLE_COUPONS_ID","monthYear","_rawData","shift","month","translator","i","monthToInteger","toLocaleString","minimumIntegerDigits","year","undefined","console","error","getGoogleSheets","className","aria-label","Hamburger","toggleNav","e","target","blur","animateClass","href","onClick","to","Header","cartCount","useState","msgActive","setMsgActive","classes","src","che","alt","PrevButton","enabled","disabled","viewBox","d","NextButton","verticalMedia","vertical1","vertical2","vertical3","vertical4","vertical5","vertical6","verticalMediaByIndex","index","horizontalMedia","horizontal1","horizontal2","horizontal3","horizontal4","horizontal5","horizontal6","horizontalMediaByIndex","EmblaCarousel","slides","useEmblaCarousel","loop","dragFree","viewportRef","embla","prevBtnEnabled","setPrevBtnEnabled","nextBtnEnabled","setNextBtnEnabled","parallaxValues","setParallaxValues","width","setWidth","scrollPrev","useCallback","scrollNext","onSelect","canScrollPrev","canScrollNext","onScroll","engine","dangerouslyGetEngine","scrollProgress","styles","scrollSnapList","map","scrollSnap","slidesInView","diffToTarget","options","slideLooper","loopPoints","loopItem","getTarget","sign","Math","on","window","innerWidth","addEventListener","ref","style","transform","formatString","string","join","t","charAt","toUpperCase","substr","skipWords","Flavours","h2","allFlavours","flavourImage","flavourName","find","dateArr","ShopItem","image","name","altText","productImages","productAltText","awayMessage","Array","from","Home","log","result","week","entry","upcomingFlavours","weeklyNames","product","AllFlavours","props","getNames","allFlavourNames","weeklyFlavourNames","otherFlavourNames","otherFlavours","flavoursArr","Products","formattedName","countProducts","checkoutObj","values","isPromotion","promoCheck","isWebLaunchDays","isTwoPlusBox5","isBlackFriday","isBlackFridayBox","isBFDouble","isBFDoubleBox","calculateTotal","coupon","productInfo","column","parseFloat","singleBox5","singleGram","singleBatch","productsTotal","couponAmount","discount","floor","deliveryCost","CheckoutBasket","boxHeaders","productTypeHeaders","inCheckout","productType","productClassName","box","x","ContactInfo","handleInfoInput","id","onChange","required","htmlFor","pattern","maxLength","CouponCode","disabledMsg","trim","DeliveryOptions","handleOption","preventDefault","innerText","pickupHandler","dataset","rel","option","data-i","checked","readOnly","livesIn","sendToDiscord","deliveryDates","getProductAmount","count","request","XMLHttpRequest","open","setRequestHeader","thankYouEmail","params","username","avatar_url","content","embeds","description","color","productNumber","entries","packagesDetails","send","sendOrderEmail","emailjs","sendForm","then","text","addRow","sheetId","newRow","sheet","getWeeklyFlavourNames","Cart","setCartCount","history","useHistory","handleClear","clear","totalCartAmount","getCartAmountOnDate","deleteCoupon","rows","indexOf","row","rowNumber","delete","currCoupon","amountToFreeDelivery","toFixed","GridItem","price","onSubmit","alert","dateIndex","flavoursNames","getFlavourAmount","flavourString","setTimeout","Name","Date","Email","Phone","Price","Coupon","Pickup","Delivery","defaultValue","aria-hidden","Footer","navigator","clipboard","writeText","FlavourInfo","currFlavour","useMemo","flavourNamesThisWeek","flavourNamesNextWeek","ScrollToTop","pathname","useLocation","scrollTo","Shop","priceText","BulkForm","location","CartInput","boxType","limit","btnHandler","splice","onKeyPress","charCode","which","keyCode","finalValue","arr","amountOfBoxes","select","min","max","title","FlavourPicker","boxNumber","flavourNameKebab","boxCopy","flavourAmount","handleChange","getProductType","OrderForm","match","msg","setMsg","endpoint","productName","header","macsInBox","isFilledBox","b","handleDateClick","productObj","chosenFlavours","finalData","setObj","problemBoxes","ThankYou","App","productsInCart","j","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4fAAaA,EAAU,SAACC,EAAOC,GAC3B,IAAMC,EAAmB,WAarBC,eAAeC,QAAQ,QAASC,KAAKC,UAAUN,EAZnB,WACxB,IAAMO,EAAO,IAAIC,QACjB,OAAO,SAACC,EAAKC,GACT,GAAqB,kBAAVA,GAAgC,OAAVA,EAAgB,CAC7C,GAAIH,EAAKI,IAAID,GACT,OAEJH,EAAKK,IAAIF,GAEb,OAAOA,GAGuCG,MAGpDC,EAAW,GACjB,OAAQb,EAAOc,MACX,IAAK,gBACDD,EAASE,KAAT,2BACOhB,GADP,IAEIiB,WAAYhB,EAAOiB,QAEvB,MACJ,IAAK,UACDJ,EAASE,KAAT,2BACOhB,GADP,IAEImB,KAAMlB,EAAOiB,QAEjBhB,IACA,MACJ,IAAK,mBACDY,EAASE,KAAT,2BACOhB,GADP,IAEIoB,cAAenB,EAAOiB,QAE1BhB,IACA,MACJ,IAAK,YACDY,EAASE,KAAT,2BACOhB,GADP,IAEIqB,WAAYpB,EAAOiB,QAEvBhB,IACA,MACJ,IAAK,iBACDY,EAASE,KAAT,2BACOhB,GADP,IAEIsB,YAAarB,EAAOiB,QAExBhB,IACA,MACJ,IAAK,YACDY,EAASE,KAAT,2BACOhB,GADP,IAEIuB,OAAQtB,EAAOiB,QAEnBhB,IACA,MACJ,IAAK,aACDY,EAASE,KAAT,2BACOhB,GADP,IAEIwB,gBAAiBvB,EAAOiB,QAE5BhB,IACA,MACJ,IAAK,mBACDY,EAASE,KAAT,2BACOhB,GADP,IAEIyB,cAAexB,EAAOiB,QAE1BhB,IACA,MACJ,IAAK,cACDY,EAASE,KAAT,2BACOhB,GADP,IAEI0B,SAAUzB,EAAOiB,QAErBhB,IACA,MACJ,IAAK,WACDY,EAASE,KAAT,2BACOhB,GADP,IAEI2B,MAAO1B,EAAOiB,QAElBhB,IACA,MACJ,IAAK,YACDY,EAASE,KAAT,2BACOhB,GADP,IAEI4B,OAAQ3B,EAAOiB,QAEnBhB,IACA,MACJ,IAAK,kBACDY,EAASE,KAAT,2BACOhB,GADP,IAEI6B,gBAAiB5B,EAAOiB,QAE5BhB,IACA,MACJ,IAAK,UACDY,EAASE,KAAT,2BACOhB,GADP,IAEI8B,QAAS7B,EAAOiB,QAEpB,MACJ,IAAK,YACDJ,EAASE,KAAT,2BACOhB,GADP,IAEI+B,eAAgB/B,EAAM+B,iBAE1B,MACJ,IAAK,gBACDjB,EAASE,KAAT,2BACOhB,GADP,IAEIgC,WAAY/B,EAAOiB,QAEvB,MACJ,IAAK,kBACDJ,EAASE,KAAT,2BACOhB,GADP,IAEIiC,aAAchC,EAAOiB,QAEzB,MACJ,IAAK,UACDJ,EAASE,KAAT,2BACOhB,GADP,IAEIkC,KAAMjC,EAAOiB,QAEjBhB,IACA,MACJ,IAAK,cACDY,EAASE,KAAT,2BACOhB,GADP,IAEImC,SAAUlC,EAAOiB,QAErB,MACJ,IAAK,cACDJ,EAASE,KAAT,2BACOhB,GADP,IAEIoC,SAAUnC,EAAOiB,QAErBhB,IACA,MACJ,QACIY,EAASE,KAAK,MAGtB,OAAOF,EAAS,IA8CPuB,EAAelC,eAAemC,QAAQ,SAAvB,2BAEfjC,KAAKkC,MAAMpC,eAAemC,QAAQ,WARpC,CACHR,SAAS,EACTC,eAAe,IASjB,CACID,SAAS,EACTC,eAAe,EACfK,SAAU,CAAEI,IAAK,GAAIC,OAAQ,IAC7BZ,gBAAiB,GACjBK,KAAM,GAcNN,OAAQ,GACRD,MAAO,EACPD,SAAU,WACVD,cAAe,GACfQ,aAAc,GACdT,gBAAiB,GACjBD,OAAQ,GACRD,YAAa,CACT,YAAa,GACb,aAAc,GACd,YAAa,IAEjBD,WAAY,GACZW,WAAY,GACZZ,cAAe,CAAEsB,KAAM,GAAIC,OAAQ,GAAIC,KAAM,IAC7CzB,KAAM,WACNF,WAAY,ICzOT4B,EAAUC,IAAMC,cAAc,CAACV,EAAc,eAE7CW,EAAW,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAA8B,KAApBxC,IAAoB,EAAfyC,SACZJ,IAAMK,WAAWpD,EAASsC,IADC,mBAC9CrC,EAD8C,KACvCoD,EADuC,KAGrD,OAAO,cAACP,EAAQG,SAAT,CAAkBtC,MAAO,CAACV,EAAOoD,GAAjC,SAA6CH,K,iCCR3CI,EAAeC,sEAEfC,EACTD,muDAAiDE,QAAQ,OAAQ,MAExDC,EACTH,+CAiBSI,EAAmBJ,a,iBCpBnBK,EAAY,SAACC,EAAQC,GAAT,OAAiBC,SAASC,IAAOF,GAAKD,OAAOA,KAEzDI,EAAa,SAAAH,GAEtB,IAAII,EAAYH,SAASD,GAAOC,SAASC,MAASH,OAAO,MASzD,OAPIK,EAAY,IAAGA,GAAa,IAG3BH,SAASC,MAASH,OAAO,MAAQ,GAAKE,SAASC,MAASH,OAAO,MAAQ,GACpC,IAAnCE,SAASC,MAASH,OAAO,OAAeE,SAASC,MAASH,OAAO,MAAQ,MAE1EK,GAAa,GACVF,MAASnD,IAAIqD,EAAW,QAAQL,OAAO,eAGpCM,EACV,eAACN,EAAD,uDAAU,aAAV,OAA2BG,IAAOC,EAAW,IAAIJ,OAAOA,IADhCO,EAExB,eAACP,EAAD,uDAAU,aAAV,OAA2BG,IAAOC,EAAW,IAAIpD,IAAI,EAAG,QAAQgD,OAAOA,IAI9DQ,EAAiB,SAAAC,GAC1B,OAAOA,EACFC,QAAO,SAAAC,GAEJ,IAAMC,EACFb,EAAU,MAAOY,EAAO,MAAYZ,EAAU,QAAUA,EAAU,KAAMY,EAAO,MAAYZ,EAAU,MAEnGc,EAAqCV,IAAOQ,EAAO,MAAUG,KAAKX,MAAU,QAAU,EAEtFY,EAA2BhB,EAAU,SAAWA,EAAU,MAAOY,EAAO,MAAY,EAEpFK,EAAkBjB,EAAU,KAAO,GAEzC,OACKa,GAAmBC,GACnBD,GAAmBG,GAA4BC,KAGvDC,QAAO,SAACC,EAAKC,GAEV,OADKD,EAAIE,SAASD,EAAI,OAAWD,EAAI9D,KAAK+D,EAAI,MACvCD,IACR,KCkIIG,MA/Jf,YAAqC,IAAhBC,EAAe,EAAfA,YAAe,EACgBC,qBAAWtC,GAD3B,0BACvBf,EADuB,EACvBA,QAASM,EADc,EACdA,SAAUF,EADI,EACJA,KAAQkB,EADJ,KAwJhC,OArJAgC,qBAAU,WAWN,GATAhD,EAASI,IAAI6C,SAAQ,SAAAC,GACjB,IACMC,EAAaD,EAAI,OAAaA,EAAI,MAAUE,MAAM,KAAKC,UAAU,IAAO,GAEzEC,QAAQJ,EAAI,QAHO,CAAC,MAAO,OAGgBN,SAASO,EAAUI,iBAC/DL,EAAI,MAAY,oCAIS,IAA7BM,OAAOC,KAAK3D,GAAM4D,OAAc,CAChC,IAAMC,EAAc,WAChB,IAAMC,EAAa,CACf,WAAY,GACZ,aAAc,GACd,cAAe,GACf,kBAAmB,IAQvB,OALe5B,EAAehC,EAASK,QAAQoC,QAAO,SAACC,EAAKC,GAExD,OADKD,EAAIC,KAAOD,EAAIC,GAAQiB,GACrBlB,IACR,KAKP1B,EAAS,CAAErC,KAAM,UAAWG,KAAM6E,MAClCb,EAAYa,QAGjB,CAAC3D,IAEJgD,qBAAU,WACN,IAAMa,EAAM,IAAIC,oBAAkBzC,GAC9B0C,GAAW,EA4Gf,OA3GqB,uCAAG,4BAAAC,EAAA,sEAEhBhD,EAAS,CAAErC,KAAM,UAAWG,MAAM,IAFlB,SAIV+E,EAAII,sBAAsB,CAC5BC,aAAcjD,EACdkD,YAAahD,IAND,uBASV0C,EAAIO,WATM,uBAWKP,EAAIQ,WFxDrCnD,YEwD0EoD,UAX9C,UAWVjE,EAXU,OAYX0D,EAZW,6BAaZ/C,EAbY,UAgBO6C,EAAIQ,WFhEvCnD,GEgEyEoD,UAhB7C,gCAiBIjE,EAjBJ,MAgBJD,IAhBI,KAiBJC,OAjBI,YAcR1B,KAAM,cACNG,KAfQ,0BAqBZkC,EArBY,UAuBI6C,EAAIQ,WFjEpCnD,YEiEuEoD,UAvB3C,iCAsBR3F,KAAM,YACNG,KAvBQ,0BA0BZkC,EA1BY,UA4BI6C,EAAIQ,WFpENnD,YEoEqCoD,UA5BvC,kCA2BR3F,KAAM,mBACNG,KA5BQ,4BA+BZkC,EA/BY,UAiCI6C,EAAIQ,WAAWE,WAAmBD,UAjCtC,mCAgCR3F,KAAM,gBACNG,KAjCQ,8BAoCZkC,EApCY,UAsCK6C,EAAIQ,WF5EFnD,WE4EsCoD,UAtC7C,4BAsCwD7B,QAAO,SAACC,EAAKC,GACzE,IAmBM6B,EAAY7B,EAAK8B,SAASC,QAC1BC,EApBiB,SAAAA,GAenB,IAdA,IAAMC,EAAa,CACf,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEKC,EAAI,EAAGA,EAAID,EAAWlB,OAAQmB,IACnC,GAAIF,EAAMpB,gBAAkBqB,EAAWC,GAAI,OAAOA,EAAI,EAIhDC,CAAeN,EAAUpB,MAAM,KAAK,GAAGG,eAAewB,eAAe,QAAS,CACxFC,qBAAsB,IAEpBC,EAAI,YAAQT,EAAUpB,MAAM,KAAK,IAKvC,OADAV,EAFmB,UAAMuC,EAAN,YAAcN,EAAd,QAEEhC,EAAK8B,SACnB/B,IACR,IApEK,OAqCR/D,KAAM,kBACNG,KAtCQ,8BAuEZkC,EAvEY,UAyEK6C,EAAIQ,WAAW/C,YAAkBgD,UAzEtC,qBAyEiD7B,QAAO,SAACC,EAAKC,GAElE,MACqB,KAAjBA,EAAI,WACauC,IAAjBvC,EAAI,MAC2B,WAA/BA,EAAI,KAASY,eACkB,UAA/BZ,EAAI,KAASY,oBACI2B,IAAjBvC,EAAI,YAGyBuC,IAAtBxC,EAAIC,EAAI,MACfD,EAAIC,EAAI,MAAY,EACbD,EAAIC,EAAI,MAAY,IAC3BD,EAAIC,EAAI,OAAa,IAJdD,IAOZ,IAzFK,OAwER/D,KAAM,gBACNG,KAzEQ,wBA4FZkC,EAAS,CACLrC,KAAM,UACNG,KAAMkD,EAAe3B,GAAQ,KA9FrB,2DAkGX0D,GACDoB,QAAQC,MAAM,UAAd,OAnGY,yBAsGhBpE,EAAS,CAAErC,KAAM,UAAWG,MAAM,IAtGlB,6EAAH,oDAyGrBuG,GAEO,WACHtB,GAAW,KAEhB,CAAC/C,IAGA,qBAAKsE,UAAW5F,EAAU,mBAAqB,OAA/C,SACI,qBAAK4F,UAAW5F,EAAU,UAAY,OAAQ6F,aAAW,uBC1FtDC,EA7EG,WAAO,IAAD,EACMzC,qBAAWtC,GADjB,mBACb7C,EADa,KACNoD,EADM,KAEdyE,EAAY,SAAAC,GACdA,EAAEC,OAAOC,OACT5E,EAAS,CAAErC,KAAM,eAEfkH,EAAejI,EAAM+B,cAAgB,UAAY,GACvD,OACI,qCACI,mBAAGmG,KAAK,QAAQR,UAAU,2BAA1B,kCAGA,sBAAKA,UAAU,MAAf,UAEI,yBAAQA,UAAU,iBAAiBS,QAAS,SAAAL,GAAC,OAAID,EAAUC,IAA3D,UACI,qBACIJ,UAAS,yDAAoDO,KACjE,qBACIP,UAAS,yDAAoDO,KACjE,qBACIP,UAAS,yDAAoDO,QAErE,qBAAIP,UAAS,qBAAgBO,GAA7B,UACI,oBAAIP,UAAWO,EAAf,SACI,cAAC,IAAD,CACIG,GAAG,IACHV,UAAU,mBACVS,QAASN,EAHb,oBAOJ,oBAAIH,UAAWO,EAAf,SACI,cAAC,IAAD,CACIG,GAAG,YACHV,UAAU,mBACVS,QAASN,EAHb,wBAOJ,oBAAIH,UAAWO,EAAf,SACI,cAAC,IAAD,CACIG,GAAG,YACHV,UAAU,mBACVS,QAASN,EAHb,wBAeJ,oBAAIH,UAAWO,EAAf,SACI,cAAC,IAAD,CACIG,GAAG,QACHV,UAAU,mBACVS,QAASN,EAHb,oBAOJ,oBAAIH,UAAWO,EAAf,SACI,cAAC,IAAD,CACIG,GAAG,QACHV,UAAU,mBACVS,QAASN,EAHb,8BCpET,MAA0B,gCCA1B,MAA0B,iCC4C1BQ,EAtCA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACIC,oBAAS,GADb,mBACvBC,EADuB,KACZC,EADY,KAExBC,EAAUJ,EAAY,EAAZ,SAA2B,GAE3C,OACI,yBAAQZ,UAAU,SAAlB,UACI,sBAAKA,UAAU,0BAAf,UACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAMA,UAAU,cAAcU,GAAG,IAAjC,SACI,qBAAKV,UAAU,cAAciB,IAAKC,EAAKC,IAAI,gCAE/C,eAAC,IAAD,CAAMT,GAAG,QAAQV,UAAU,gBAA3B,UACI,mBAAGC,aAAW,yBAAyBD,UAAS,8BAAyBgB,GAAzE,SACKJ,IAEL,qBAAKZ,UAAU,wBAAf,SACI,qBAAKA,UAAU,cAAciB,IAAKzG,EAAM2G,IAAI,iBAIvDL,GACG,qBAAKd,UAAU,sBAAf,SACI,sBAAKA,UAAU,uCAAf,UACI,oBAAGA,UAAU,YAAb,iDAGI,uBAHJ,sCAG6C,2CAE7C,wBAAQA,UAAU,2BAA2BS,QAAS,kBAAMM,GAAa,IAAzE,wB,SChCXK,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASZ,EAAZ,EAAYA,QAAZ,OACtB,wBAAQT,UAAU,oCAAoCS,QAASA,EAASa,UAAWD,EAAnF,SACI,qBAAKrB,UAAU,qBAAqBuB,QAAQ,6BAA5C,SACI,sBAAMC,EAAE,sVAKPC,EAAa,SAAC,GAAD,IAAGJ,EAAH,EAAGA,QAASZ,EAAZ,EAAYA,QAAZ,OACtB,wBAAQT,UAAU,oCAAoCS,QAASA,EAASa,UAAWD,EAAnF,SACI,qBAAKrB,UAAU,qBAAqBuB,QAAQ,sBAA5C,SACI,sBAAMC,EAAE,kQCbL,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,MAA0B,wCCa5BE,EAAgB,CAACC,EAAWC,EAAWC,EAAWC,EAAWC,EAAWC,GACxEC,EAAuB,SAAAC,GAAK,OAAIR,EAAcQ,EAAQR,EAActD,SAEpE+D,EAAkB,CAACC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,GACpFC,GAAyB,SAAAR,GAAK,OAAIC,EAAgBD,EAAQC,EAAgB/D,SC0ExEuE,GApFO,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACLC,2BAAiB,CAC1CC,MAAM,EACNC,UAAU,IAHoB,mBAC3BC,EAD2B,KACdC,EADc,OAKUpC,oBAAS,GALnB,mBAK3BqC,EAL2B,KAKXC,EALW,OAMUtC,oBAAS,GANnB,mBAM3BuC,EAN2B,KAMXC,EANW,OAOUxC,mBAAS,IAPnB,mBAO3ByC,EAP2B,KAOXC,EAPW,OAQR1C,mBAAS,GARD,mBAQ3B2C,EAR2B,KAQpBC,EARoB,KAU5BC,EAAaC,uBAAY,kBAAMV,GAASA,EAAMS,eAAc,CAACT,IAC7DW,EAAaD,uBAAY,kBAAMV,GAASA,EAAMW,eAAc,CAACX,IAE7DY,EAAWF,uBAAY,WACpBV,IACLE,EAAkBF,EAAMa,iBACxBT,EAAkBJ,EAAMc,oBACzB,CAACd,IAEEe,EAAWL,uBAAY,WACzB,GAAKV,EAAL,CAEA,IAAMgB,EAAShB,EAAMiB,uBACfC,EAAiBlB,EAAMkB,iBAEvBC,EAASnB,EAAMoB,iBAAiBC,KAAI,SAACC,EAAYrC,GACnD,IAAKe,EAAMuB,eAAelH,SAAS4E,GAAQ,OAAO,EAClD,IAAIuC,EAAeF,EAAaJ,EAYhC,OAVIF,EAAOS,QAAQ5B,MACfmB,EAAOU,YAAYC,WAAWjH,SAAQ,SAAAkH,GAClC,IAAMxE,EAASwE,EAASC,YACxB,GAAI5C,IAAU2C,EAAS3C,OAAoB,IAAX7B,EAAc,CAC1C,IAAM0E,EAAOC,KAAKD,KAAK1E,IACT,IAAV0E,IAAaN,EAAeF,GAAc,EAAIJ,IACrC,IAATY,IAAYN,EAAeF,GAAc,EAAIJ,QAItDM,IAAiB,EAzCZ,KAyCmC,OAEnDlB,EAAkBa,MACnB,CAACnB,EAAOM,IAgBX,OAdA7F,qBAAU,WACDuF,IACLY,IACAG,IACAf,EAAMgC,GAAG,SAAUpB,GACnBZ,EAAMgC,GAAG,SAAUjB,GACnBf,EAAMgC,GAAG,SAAUjB,MACpB,CAACf,EAAOY,EAAUG,IAErBtG,qBAAU,WACN+F,EAASyB,OAAOC,YAChBD,OAAOE,iBAAiB,UAAU,kBAAM3B,EAASyB,OAAOC,iBACzD,IAGC,sBAAKnF,UAAU,QAAf,UACI,qBAAKA,UAAU,kBAAkBqF,IAAKrC,EAAtC,SACI,qBAAKhD,UAAU,mBAAf,SACK4C,EAAO0B,KAAI,SAAApC,GAAK,OACb,qBAAKlC,UAAU,eAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,qBACIA,UAAU,yBACVsF,MAAO,CAAEC,UAAU,cAAD,OAAgBjC,EAAepB,GAA/B,OAFtB,SAGI,qBACIlC,UAAU,oBACViB,IAAKuC,EAAQ,IAAMd,GAAuBR,GAASD,EAAqBC,GACxEf,IAAI,qBARee,UAgB/C,cAAC,EAAD,CAAYzB,QAASiD,EAAYrC,QAAS6B,IAC1C,cAAC,EAAD,CAAYzC,QAASmD,EAAYvC,QAAS+B,QCvFzCoC,GAAe,SAACC,EAAQvJ,GACjC,OAAQA,GACJ,IAAK,QACD,OAAOuJ,EAAOxH,cAAcH,MAAM,KAAK4H,KAAK,KAChD,IAAK,QACD,OAAOD,EAAOxH,cAAcH,MAAM,KAAK4H,KAAK,KAChD,IAAK,QACD,OAAOD,EAAO3J,QACV,UACA,SAAA6J,GAAC,OAAIA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,OAAO,GAAG7H,iBAErD,IAAK,iBACD,IAAM8H,EAAY,CAAC,KAAM,MACzB,OAAON,EACF3H,MAAM,KACN4H,KAAK,KACL5J,QAAQ,UAAU,SAAA6J,GACf,OAAII,EAAUzI,SAASqI,GAAWA,EAC3BA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,OAAO,GAAG7H,iBAE3D,QACI,OAAOwH,ICyEJO,GAxFE,SAAC,GAA8D,IAAD,IAA3DhG,iBAA2D,MAA/C,GAA+C,MAA3CiG,UAA2C,MAAtC,GAAsC,EAAlCtJ,EAAkC,EAAlCA,eAAgBuJ,EAAkB,EAAlBA,YAAkB,EAC1CzI,qBAAWtC,GAD+B,mBAClET,EADkE,KAClEA,SAAYgB,EADsD,KAErEyK,EAAe,SAACC,GAAD,OACjB1L,EAASI,IAAIuL,MAAK,SAACzI,GAAD,OAAUA,EAAI,UAAgBwI,KAAhD,OAEJ,GAAIzJ,GAAkBA,EAAeyB,OAAS,EAAG,CAC7C,IAAMkI,EAAU3J,EAAe,GACzBA,EAAe,GAAf,KAA0BmB,MAAM,KAChC,WAEN,OACI,sBAAKkC,UAAS,oBAAeA,EAAf,aAAd,UACMiG,EAAY,oBAAIjG,UAAU,eAAd,SAA8BiG,IAC5C,oBAAGjG,UAAU,cAAb,yBACiB,IACZ3D,IAAOiK,EAAS,cAAcpK,OAAO,aAE1C,qBAAK8D,UAAU,iBAAf,SACKrD,EAAe2H,KAAI,SAACzH,EAAS0C,GAC1B,OACI,eAAC,IAAD,CAEIS,UAAU,sBACVU,GAAE,oBAAe8E,GACb3I,EAAO,QACP,UAEJ4D,QAAS,kBACL/E,EAAS,CACLrC,KAAM,kBACNG,KAAMqD,EAAO,WAVzB,UAcI,qBACImD,UAAU,6BACViB,IAAKkF,EAAatJ,EAAO,SACzBsE,IAAG,UAAKtE,EAAO,QAAZ,cAEP,oBAAImD,UAAU,4BAAd,SACKnD,EAAO,YAnBP0C,WA2B1B,OAAI2G,EAEH,sBAAKlG,UAAS,oBAAeA,EAAf,2BAAd,UACMiG,EAAY,oBAAIjG,UAAU,eAAd,SAA8BiG,IAC5C,qBAAKjG,UAAU,iBAAf,SACKkG,EAAY5B,KAAI,SAACzH,EAAS0C,GACvB,OACI,eAAC,IAAD,CAEIS,UAAS,sBACTU,GAAE,oBAAe8E,GACb3I,EAAO,QACP,UAEJ4D,QAAS,kBACL/E,EAAS,CACLrC,KAAM,kBACNG,KAAMqD,EAAO,WAVzB,UAcI,qBACImD,UAAU,6BACViB,IAAKkF,EAAatJ,EAAO,SACzBsE,IAAG,UAAKtE,EAAO,QAAZ,cAEP,oBAAImD,UAAU,4BAAd,SACKnD,EAAO,YAnBP0C,WA4BtB,MC7EAgH,GATE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,QAAhB,OACb,cAAC,IAAD,CAAM1G,UAAU,YAAYU,GAAE,gBAAW8E,GAAaiB,EAAM,UAA5D,SACI,sBAAKzG,UAAU,6BAAf,UACI,qBAAKA,UAAU,mBAAmBiB,IAAKuF,EAAOrF,IAAKuF,IACnD,oBAAI1G,UAAU,kBAAd,SAAiCyG,UCHhCE,GAAgB,CACzB,WCNW,IAA0B,iCDOrC,aEPW,IAA0B,qCFQrC,cGRW,IAA0B,kCHSrC,kBITW,IAA0B,kCJW5BC,GAAiB,CAC1B,WAAY,oEACZ,aAAc,oDACd,cAAe,qEACf,kBAAmB,QKbRC,GAFE,kHCYXjE,GAASkE,MAAMC,KAAKD,MADN,GACyB3I,QA0E9B6I,GAxEF,WAAO,IAAD,EACgBvJ,qBAAWtC,GAD3B,sBACNT,EADM,EACNA,SAAUR,EADJ,EACIA,OAEnB2F,QAAQoH,IAAI,WAAYvM,GAaxB,OACI,0BAASsF,UAAU,OAAnB,UACI,cAAC,GAAD,CAAe4C,OAAQA,KACvB,sBAAK5C,UAAU,UAAf,UAGI,sBAAKA,UAAU,gBAAf,UACI,qBAAIA,UAAU,6BAAd,mCAC0B,sBAAMA,UAAU,SAAhB,2BAE1B,oBAAGA,UAAU,6BAAb,gDACkC,sBAAMA,UAAU,SAAhB,qCAGlC,yjBAUHtD,EAAehC,EAASK,QAAQqD,OAAS,GACtC,sBAAK4B,UAAU,aAAf,UACI,oBAAIA,UAAU,0BAAd,4BACA,4BAAI6G,QAtCC,WACrB,IAAMK,EAAS,GAOf,OALAxK,EAAehC,EAASK,QAAQ4C,SAAQ,SAAAwJ,GACpCtH,QAAQoH,IAAI,OAAQE,GACpBD,EAAO5N,KAAKoB,EAASK,OAAO6B,QAAO,SAAAwK,GAAK,OAAIA,EAAK,OAAaD,SAG3DD,EAkCEG,GAAmB/C,KAAI,SAACgD,EAAa/H,GAAd,OACpB,cAAC,GAAD,CAEIS,UAAU,YACViG,GAAE,UAAK5J,IAAOK,EAAehC,EAASK,QAAQwE,IAAIrD,OAAO,UAAvD,aACFS,eAAgB2K,GAHX/H,MAOb,mDACA,qBAAKS,UAAU,iBAAf,SACK9F,EAAOoK,KAAI,SAACiD,EAAShI,GAAV,OACR,cAAC,GAAD,CAEIiH,MAAOG,GAAcY,EAAO,SAC5Bb,QAASE,GAAeW,EAAO,SAC/Bd,KAAMc,EAAO,SAHRhI,eCjBlBiI,GAnDK,SAAAC,GAAU,IAAD,EACFhK,qBAAWtC,GAAzBT,EADgB,oBAChBA,SAEHgN,EAAW,SAACtK,EAAKC,GAEnB,OADAD,EAAI9D,KAAK+D,EAAI,SACND,GAGLiK,EAAmB,WACrB,IAAMH,EAAS,GAMf,OAJAxK,EAAehC,EAASK,QAAQ4C,SAAQ,SAAAwJ,GACpCD,EAAO5N,KAAKoB,EAASK,OAAO6B,QAAO,SAAAwK,GAAK,OAAIA,EAAK,OAAaD,SAG3DD,GAGLS,EAAkBjN,EAASI,IAAIqC,OAAOuK,EAAU,IAEhDE,EAAqBP,IAAmBlK,QAAO,SAACC,EAAKC,GAEvD,OADAD,EAAI9D,KAAK+D,EAAKF,OAAOuK,EAAU,KACxBtK,IACR,IAEGyK,EAAoBF,EAAgB/K,QAAO,SAAAgB,GAAI,OAAKgK,EAAmBtK,SAASM,MAEhFkK,EAAgBpN,EAASI,IAAI8B,QAAO,SAAAgB,GAAI,OAAIiK,EAAkBvK,SAASM,EAAI,YAAcG,UAE/F,OACI,mCACI,yBAASiC,UAAU,eAAnB,SACI,sBAAKA,UAAU,UAAf,UACI,8CACA,sBAAKA,UAAU,wBAAf,UACKqH,IAAmB/C,KAAI,SAACyD,EAAaxI,GAAd,OACpB,cAAC,GAAD,CAEIS,UAAS,UAAKT,GACd0G,GAAE,UAAK5J,IAAOK,EAAehC,EAASK,QAAQwE,IAAIrD,OAAO,WACzDS,eAAgBoL,GAHXxI,MAMb,cAAC,GAAD,CAAU0G,GAAG,aAAaC,YAAa4B,eCgBhDE,GA3DE,WAAO,IAAD,EACEvK,qBAAWtC,GAAvBjB,EADU,oBACVA,OAET,OACI,0BAAS8F,UAAU,WAAnB,UACI,sBAAKA,UAAU,UAAf,UACI,0CACA,qBAAKA,UAAU,2BAAf,SACK9F,EAAOoK,KAAI,SAACiD,EAAShI,GAClB,IAAM0I,EAAgBzC,GAAa+B,EAAO,QAAa,SAEvD,OACI,sBAAKvH,UAAS,yCAAoCiI,GAAlD,UACuB,mBAAlBA,EACG,sBAAKjI,UAAU,kCAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,mBAAGA,UAAU,4BAAb,4BAEJ,qBACIA,UAAU,wBACViB,IAAK0F,GAAcY,EAAO,SAC1BpG,IAAKyF,GAAeW,EAAO,cAInC,cAAC,IAAD,CAAM7G,GAAE,gBAAWuH,GAAiBjI,UAAU,kCAA9C,SACI,qBACIA,UAAU,wBACViB,IAAK0F,GAAcY,EAAO,SAC1BpG,IAAKyF,GAAeW,EAAO,aAIvC,sBAAKvH,UAAU,uBAAf,UACI,oBAAIA,UAAU,uBAAd,SAAsCuH,EAAO,UAC7C,mBAAGvH,UAAU,8BAAb,SAA4CuH,EAAO,cAClDA,EAAQ,kBACL,oBAAGvH,UAAU,8BAAb,cAA6CuH,EAAQ,oBAExDA,EAAQ,kBACL,oBAAGvH,UAAU,8BAAb,cAA6CuH,EAAQ,yBA5BOhI,WAoCxF,qBAAKS,UAAU,0BAAf,SACI,qBAAKA,UAAU,UAAf,SACI,cAAC,IAAD,CAAMU,GAAG,QAAQV,UAAU,oBAA3B,8BCxCLkI,GAhBO,SAACC,EAAaZ,EAAS9N,GACzC,OAAIA,EACmB,QAAZ8N,EACDrJ,OAAOkK,OAAOD,EAAY1O,IAAO0D,QAAO,SAACC,EAAKC,GAE1C,OADAD,GAAOC,EAAKe,SAEb,GACH+J,EAAY1O,GAAM8N,GAASnJ,OAE1BF,OAAOkK,OAAOD,GAAahL,QAAO,SAACC,EAAKC,GAE3C,OADAD,GAAOC,EAAKkK,GAASnJ,SAEtB,ICkCIiK,GA3CK,SAAC5N,EAAU6N,GAC3B,OAAQA,GACJ,IAAK,iBAED,IAAMC,EACDtM,EAAU,OAAS,KAAOA,EAAU,OAAS,KAA2B,KAApBA,EAAU,OACzC,MAArBA,EAAU,QAAkBA,EAAU,KAAO,IAA0B,KAApBA,EAAU,MAC5DuM,EACFN,GAAczN,EAAU,WAAY+B,KAAkB,GAAK0L,GAAczN,EAAU,WAAYgC,KAAkB,EACrH,OAAO8L,GAAmBC,EAE9B,IAAK,gBACD,OAAQvM,EAAU,OAAS,KAAOA,EAAU,OAAS,KAA8B,MAArBA,EAAU,QAAkBA,EAAU,KAAO,GAE/G,IAAK,cAED,IAAMwM,EACDxM,EAAU,OAAS,KAAOA,EAAU,OAAS,KAA2B,KAApBA,EAAU,OACzC,MAArBA,EAAU,QAAkBA,EAAU,KAAO,IAA0B,KAApBA,EAAU,MAE5DyM,EAAmBjO,EAAS,eAAiByN,GAAczN,EAAU,WAAY,cAAgB,EAEvG,OAAOgO,GAAiBC,EAE5B,IAAK,oBACD,IAAMC,EACD1M,EAAU,OAAS,KAAOA,EAAU,OAAS,KAA2B,KAApBA,EAAU,OACzC,MAArBA,EAAU,QAAkBA,EAAU,KAAO,IAA0B,KAApBA,EAAU,MAE5D2M,EAAgBnO,EAAS,eAAiByN,GAAczN,EAAU,WAAY,cAAgB,EAEpG,OAAOkO,GAAcC,EAEzB,IAAK,kBACD,OACK3M,EAAU,OAAS,KAAOA,EAAU,OAAS,KAA2B,KAApBA,EAAU,OACzC,MAArBA,EAAU,QAAkBA,EAAU,KAAO,IAA0B,KAApBA,EAAU,QCyB/D4M,GA7DQ,SAAC3O,EAAQO,EAAUqO,EAAQ9O,GAE9C,IAAM+O,EAAc,SAACxB,EAASyB,GAAV,OAChBC,WACI/O,EAAOmM,MAAK,SAAAzI,GAAI,OAAIA,EAAI,UAAgB2J,KAAWrN,EAAOmM,MAAK,SAAAzI,GAAI,OAAIA,EAAI,UAAgB2J,KAASyB,GAAU,IAJ3D,EAmBb,CAC1CD,EAAY,WAAY,UAExBA,EAAY,aAAc,UAE1BA,EAAY,cAAe,WALxBG,EAnBoD,KAmBxCC,EAnBwC,KAmB5BC,EAnB4B,OA8Bb,CAC1ClB,GAAczN,EAAU,YACxByN,GAAczN,EAAU,cACxByN,GAAczN,EAAU,gBAatB4O,EA9CqD,KAqCLH,EArCK,KAqCoBC,EArCpB,KAqC8CC,EAUnGE,EAAeR,EAASG,WAAWH,EAAM,QAAc,EACvDS,EACFlB,GAAY5N,EAAU,sBAAwB4N,GAAY5N,EAAU,eAC9D,GAAKuK,KAAKwE,MAAMtB,GAAczN,EAAU,YAAc,GACtDqO,GAA6B,MAAnBA,EAAM,KAChBO,GAAiBC,EAAe,KAChCR,GAA6B,MAAnBA,EAAM,KAChBQ,EACA,EACJG,EAAeJ,EAAgBJ,WAAWM,IAAa,GAAK,EAAiB,aAAbvP,EAA0B,EAAI,EAEpG,OAAOqP,EAAgBJ,WAAWM,GAAYE,GCTnCC,GA/CQ,SAAC,GAAwB,IAAtBjQ,EAAqB,EAArBA,KAAMgB,EAAe,EAAfA,SAAe,EACjBgD,qBAAWtC,GADM,mBAC7BO,GAD6B,WAErCiO,EAAazL,OAAOC,KAAK1D,EAAShB,IAAO0D,QAAO,SAACC,EAAKC,GACxD,IAAM6J,EAAS7J,EAAKY,cAAcX,SAAS,OAAS,MAAQD,EAAKY,cAAcX,SAAS,SAAW,QAAUD,EAG7G,OADAD,EAAI9D,KAAK4N,GACF9J,IACR,IAEGwM,EAAqB,CAAC,WAAY,aAAc,cAAe,mBAIrE,OAFmB,SAAAnQ,GAAI,OAAIyE,OAAOkK,OAAO3N,EAAShB,IAE3CoQ,CAAWpQ,GAAM6K,KAAI,SAACwF,EAAa5H,GACtC,IAAM6H,EAAmBvE,GAAaoE,EAAmB1H,GAAQ,SAEjE,OAAO4H,EAAY1L,OAAS,EACxB,eAAC,WAAD,WACI,oBAAI4B,UAAU,4BAAd,SAA2C4J,EAAmB1H,KAC9D,cAAC,IAAD,CACIlC,UAAU,gCACVU,GAAE,gBAAWqJ,GACbtJ,QAAS,kBAAM/E,EAAS,CAAErC,KAAM,UAAWG,KAAMC,KAHrD,kBAMA,qBAAKuG,UAAS,uCAAkC+J,GAAhD,SACKD,EAAYxF,KAAI,SAAC0F,EAAKzK,GACnB,OACI,sBAAKS,UAAS,qBAAd,UACI,oBAAIA,UAAS,6BAAwB+J,GAArC,mBAA6DJ,EAAWzH,GAAxE,YAAkF3C,EAAI,KACrFrB,OAAOC,KAAK6L,GAAK1F,KAAI,SAACzH,EAASoN,GAC5B,OACI,sBAAajK,UAAU,yBAAvB,UACI,mBAAGA,UAAU,+BAAb,SAA6CnD,IAC7C,mBAAGmD,UAAU,iCAAb,SAA+CgK,EAAInN,OAF7CoN,QAJqB1K,UAX5C2C,GA0Bf,S,QCsBGgI,GAnEK,SAAC,GAAc,EAAZzC,MAAa,IAAD,EACKhK,qBAAWtC,GADhB,mBACtBvB,EADsB,KACtBA,YAAe8B,EADO,KAGzByO,EAAkB,SAAA/J,GAAM,IAAD,EACDA,EAAEC,OAAlBoG,EADiB,EACjBA,KAAMzN,EADW,EACXA,MACd0C,EAAS,CACLrC,KAAM,iBACNG,KAAK,2BAAMI,GAAP,mBAAqB6M,EAAOzN,OAIxC,OACI,sBAAKgH,UAAU,eAAf,UACI,sBAAKA,UAAU,6CAAf,UACI,uBACIA,UAAU,+CACV3G,KAAK,OACLoN,KAAK,YACL2D,GAAG,YACHpR,MAAOY,EAAY,aACnByQ,SAAUF,EACVG,UAAQ,IAEZ,uBACItK,UAAU,+CACVuK,QAAQ,YAFZ,qBAMJ,sBAAKvK,UAAU,6CAAf,UACI,uBACIA,UAAU,+CACV3G,KAAK,QACLoN,KAAK,aACL2D,GAAG,aACHpR,MAAOY,EAAY,cACnByQ,SAAUF,EACVG,UAAQ,IAEZ,uBACItK,UAAU,+CACVuK,QAAQ,aAFZ,sBAMJ,sBAAKvK,UAAU,6CAAf,UACI,uBACIA,UAAU,+CACV3G,KAAK,MACLmR,QAAQ,YACRC,UAAU,KACVhE,KAAK,YACL2D,GAAG,YACHpR,MAAOY,EAAY,aACnByQ,SAAUF,EACVG,UAAQ,IAEZ,uBACItK,UAAU,+CACVuK,QAAQ,YAFZ,0BCIDG,GA7DI,SAAC,GAA+B,IAA7BpJ,EAA4B,EAA5BA,SAAUqJ,EAAkB,EAAlBA,YAAkB,EACClN,qBAAWtC,GADZ,0BACrCxB,EADqC,EACrCA,WAAYW,EADyB,EACzBA,WAAcoB,EADW,KAUxChC,EAAgBY,EAAW+L,MAAK,SAAAyC,GAAM,OAAIA,EAAM,OAAanP,KAanE,OAXA+D,qBAAU,WAEFhC,EADAhC,EACS,CAAEL,KAAM,mBAAoBG,KAAME,GAElC,CACLL,KAAM,mBACNG,KAAM,CAAEwB,KAAM,GAAIC,OAAQ,GAAIC,KAAM,QAG7C,CAACvB,EAAYD,EAAegC,IAG3B,sBAAKsE,UAAU,cAAf,UACKsB,GAAY,mBAAGtB,UAAU,mDAAb,SAAiE2K,IAC9E,sBAAK3K,UAAU,4CAAf,UACI,uBACIA,UAAS,uFACLsB,EAAW,UAAY,GADlB,YAEL5H,GAA2C,KAA1BA,EAAa,KAAkB,QAAU,IAC9DL,KAAK,OACLL,MAAOW,EACP0Q,SA9BK,SAAAjK,GACjB1E,EAAS,CACLrC,KAAM,YACNG,KAAM4G,EAAEC,OAAOrH,MAAM4R,OAAO/E,iBA4BpB4E,UAAU,IACVnJ,SAAUA,IAEd,uBACItB,UAAS,uFACLsB,EAAW,UAAY,IAF/B,4BAOH5H,GAA2C,KAA1BA,EAAa,KAC3B,mBAAGsG,UAAU,mDAAb,SAC+B,MAA1BtG,EAAa,KAAb,UACQuP,WAAWvP,EAAa,QADhC,qBAE+B,MAA1BA,EAAa,KAAb,WACIuP,WAAWvP,EAAa,QAD5B,oBAEA,KAETA,GAAgC,KAAfC,EAGlB,GAFA,mBAAGqG,UAAU,mDAAb,wCCyED6K,GA9HS,SAAC,GAAc,IAAZrR,EAAW,EAAXA,KAAW,EACuCiE,qBAAWtC,GADlD,0BACzBnB,EADyB,EACzBA,SAAUD,EADe,EACfA,cAAeD,EADA,EACAA,gBAAiBD,EADjB,EACiBA,OAAU6B,EAD3B,KAK5BoP,EAAe,SAAA1K,GACjBA,EAAE2K,iBACFrP,EAAS,CACLrC,KAAM,cACNG,KAAM4G,EAAEC,OAAO2K,UAAU/M,iBAI3BgN,EAAgB,SAAA7K,GAClB1E,EAAS,CACLrC,KAAM,YACNG,KAAM,CAAER,MAAOoH,EAAEC,OAAOrH,MAAOkJ,MAAO9B,EAAEC,OAAO6K,QAAQ3L,MAW/D,OACI,sBAAKS,UAAU,mBAAf,UACI,wBACIA,UAAS,mEAA2E,aAAbhG,EAA0B,UAAY,IAC7GyG,QAASqK,EAFb,sBAKA,wBACI9K,UAAS,mEAA2E,WAAbhG,EAAwB,UAAY,IAC3GyG,QAASqK,EAFb,oBAMc,WAAb9Q,GACG,sBAAKgG,UAAU,2BAAf,UACI,oBAAGA,UAAU,sBAAb,qBACa,IACT,mBACIA,UAAU,0BACVQ,KAAK,wCACLH,OAAO,SACP8K,IAAI,aAJR,oCAQHpR,EAAcuK,KAAI,SAAC8G,EAAQ7L,GAAT,OACf,wBAAeS,UAAU,4DAAzB,oBACQoL,EAAM,SADd,YAC8BA,EAAM,MAChC,uBACI/R,KAAK,QACLgS,SAAQ9L,EACRkH,KAAI,gBACJzN,MAAK,UAAKoS,EAAM,SAAX,YAA2BA,EAAM,MACtC3K,QAASwK,EACTK,QAASlP,SAASvC,EAAM,SAAe0F,EAEvCgM,UAAQ,IAEZ,qBAAKvL,UAAU,0CAZPT,SAkBV,aAAbvF,GACG,sBAAKgG,UAAU,2BAAf,UACI,oBAAGA,UAAU,sBAAb,oCAC4B,IACxB,mBACIA,UAAU,6BACVQ,KAAK,2FACLH,OAAO,SACP8K,IAAI,aAJR,oBAQJ,oBAAGnL,UAAU,sBAAb,UACI,mBACIA,UAAU,6BACVQ,KAAK,0CACLH,OAAO,SACP8K,IAAI,aAJR,gBAMK,IAPT,gCAWmB,UAAd,OAAJ3R,QAAI,IAAJA,OAAA,EAAAA,EAAMgS,SACH,mCACI,wBAAOxL,UAAU,4DAAjB,2CAEI,uBAAO3G,KAAK,QAAQoN,KAAK,QAAQ6E,SAAO,EAACC,UAAQ,IACjD,qBAAKvL,UAAU,6CAIvB,wBAAOA,UAAU,4DAAjB,2CAEI,uBAAO3G,KAAK,QAAQoN,KAAK,QAAQ6E,SAAO,EAACC,UAAQ,IACjD,qBAAKvL,UAAU,2CAIvB,sBAAKA,UAAU,iDAAf,UACI,uBACIA,UAAU,mDACV3G,KAAK,OACLL,MAAOc,EACPuQ,SA/FO,SAAAjK,GAC3B1E,EAAS,CACLrC,KAAM,aACNG,KAAM4G,EAAEC,OAAOrH,SA6FCsR,UAAQ,IAEZ,uBAAOtK,UAAU,mDAAjB,+BCqBTyL,GA3IO,SAAAnT,GAAU,IAExBsB,EAQAtB,EARAsB,YACAI,EAOA1B,EAPA0B,SACAH,EAMAvB,EANAuB,OACAC,EAKAxB,EALAwB,gBACAJ,EAIApB,EAJAoB,cACAC,EAGArB,EAHAqB,WACAM,EAEA3B,EAFA2B,MACAO,EACAlC,EADAkC,KAGEkR,EAAgB,WAClB,IAAIxE,EAAS,GASb,OARAhJ,OAAOC,KAAK3D,GAAMmD,SAAQ,SAAClE,EAAM8F,GAEzBrB,OAAOkK,OAAO5N,EAAKf,IAAOmD,QAAO,SAAAgB,GAAI,OAAIA,EAAKQ,OAAS,KAClDA,OAAS,IAEd8I,GAAM,UAAO3H,EAAI,EAAJ,SAAP,OAA2BlD,IAAO5C,GAAMyC,OAAO,cAGtDgL,GAGLyE,EAAmB,SAAApE,GACrB,IAAIqE,EAAQ,EAMZ,OALA1N,OAAOC,KAAK3D,GAAMmD,SAAQ,SAAAlE,GACtBmS,GAAS1N,OAAOkK,OAAO5N,EAAKf,IAAO4M,MAC/B,SAAAzI,GAAI,OAAIA,IAASpD,EAAKf,GAAM8N,MAC9BnJ,UAECwN,GA8CLC,EAAU,IAAIC,eAEpBD,EAAQE,KAAK,OzC1DWnQ,6HyC2DxBiQ,EAAQG,iBAAiB,eAAgB,oBAEzC,IAAMC,EAAa,aACfrS,EAAY,aADG,2HAGF,WAAbI,EAAA,2BAA4CH,EAAM,OAAc,IAHjD,OAKF,aAAbG,EAAA,4BAC2B0R,IAD3B,yBAC2D5R,GACrD,GAPS,8HAUboS,EAAS,CACXC,SAAS,cAAD,OAAgBvS,EAAY,cACpCwS,WAAY,GACZC,QAASJ,EACTK,OAAQ,CACJ,CACIC,YAAY,GAAD,OAAK3S,EAAY,cAAjB,eACPA,EAAY,aADL,gDAGU+R,EAAiB,YAH3B,+CAISA,EAAiB,cAJ1B,gDAKUA,EAAiB,eAL3B,iCAOU,WAAb3R,EAAA,oBACmBH,EAAM,OACnB,IATH,OAWM,aAAbG,EAAA,0BACyB0R,KACnB,GAbC,iCAgBU,aAAb1R,EAAA,4CAEAF,GACM,GAnBH,iCAsBuB,KAA1BJ,EAAa,KAAb,qBACoBC,EADpB,6CAEUD,EAAa,QAFvB,OAEoCA,EAAa,MAC3C,GAzBH,+DA4BGO,GACduS,MAAOpQ,SAAS,UAAUN,QAAQ,IAAK,IAAK,KAEhD,CACIyQ,YAAa,iBAhGD,WACpB,IAAIrF,EAAS,GAuCb,OAtCAhJ,OAAOC,KAAK3D,GAAMmD,SAAQ,SAAClE,EAAMyI,GAC7B,IAAMyH,EAAazL,OAAOC,KAAK3D,EAAKf,IAAO0D,QAAO,SAACC,EAAKC,GACpD,IAAM6J,EAAS7J,EAAKY,cAAcX,SAAS,OACrC,MACAD,EAAKY,cAAcX,SAAS,SAC5B,QACAD,EAGN,OADAD,EAAI9D,KAAK4N,GACF9J,IACR,IAGCc,OAAOkK,OAAO5N,EAAKf,IAAOmD,QAAO,SAAAgB,GAAI,OAAIA,EAAKQ,OAAS,KAClDA,OAAS,IAEd8I,GAAM,UAAOhF,EAAQ,EAAI,OAAS,IAA5B,OAAiC7F,IAAO5C,GAAMyC,OAChD,UADE,SAKVgC,OAAOC,KAAK3D,EAAKf,IAAOkE,SAAQ,SAAC4J,EAASkF,GAElCjS,EAAKf,GAAM8N,GAASnJ,OAAS,GAC7B5D,EAAKf,GAAM8N,GAAS5J,SAAQ,SAACqM,EAAKzK,GAC9B2H,GAAM,cAAWyC,EAAW8C,GAAtB,YACFlN,EAAI,EADF,QAIN,cAA2BrB,OAAOwO,QAC9BlS,EAAKf,GAAM8N,GAAShI,IADxB,eAEG,CAAC,IAAD,sBAFSxG,EAET,KAFcC,EAEd,KACCkO,GAAM,UAAOnO,EAAP,aAAeC,EAAf,kBAMnBkO,EAwDiCyF,GAChCH,MAAOpQ,SAAS,UAAUN,QAAQ,IAAK,IAAK,OAIxD+P,EAAQe,KAAKjU,KAAKC,UAAUsT,K,qBC1HjBW,GAdQ,SAAAzM,GACnB0M,KACKC,SACG,UACA,mBACA3M,EAAEC,O1CoBiBzE,8B0CjBtBoR,MACG,SAAA9F,GAAM,OAAIrH,QAAQoH,IAAI,OAAQC,EAAO+F,SACrC,SAAAnN,GAAK,OAAID,QAAQoH,IAAI,WAAY,sECM9BiG,GAhBH,uCAAG,WAAOC,EAASC,GAAhB,iBAAA1O,EAAA,6DACLH,EAAM,IAAIC,oBAAkBzC,GADvB,kBAGDwC,EAAII,sBAAsB,CAC5BC,aAAcjD,EACdkD,YAAahD,IALV,uBAQD0C,EAAIO,WARH,cASDuO,EAAQ9O,EAAIQ,WAAWoO,GATtB,SAUDE,EAAMH,OAAOE,GAVZ,yDAYPvN,QAAQC,MAAM,UAAd,MAZO,0DAAH,wDCKGwN,GARe,SAAC3Q,EAAgBlD,GAK3C,OAAOkD,EAAeC,QAAO,SAAAwK,GAAK,OAAIA,EAAK,OAAa3N,KAAM0D,QAJ7C,SAACC,EAAKC,GAEnB,OADAD,EAAI9D,KAAK+D,EAAI,SACND,IAEoE,KCqcpEmQ,GA/aF,SAAC,GAA6C,IAA3C9S,EAA0C,EAA1CA,SAAU+C,EAAgC,EAAhCA,YAAagQ,EAAmB,EAAnBA,aAC7BC,EAAUC,cADsC,EAE5BjQ,qBAAWtC,GAFiB,mBAE/C7C,EAF+C,KAExCoD,EAFwC,KAIlDzB,EAWA3B,EAXA2B,MACAC,EAUA5B,EAVA4B,OACAF,EASA1B,EATA0B,SACAM,EAQAhC,EARAgC,WACAX,EAOArB,EAPAqB,WACAD,EAMApB,EANAoB,cACAE,EAKAtB,EALAsB,YACAY,EAIAlC,EAJAkC,KACAX,EAGAvB,EAHAuB,OACAC,EAEAxB,EAFAwB,gBACAY,EACApC,EADAoC,SAGE2D,EAAc,WAChB,IAAMC,EAAa,CACf,WAAY,GACZ,aAAc,GACd,cAAe,GACf,kBAAmB,IAQvB,OALe5B,EAAehC,EAASK,QAAQoC,QAAO,SAACC,EAAKC,GAExD,OADKD,EAAIC,KAAOD,EAAIC,GAAQiB,GACrBlB,IACR,KAoBDuQ,EAAc,SAACvN,GACjBA,EAAEC,OAAOC,OACT9C,EAAYa,KACZ5F,eAAemV,QACflS,EAAS,CAAErC,KAAM,UAAWG,MAAM,IAClCkC,EAAS,CACLrC,KAAM,UACNG,KAAM6E,MAEV3C,EAAS,CAAErC,KAAM,WAAYG,KAAM,IACnCgU,EAAa,IAaXK,EAAkBnR,EAAehC,EAASK,QAAQoC,QACpD,SAACC,EAAKC,GAEF,OADAD,GAZoB,SAAC3D,GACzB,IAAImS,EAAQ,EAMZ,OALInR,EAAShB,IACTyE,OAAOkK,OAAO3N,EAAShB,IAAOkE,SAAQ,SAACC,EAAM2B,GACzCqM,GAAShO,EAAKQ,QAAU,KAGzBhC,SAASwP,GAKLkC,CAAoBzQ,KAG/B,GA+CE0Q,EAAY,uCAAG,8BAAArP,EAAA,6DACXH,EAAM,IAAIC,oBAAkBzC,GADjB,kBAGPwC,EAAII,sBAAsB,CAC5BC,aAAcjD,EACdkD,YAAahD,IALJ,uBAOP0C,EAAIO,WAPG,uBAQMP,EAAIQ,WAAWE,WAAmBD,UARxC,cAQPgP,EARO,iBAUPA,EACFA,EAAKC,QACDD,EAAK3H,MACD,SAAC6H,GAAD,OAASA,EAAIC,YAAczU,EAAcyU,eAGnDC,SAhBW,0DAkBbvO,QAAQC,MAAM,iBAAd,MAlBa,0DAAH,qDAkJZuO,EAAa/T,EAAW+L,MAC1B,SAACyC,GAAD,OAAYA,EAAM,OAAanP,KAG7B2U,GACF,GAAKzF,GAAevQ,EAAM4B,OAAQO,EAAU4T,EAAY,WAC1DE,QAAQ,GAEJC,EAAW,SAAC,GAAD,QAAG/H,YAAH,MAAU,GAAV,MAAcgI,aAAd,MAAsB,GAAtB,MAA0BjI,aAA1B,MAAkC,GAAlC,MAAsCrF,WAAtC,MAA4C,GAA5C,SAEb,cADA,CACC,IAAD,CACIT,GAAE,gBAAW8E,GAAaiB,EAAM,UAChCzG,UAAU,kBAFd,UAII,qBAAKA,UAAU,6BAAf,SACI,qBAAKA,UAAU,yBAAyBiB,IAAKuF,EAAOrF,IAAKA,MAE7D,sBAAKnB,UAAU,wBAAf,UACI,oBAAIA,UAAU,wBAAd,SACKyG,EAAKnJ,SAAS,QAAU,aAAemJ,IAE5C,mBAAGzG,UAAU,oBAAb,SAAkCyO,WAY9C,OAPA/Q,qBAAU,WACNhC,EAAS,CACLrC,KAAM,WACNG,KAAMqP,GAAevQ,EAAM4B,OAAQO,EAAU4T,EAAYrU,OAE9D,CAACS,EAAUT,EAAUC,EAAON,EAAY+B,EAAUpD,EAAM4B,OAAQmU,IAG/D,qCACI,uBAAMrO,UAAU,OAAO0O,SA/JT,SAACtO,GAGnB,GAFAA,EAAE2K,iBAEE8C,EAAkB,EAClBc,MAAM,2BAGV,GAAiB,WAAb3U,GAA0BH,EAAM,MAApC,CAKIH,GAC0B,KAA1BA,EAAa,M7C3JKkC,U6C4JlBjC,GACe,SAAfA,GACe,SAAfA,GACe,UAAfA,GAGAoU,IAGJ,IAAMrC,EAAgB,WAClB,IAAMxE,EAAS,GASf,OARAhJ,OAAOC,KAAK3D,GAAMmD,SAAQ,SAAClE,EAAM8F,GAEzBrB,OAAOkK,OAAO5N,EAAKf,IAAOmD,QAAO,SAACgB,GAAD,OAAUA,EAAKQ,OAAS,KACpDA,OAAS,GAEd8I,EAAO5N,KAAKG,MAGbyN,GAEXwE,IAAgB/N,SAAQ,SAAClE,EAAMmV,GAC3B,IAAMC,EAAgBvB,GAAsB5S,EAASK,OAAQtB,GACvDqV,EAAmB,SAACrV,EAAMsV,GAC5B,IAAI7H,EAAS,EAuBb,OApBIhJ,OAAOkK,OAAO3N,EAAShB,IAAOmD,QAC1B,SAACgB,GAAD,OAAUA,EAAKQ,OAAS,KAC1BA,OAAS,GAEXF,OAAOC,KAAK1D,EAAShB,IAAOkE,SACxB,SAAC4J,EAASkF,GAEFhS,EAAShB,GAAM8N,GAASnJ,OAAS,GACjC3D,EAAShB,GAAM8N,GAAS5J,SAAQ,SAACqM,EAAKzK,GAClC,cAA2BrB,OAAOwO,QAC9BjS,EAAShB,GAAM8N,GAAShI,IAD5B,eAEG,CAAC,IAAD,sBAFSxG,EAET,KAFcC,EAEd,KACKD,IAAQgW,IACR7H,GAAUlO,UAO/BkO,GAGX8H,YACI,WACI9B,GAAOlR,EAAkB,CACrBiT,KAAK,GAAD,OAAKrV,EAAY,aAAjB,YACA8R,IAAgBtN,OAAS,EAAzB,UACSwQ,EAAY,EADrB,YAC0BlD,IAAgBtN,QACpC,IAEV8Q,KAAMzV,EACN0V,MAAOvV,EAAY,cACnBwV,MAAOxV,EAAY,aACnByV,MACkB,IAAdT,EACM3U,EADN,WAEU2U,EAAY,EAFtB,YAE2BlD,IAAgBtN,QAC/C,WACkD,IAA9C8J,GAAczN,EAAU,WAAYhB,GAC9B,GACAyO,GAAczN,EAAU,WAAYhB,GAC9C,aACoD,IAAhDyO,GAAczN,EAAU,aAAchB,GAChC,GACAyO,GAAczN,EAAU,aAAchB,GAChD,cACqD,IAAjDyO,GAAczN,EAAU,cAAehB,GACjC,GACAyO,GAAczN,EAAU,cAAehB,GACjD,kBAEI,IADAyO,GAAczN,EAAU,kBAAmBhB,GAErC,GACAyO,GACIzN,EACA,kBACAhB,GAEd,YAAaqV,EAAiBrV,EAAMoV,EAAc,IAClD,YAAaC,EAAiBrV,EAAMoV,EAAc,IAClD,YAAaC,EAAiBrV,EAAMoV,EAAc,IAClD,YAAaC,EAAiBrV,EAAMoV,EAAc,IAClD,YACIA,EAAczQ,OAAS,EACjB0Q,EAAiBrV,EAAMoV,EAAc,IACrC,KACVS,OAAkC,KAA1B5V,EAAa,KAAkBC,EAAa,GACpD4V,OAAqB,WAAbvV,EAAwBH,EAAM,MAAY,GAClD2V,SACiB,aAAbxV,EAA0BF,EAAkB,OAGxD8U,EAAY,EAAI,IAAO,MAG/BnB,EAAQnU,KAAK,aACbmS,GAAcnT,GACduU,GAAezM,GAEfuN,EAAYvN,QAjHRuO,MAAM,oCAuJN,UACI,qBAAK3O,UAAU,aAAf,SACI,mBAAGA,UAAU,wBAAb,SACKsO,EAAuB,EAAvB,WACSA,EADT,iDAKT,sBAAKtO,UAAU,UAAf,UACI,oBAAIA,UAAU,cAAd,kBAEC6N,EAAkB,GAAK,6DACvBA,EAAkB,GACf3P,OAAOC,KAAK1D,GAAU6J,KAAI,SAAC7K,EAAM8F,GAAP,OACtB2I,GAAczN,EAAU,MAAOhB,GAAQ,EACnC,sBAAauG,UAAU,aAAvB,UACI,oBAAIA,UAAU,0BAAd,SACK3D,IAAO5C,GAAMyC,OAAO,YAEV,WAAblC,GAAmC,IAAVC,GACb,aAAbD,GAA2BC,EAAQ,EAChC,cAAC,GAAD,CACIQ,SAAUA,EACVhB,KAAMA,IAEV,OAVE8F,GAYV,QAGZ,sBAAKS,UAAU,sCAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,6BAAd,uBAGA,cAAC,GAAD,OAGJ,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,8BAAd,8BAGA,cAAC,GAAD,UAIR,oBAAIA,UAAU,8BAAd,2BAAwD/F,EAAMsU,QAC1D,MAGJ,qBAAKvO,UAAU,cAAf,SACI,cAAC,GAAD,SAIR,sBAAKA,UAAU,aAAf,UACI,wBACIA,UAAU,mCAEV3G,KAAK,SAHT,2BAOA,wBACI2G,UAAU,iCACVS,QAASkN,EAFb,2BASJ,uBACI8B,aAAc7V,EAAY,cAC1B6M,KAAK,gBACLzG,UAAU,SACV0P,eAAA,IAEJ,uBACID,aAAc7V,EAAY,aAC1B6M,KAAK,eACLzG,UAAU,SACV0P,eAAA,IAEJ,uBACID,aAtTQ,WACpB,IAAIvI,EAAS,GAwCb,OAvCAhJ,OAAOC,KAAK1D,GAAUkD,SAAQ,SAAClE,EAAMyI,GACjC,IAAMyH,EAAazL,OAAOC,KAAK1D,EAAShB,IAAO0D,QAC3C,SAACC,EAAKC,GACF,IAAM6J,EAAS7J,EAAKY,cAAcX,SAAS,OACrC,MACAD,EAAKY,cAAcX,SAAS,SAC5B,QACAD,EAGN,OADAD,EAAI9D,KAAK4N,GACF9J,IAEX,IAIAc,OAAOkK,OAAO3N,EAAShB,IAAOmD,QAAO,SAACgB,GAAD,OAAUA,EAAKQ,OAAS,KACxDA,OAAS,IAEd8I,GAAM,UAAOhF,EAAQ,EAAI,WAAa,GAAhC,mBAA6C7F,IAC/C5C,GACFyC,OAAO,UAFH,cAKVgC,OAAOC,KAAK1D,EAAShB,IAAOkE,SAAQ,SAAC4J,EAASkF,GAEtChS,EAAShB,GAAM8N,GAASnJ,OAAS,GACjC3D,EAAShB,GAAM8N,GAAS5J,SAAQ,SAACqM,EAAKzK,GAClC2H,GAAM,cAAWyC,EAAW8C,GAAtB,YAAwClN,EAAI,GAElD,cAA2BrB,OAAOwO,QAC9BjS,EAAShB,GAAM8N,GAAShI,IAD5B,eAEG,CAAC,IAAD,sBAFSxG,EAET,KAFcC,EAEd,KACCkO,GAAM,iBAAcnO,EAAd,aAAsBC,aAMzCkO,EA6QmByF,GACdlG,KAAK,kBACLzG,UAAU,SACV0P,eAAA,IAEJ,uBACI1W,MAAOiB,EACPwM,KAAK,gBACLzG,UAAU,SACVuL,UAAQ,EACRmE,eAAA,IAEJ,uBACID,aACiB,WAAbzV,EACMH,EAAM,MACO,aAAbG,EACAF,EADA,uEAIV2M,KAAK,iBACLzG,UAAU,SACV0P,eAAA,OAGR,sBAAK1P,UAAU,4BAAf,UACI,mDACA,qBAAKA,UAAU,aAAf,SACK9F,EAAOoK,KAAI,SAACiD,EAAShI,GAAV,OACR,cAACiP,EAAD,CAEI/H,KAAMc,EAAO,QACbf,MAAOG,GAAcY,EAAO,SAC5BpG,IAAKyF,GAAeW,EAAO,UAHtBhI,eCrXlBoQ,GAzEA,WAIX,OACI,yBAAQ3P,UAAU,SAAlB,UACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,mBACIA,UAAU,6BACVQ,KAAK,0CACLH,OAAO,SACP8K,IAAI,aAJR,uBAOA,mBACInL,UAAU,6BACVQ,KAAK,8DACLH,OAAO,SACP8K,IAAI,aAJR,sBAOA,oBAAGnL,UAAU,gBAAgBS,QArBpB,SAAAL,GACrBwP,UAAUC,UAAUC,UAAU1P,EAAEC,OAAO2K,YAoB3B,wCAC+B,mBAAGhL,UAAU,cAAc0P,cAAY,eAI1E,sBAAK1P,UAAU,mBAAf,UACI,oBAAGA,UAAU,sBAAb,oCAC4B,IACxB,mBACIA,UAAU,6BACVQ,KAAK,2FACLH,OAAO,SACP8K,IAAI,aAJR,oBAQJ,oBAAGnL,UAAU,sBAAb,UACI,mBACIA,UAAU,6BACVQ,KAAK,0CACLH,OAAO,SACP8K,IAAI,aAJR,gBAMK,IAPT,mCAWJ,sBAAKnL,UAAU,iBAAf,UACI,mBAAGA,UAAU,sBAAb,+BACA,mBACIA,UAAU,0BACVQ,KAAK,wCACLH,OAAO,SACP8K,IAAI,aAJR,uCAUR,qBAAKnL,UAAU,iBAAf,SACI,oBAAGA,UAAU,uBAAb,uBACY,IACR,mBAAGA,UAAU,OAAOK,OAAO,SAAS8K,IAAI,aAAa3K,KAAK,oCAA1D,+BCSLuP,GAjEK,WAAO,IAAD,EAC4BtS,qBAAWtC,GADvC,0BACbhB,EADa,EACbA,gBAAiBO,EADJ,EACIA,SAAYgB,EADhB,KAEhBsU,EAAcC,mBAChB,kBAAMvV,EAASI,IAAIuL,MAAK,SAAAzI,GAAI,OAAIA,EAAI,QAAYN,SAASnD,OAAqB,KAC9E,CAACO,EAASI,IAAKX,IAEb6F,EAAYwF,GAAarL,EAAiB,SAE1CuN,EAAW,SAACtK,EAAKC,GAEnB,OADAD,EAAI9D,KAAK+D,EAAI,SACND,GAVW,EAY+B,CACjD1C,EAASK,OAAO6B,QAAO,SAAAwK,GAAK,OAAIA,EAAK,OAAa5K,EAAa,iBAAeW,OAAOuK,EAAU,IAC/FhN,EAASK,OAAO6B,QAAO,SAAAwK,GAAK,OAAIA,EAAK,OAAa3K,EAAa,iBAAeU,OAAOuK,EAAU,KAF5FwI,EAZe,KAYOC,EAZP,KA8BtB,OAJAzS,qBAAU,WACNhC,EAAS,CAAErC,KAAM,kBAAmBG,KAAMwW,EAAW,YACtD,CAACA,EAAatU,IAGb,qBAAKsE,UAAS,qCAAgCA,EAAhC,SAAd,SACI,qBAAKA,UAAU,UAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,gCAAf,SACI,qBAAKiB,IAAK+O,EAAW,MAAW7O,IAAG,UAAK6O,EAAW,SAAe,GAA/B,gBAEvC,sBAAKhQ,UAAU,4BAAf,UACI,6BAAK7F,IACL,mBAAG6F,UAAU,kBAAb,SACKgQ,EAAW,aACR,wGAER,eAAC,IAAD,CAAMhQ,UAAU,oDAAoDU,GAAG,QAAvE,UACK,IADL,iBA3BK,WACrB,IAAMwG,EAAS,GAMf,OAJAxK,EAAehC,EAASK,QAAQ4C,SAAQ,SAAAwJ,GACpCD,EAAO5N,KAAKoB,EAASK,OAAO6B,QAAO,SAAAwK,GAAK,OAAIA,EAAK,OAAaD,SAG3DD,EAyBMG,GAAmB/C,KAAI,SAACyD,EAAaxI,GAAd,OACpB,cAAC,GAAD,CAEIS,UAAS,UAAKT,GACd0G,GAAE,UAAK5J,IAAOK,EAAehC,EAASK,QAAQwE,IAAIrD,OAAO,UAAvD,aACFS,eAAgBoL,GAHXxI,OAMX2Q,EAAqB5S,SAASnD,KAAqBgW,EAAqB7S,SAASnD,IAC/E,cAAC,GAAD,CAAU6F,UAAU,eAAeiG,GAAG,iBAAiBC,YAAaxL,EAASI,cC9DtF,SAASsV,KAAe,IAC3BC,EAAaC,cAAbD,SAMR,OAJA3S,qBAAU,WACNwH,OAAOqL,SAAS,EAAG,KACpB,CAACF,IAEG,KCJX,IAoEeG,GApEF,SAAA/I,GAAU,IAAD,EACGhK,qBAAWtC,GAAvBjB,EADS,oBACTA,OAQHsU,EAAW,SAAC,GAAD,QAAG/H,YAAH,MAAU,GAAV,MAAcgI,aAAd,MAAsB,GAAtB,MAA0BjI,aAA1B,MAAkC,GAAlC,MAAsCrF,WAAtC,MAA4C,GAA5C,QAEJ,mBAATsF,EACI,sBAAKzG,UAAU,kBAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,mBAAGA,UAAU,6BAAb,4BAEJ,qBAAKA,UAAU,yBAAyBiB,IAAKuF,EAAOrF,IAAKA,OAE7D,sBAAKnB,UAAU,wBAAf,UACI,oBAAIA,UAAU,wBAAd,SAAuCyG,IACvC,mBAAGzG,UAAU,yBAAb,SAAuCyO,UAI/C,eAAC,IAAD,CAAM/N,GAAE,gBAAW8E,GAAaiB,EAAM,UAAYzG,UAAU,kBAA5D,UACI,qBAAKA,UAAU,6BAAf,SACI,qBAAKA,UAAU,yBAAyBiB,IAAKuF,EAAOrF,IAAKA,MAE7D,sBAAKnB,UAAU,wBAAf,UACI,oBAAIA,UAAU,wBAAd,SAAuCyG,IACvC,mBAAGzG,UAAU,yBAAb,SAAuCyO,WAKvD,OACI,qBAAKzO,UAAU,OAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,0CACA,qBAAKA,UAAU,aAAf,SACK9F,EAAOoK,KAAI,SAACiD,EAAShI,GAClB,IAAMkR,EACqB,aAAvBlJ,EAAO,SAEsB,eAAvBA,EAAO,SAEgB,gBAAvBA,EAAO,QAJb,WACUA,EAAO,QAKY,oBAAvBA,EAAO,QAAP,wBAEA,GACV,OACI,cAACiH,EAAD,CAEI/H,KAAMc,EAAO,QACbkH,MAAOgC,EACPjK,MAAOG,GAAcY,EAAO,SAC5BpG,IAAKyF,GAAeW,EAAO,UAJtBhI,cCgBtBmR,GAvEE,SAAC,GAAkB,IACxBvU,EADuB,EAAfwU,SACRxU,IAER,GADA0D,QAAQoH,IAAI,MAAO9K,IACdA,EAAK,OAAO,KAKjB,OACI,qCACI,uBAAM6D,UAAU,YAAY0O,SALd,aAKd,UACI,sBAAK1O,UAAU,UAAf,UAEI,oBAAIA,UAAU,mBAAd,6BACA,mBAAGA,UAAU,kBAAb,SAAgC7D,EAAID,OAAO,gBAE3C,sBAAK8D,UAAU,gDAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,uCAAd,uBACA,cAAC,GAAD,OAGJ,sBAAKA,UAAU,sBAAf,UACI,oBAAIA,UAAU,wCAAd,8BACA,cAAC,GAAD,CAAiBxG,KAAM,CAAEgS,QAAS,OAAQrP,IAAKA,cAO3D,sBAAK6D,UAAU,kBAAf,UACI,wBACIA,UAAU,6CAEV3G,KAAK,SAHT,0BAMA,wBAAQ2G,UAAU,2CAA2CS,QAhCzD,aAgCJ,8BAwBR,qBAAKT,UAAU,0BAAf,SACI,qBAAKA,UAAU,UAAf,SACI,wBAAQA,UAAU,oBAAlB,4B,SC8CL4Q,GA/GG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASpX,EAAW,EAAXA,KAAW,EACSgE,qBAAWtC,GADpB,0BAC5BhB,EAD4B,EAC5BA,gBAAiBK,EADW,EACXA,KAAQkB,EADG,KAG/BoV,EACU,aAAZD,GAEkB,gBAAZA,EADA,GAGY,eAAZA,EACA,GACA,EAQJE,EAAa,SAAC3Q,EAAG7H,GAInB,OAHA6H,EAAEC,OAAOC,OAGD/H,GACJ,IAAK,MACD,GAAIiC,EAAKf,GAAMoX,GAASzS,QAAU0S,EAAO,OAEzC,OAAOpV,EAAS,CACZrC,KAAM,UACNG,KAAK,2BACEgB,GADH,mBAECf,EAFD,2BAGOe,EAAKf,IAHZ,mBAIKoX,EAJL,uBAImBrW,EAAKf,GAAMoX,IAJ9B,CAIwC,WAKpD,IAAK,SAGD,OAAOnV,EAAS,CACZrC,KAAM,UACNG,KAAK,2BACEgB,GADH,mBAECf,EAFD,2BAGOe,EAAKf,IAHZ,mBAIKoX,EAAUrW,EAAKf,GAAMoX,GAASG,OAC3B,EACAxW,EAAKf,GAAMoX,GAASzS,OAAS,SAKjD,QACI,OAAOyB,QAAQoH,IAAI,0CAyBzBgB,EAAgBzC,GAAarL,EAAiB,SAEpD,OACI,sBAAK6F,UAAU,aAAf,UACI,wBACIA,UAAU,0CACVS,QAAS,SAAAL,GAAC,OAAI2Q,EAAW3Q,EAAG,WAFhC,eAKA,uBACIJ,UAAS,iDAA4C6Q,GACrDpK,KAAI,UAAKwB,EAAL,aAAuBxO,GAC3B2Q,GAAE,UAAKnC,EAAL,aAAuBxO,GACzBwX,WAhFQ,SAAA7Q,GAChB,IAAM8Q,EAAW9Q,EAAE+Q,MAAQ/Q,EAAE+Q,MAAQ/Q,EAAEgR,QACnCF,EAAW,KAAOA,EAAW,IAAMA,EAAW,KAC9C9Q,EAAE2K,kBA8EEV,SAnCS,SAAAjK,GACjB,IAAMiR,EAAajR,EAAEC,OAAOrH,MAAQ8X,EAAQA,EAAQ1Q,EAAEC,OAAOrH,MAQ7D0C,EAAS,CACLrC,KAAM,UACNG,KAAK,2BACEgB,GADH,mBAECf,EAFD,2BAGOe,EAAKf,IAHZ,mBAIKoX,EAJL,aARc,WAElB,IADA,IAAIS,EAAM,GACD/R,EAAI,EAAGA,EAAI8R,EAAY9R,IAAK+R,EAAIhY,KAAK,IAC9C,OAAOgY,EASgBC,WAqBnB9Q,QAAS,SAAAL,GAAC,OAAIA,EAAEC,OAAOmR,UACvBxY,MAAOwB,EAAKf,GAAMoX,GAAWrW,EAAKf,GAAMoX,GAASzS,OAAS,EAC1D/E,KAAK,SACLoY,IAAI,IACJC,IAAKZ,EACLtG,QAAQ,SACRmH,MAAM,iCAEV,wBACI3R,UAAU,uCACVS,QAAS,SAAAL,GAAC,OAAI2Q,EAAW3Q,EAAG,QAFhC,mBCuEGwR,GA7KO,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,UAAWhB,EAA+C,EAA/CA,QAA+C,IAAtChU,eAAsC,MAA5B,GAA4B,EAAxBpD,EAAwB,EAAxBA,KAAMqQ,EAAkB,EAAlBA,YAAkB,EACxCrM,qBAAWtC,GAD6B,0BACtEX,EADsE,EACtEA,KAAME,EADgE,EAChEA,SAAYgB,EADoD,KAGzEoW,EAAmBtM,GAAa3I,EAAS,SAEzCiU,EAAoB,aAAZD,EAAyB,EAAgB,eAAZA,EAA2B,EAAI,EAEpEE,EAAa,SAAC3Q,EAAG7H,GACnB6H,EAAEC,OAAOC,OACT,IAAMyR,EAAO,aAAOvX,EAAKf,GAAMoX,IACzBmB,EAAgB5V,SAAS5B,EAAKf,GAAMoX,GAASgB,GAAWhV,KAAa,EAE3E,OAAQtE,GACJ,IAAK,MACD,GAAIyZ,GAAiBlB,EAAO,OAM5B,OAJAiB,EAAQF,GAAR,2BACOE,EAAQF,IADf,mBAEKhV,EAAUmV,EAAgB,IAExBtW,EAAS,CACZrC,KAAM,UACNG,KAAK,2BACEgB,GADH,mBAECf,EAFD,2BAGOe,EAAKf,IAHZ,mBAIKoX,EAAUkB,QAK3B,IAAK,SACD,GAAIC,EAAgB,EAAG,OAMvB,OAJAD,EAAQF,GAAR,2BACOE,EAAQF,IADf,mBAEKhV,EAAUmV,EAAgB,IAExBtW,EAAS,CACZrC,KAAM,UACNG,KAAK,2BACEgB,GADH,mBAECf,EAFD,2BAGOe,EAAKf,IAHZ,mBAIKoX,EAAUkB,QAI3B,QACI,OAAOlS,QAAQoH,IAAI,6CAIzBgL,EAAe,SAAA7R,GACjB,IAAMiR,EAAajR,EAAEC,OAAOrH,MAAQ8X,EAAQA,EAAQ1Q,EAAEC,OAAOrH,MAEvD+Y,EAAO,aAAOvX,EAAKf,GAAMoX,IAC/BkB,EAAQF,GAAR,2BACOE,EAAQF,IADf,mBAEKhV,EAAUT,SAASiV,IAAe,IAGvC3V,EAAS,CACLrC,KAAM,UACNG,KAAK,2BACEgB,GADH,mBAECf,EAFD,2BAGOe,EAAKf,IAHZ,mBAIKoX,EAAUkB,SA2B3B,OAFArU,qBAAU,cAAU,IAGhB,qBAAKsC,UAAU,iBAAf,SACiB,gBAAZ6Q,EACG,mCACI,yBACI7Q,UAAU,4CACVyG,KAAI,eAAUoL,EAAY,GAC1BzH,GAAE,eAAUyH,EAAY,GACxB7Y,MAAOkF,OAAOC,KAAK3D,EAAKf,GAAMoX,GAASgB,IACvCxH,SA9BM,SAAAjK,GACtB,IAAM2R,EAAO,aAAOvX,EAAKf,GAAMoX,IAC/BkB,EAAQF,GAAR,gBAEKzR,EAAEC,OAAOrH,MAA2B,eAAnBoH,EAAEC,OAAOrH,MAAyB,EAAI,IAG5D0C,EAAS,CACLrC,KAAM,UACNG,KAAK,2BACEgB,GADH,mBAECf,EAFD,2BAGOe,EAAKf,IAHZ,mBAIKoX,EAAUkB,SAYX,UAMI,gDACCrX,EAASI,IAAIwJ,KAAI,SAACzH,EAAS0C,GAAV,OACd,iCAAiB1C,EAAO,SAAX0C,WAIT,QAAhBuK,EACA,qCACI,uBACI9J,UAAS,uDAAkD8R,GAC3DvH,QAAO,UAAKuH,EAAL,aAA0BtM,GAAaqL,EAAS,SAAhD,YAA4DgB,EAAY,GAFnF,SAGKhV,IAEL,sBAAKmD,UAAU,4BAAf,UACI,qBAAKA,UAAU,oDACf,uBACIA,UAAS,yDAAoD8R,GAC7D1H,GAAI0H,EACJrL,KAAI,UAAKqL,EAAL,aAA0BtM,GAAaqL,EAAS,SAAhD,YAA4DgB,EAAY,GAC5E7Y,MAAO,EACPsI,UAAQ,EACRb,QAAS,SAAAL,GAAC,OAAIA,EAAEC,OAAOmR,UACvBnH,SAAU4H,EACV5Y,KAAK,SACLoY,IAAI,IACJC,IAAI,IACJlH,QAAQ,SACRmH,MAAM,iCAEV,qBAAK3R,UAAU,uDAIvB,qCACI,uBACIA,UAAS,uDAAkD8R,GAC3DvH,QAAO,UAAKuH,EAAL,aAA0BtM,GAAaqL,EAAS,SAAhD,YAA4DgB,EAAY,GAFnF,SAGKhV,IAEL,sBAAKmD,UAAU,4BAAf,UACI,wBACIA,UAAU,kDACVS,QAAS,SAAAL,GAAC,OAAI2Q,EAAW3Q,EAAG,WAFhC,eAKA,uBACIJ,UAAS,yDAAoD8R,GAC7D1H,GAAI0H,EACJrL,KAAI,UAAKqL,EAAL,aAA0BtM,GAAaqL,EAAS,SAAhD,YAA4DgB,EAAY,GAC5E7Y,MAAOwB,EAAKf,GAAMoX,GAASgB,GAAWhV,IAAY,EAClD4D,QAAS,SAAAL,GAAC,OAAIA,EAAEC,OAAOmR,UACvBnH,SAAU4H,EACV5Y,KAAK,SACLoY,IAAI,IACJC,IAAI,IACJlH,QAAQ,SACRmH,MAAM,iCAEV,wBAAQ3R,UAAU,+CAA+CS,QAAS,SAAAL,GAAC,OAAI2Q,EAAW3Q,EAAG,QAA7F,wBCxJT8R,GAbQ,SAACvV,EAAgBlD,GAUpC,OATqBkD,EAChBC,QACG,SAAAC,GAAO,OAAIZ,EAAU,MAAOY,EAAO,MAAYZ,EAAU,QAAUA,EAAU,KAAMY,EAAO,MAAYZ,EAAU,SAEnHkB,QAAO,SAACC,EAAKC,GAEV,YADqBuC,IAAjBvC,EAAI,MAA2BD,EAAIC,EAAI,QAAWD,EAAIC,EAAI,MAAYA,EAAI,MACvED,IACR,IAEa3D,IC4VT0Y,GA3VG,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAO5U,EAA4B,EAA5BA,YAAa/C,EAAe,EAAfA,SAAe,EACCgD,qBAAWtC,GADZ,0BAC3CX,EAD2C,EAC3CA,KAAME,EADqC,EACrCA,SAAUR,EAD2B,EAC3BA,OAAQT,EADmB,EACnBA,KAAQiC,EADW,OAE9BmF,mBAAS,IAFqB,mBAE7CwR,EAF6C,KAExCC,EAFwC,KAIpD5U,qBAAU,WACN,GAAiC,IAA7BQ,OAAOC,KAAK3D,GAAM4D,OAAc,CAiBhC1C,EAAS,CAAErC,KAAM,UAAWG,KAhBR,WAChB,IAAM8E,EAAa,CACf,WAAY,GACZ,aAAc,GACd,cAAe,GACf,kBAAmB,IAQvB,OALe5B,EAAehC,EAASK,QAAQoC,QAAO,SAACC,EAAKC,GAExD,OADKD,EAAIC,KAAOD,EAAIC,GAAQiB,GACrBlB,IACR,IAK2BiB,QAGvC,IAEH,IAKMuJ,EAAqBlN,EAASK,OAAO6B,QAAO,SAAAwK,GAAK,OAAIA,EAAK,OAAa3N,KAAM0D,QALlE,SAACC,EAAKC,GAEnB,OADAD,EAAI9D,KAAK+D,EAAI,SACND,IAGyF,IAK9FmV,EAAWH,EAAMlG,OAAO3E,QACxBiL,EAA2B,eAAbD,EAA4BA,EAAS1M,cAAgBL,GAAa+M,EAAU,kBAE1FE,EAASD,EAAYvU,cAAcX,SAAS,OAC5C,MACAkV,EAAYvU,cAAcX,SAAS,SACnC,QACAkV,EAEAE,EAA4B,aAAhBF,EAA6B,EAAoB,eAAhBA,EAA+B,EAAoB,gBAAhBA,EAAgC,GAAK,EAErHG,EACFzU,OAAOC,KAAK3D,GAAM4D,OAAS,EACrB5D,EAAKf,GAAM+Y,GAAarV,QAAO,SAACC,EAAKC,GAOjC,OALIa,OAAOkK,OAAO/K,GAAMF,QAAO,SAACuB,EAAGkU,GAAJ,OAAUlU,EAAIkU,IAAG,KAAOF,EACnDtV,EAAI9D,MAAK,GAET8D,EAAI9D,MAAK,GAEN8D,IACR,IACH,GAEJyV,EAAkB,SAAApZ,GAAI,OAAIiC,EAAS,CAAErC,KAAM,UAAWG,KAAMC,KA0E5D+U,EAAW,SAAC,GAAD,QAAG/H,YAAH,MAAU,GAAV,MAAcgI,aAAd,MAAsB,GAAtB,MAA0BjI,aAA1B,MAAkC,GAAlC,MAAsCrF,WAAtC,MAA4C,GAA5C,QAEJ,mBAATsF,EACI,sBAAKzG,UAAU,kBAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,mBAAGA,UAAU,6BAAb,4BAEJ,qBAAKA,UAAU,yBAAyBiB,IAAKuF,EAAOrF,IAAKA,OAE7D,sBAAKnB,UAAU,wBAAf,UACI,oBAAIA,UAAU,wBAAd,SAAuCyG,IACvC,mBAAGzG,UAAU,yBAAb,SAAuCyO,UAI/C,eAAC,IAAD,CAAM/N,GAAE,gBAAW8E,GAAaiB,EAAM,UAAYzG,UAAU,kBAA5D,UACI,qBAAKA,UAAU,6BAAf,SACI,qBAAKA,UAAU,yBAAyBiB,IAAKuF,EAAOrF,IAAKA,MAE7D,sBAAKnB,UAAU,wBAAf,UACI,oBAAIA,UAAU,wBAAd,SAAuCyG,EAAKnJ,SAAS,QAAU,aAAemJ,IAC9E,mBAAGzG,UAAU,oBAAb,SAAkCyO,WAS5CqE,EAAa,SAAAhJ,GAAW,OAAI5P,EAAOmM,MAAK,SAAAkB,GAAO,OAAIA,EAAO,UAAgBuC,MAtK5B,EAwKlBjJ,oBAAS,GAxKS,mBAwK7CC,EAxK6C,KAwKlCC,EAxKkC,KA0KpD,OAAOyR,EAAYlV,SAAS,QACxB,sBAAK0C,UAAS,iCAA4BuS,GAA1C,UACI,qBAAKvS,UAAU,8BAAf,SACI,qBAAKiB,IAAK0F,GAAc6L,GAAcrR,IAAKyF,GAAe4L,OAG9D,qBAAKxS,UAAU,6BAAf,SACI,sBAAKA,UAAU,8CAAf,UACI,oBAAIA,UAAU,mBAAd,SAAkCwS,IAClC,mBAAGxS,UAAU,oCAAb,SACK8S,EAAW,mBAAX,aAAgDA,EAAW,mBAAX,cAErD,mBAAG9S,UAAU,oCAAb,SACK8S,EAAW,mBAAmB,kBAAoBA,EAAW,mBAAmB,mBAErF,mBAAG9S,UAAU,oCAAb,SACK8S,EAAW,mBAAmB,kBAAoBA,EAAW,mBAAmB,mBAErF,mBACI9S,UAAU,6BACVQ,KAAK,0CACLH,OAAO,SACP8K,IAAI,aAJR,uBAOA,oBAAGnL,UAAU,gBAAgBS,QAjCpB,SAAAL,GACrBwP,UAAUC,UAAUC,UAAU1P,EAAEC,OAAO2K,YAgC3B,wCAC+B,mBAAGhL,UAAU,cAAc0P,cAAY,iBAI9E,sBAAK1P,UAAU,4BAAf,UACI,qDACA,qBAAKA,UAAU,aAAf,SACK9F,EAAOoK,KAAI,SAACiD,EAAShI,GAClB,OAAOgI,EAAO,UAAgBiL,EAC1B,cAAChE,EAAD,CAEI/H,KAAMc,EAAO,QACbf,MAAOG,GAAcY,EAAO,SAC5BpG,IAAKyF,GAAeW,EAAO,UAHtBhI,GAKT,gBAMpB,sBAAKS,UAAS,iCAA4BuS,GAA1C,UACI,sBAAKvS,UAAU,8BAAf,UACkB,aAAbuS,GAA2BzR,GACxB,qBAAKd,UAAU,oBAAf,SACI,sBAAKA,UAAU,qCAAf,UACI,oBAAGA,UAAU,UAAb,mBACU,+CADV,mCAGA,wBAAQA,UAAU,yBAAyBS,QAAS,kBAAMM,GAAa,IAAvE,oBAMZ,qBAAKE,IAAK0F,GAAc6L,GAAcrR,IAAKyF,GAAe4L,QAG9D,qBAAKxS,UAAU,6BAAf,SACI,sBAAKA,UAAU,8CAAf,UACI,oBAAIA,UAAU,mBAAd,mBAAqCwS,EAArC,eAAuDM,EAAWN,GAAX,UACtD9V,EAAehC,EAASK,QAAQqD,OAAS,GACtC,qCACI,mBAAG4B,UAAU,mDAAb,uBACA,qBAAKA,UAAU,mBAAf,SACKtD,EAAehC,EAASK,QAAQuJ,KAAI,SAAC6C,EAAM5H,GACxC,MAAoB,eAAbgT,EACuC,QAA1CL,GAAexX,EAASK,OAAQoM,IAC5B,wBAEInH,UAAS,mDACLvG,IAAS0N,EAAO,UAAY,IAEhC1G,QAAS,kBAAMoS,EAAgB1L,IALnC,SAMK9K,IAAO8K,GAAMjL,OAAO,WALhBqD,GASb,wBAEIS,UAAS,mDACLvG,IAAS0N,EAAO,UAAY,IAEhC1G,QAAS,kBAAMoS,EAAgB1L,IALnC,SAMK9K,IAAO8K,GAAMjL,OAAO,WALhBqD,QAUP,eAAbgT,GAAuE,QAA1CL,GAAexX,EAASK,OAAQtB,IAC1D,mBAAGuG,UAAU,mCAAb,oDAIXtD,EAAehC,EAASK,QAAQqD,OAAS,GACtC,mBAAG4B,UAAU,wCAAb,SAAsD6G,UAKpD,eAAb0L,GAAuE,QAA1CL,GAAexX,EAASK,OAAQtB,GAAkB,KAAOiD,EAAehC,EAASK,QACxGqD,OAAS,EACZ,qBAAK4B,UAAU,uBAAf,SACI,sBAAKA,UAAU,wCAAf,UACI,mBAAGA,UAAU,0CAAb,sBACA,cAAC,GAAD,CAAW6Q,QAAS2B,EAAa/Y,KAAMA,SAG/C,KAEJ,qBAAKuG,UAAU,4BAAf,SACK9B,OAAOC,KAAK3D,GAAM4D,OAAS,GACxB,qCACK5D,EAAKf,GAAM+Y,GAAapU,OAAS,GAC9B,mBAAG4B,UAAU,0BAAb,kFAIHxF,EAAKf,GAAM+Y,GAAalO,KAAI,SAAC0F,EAAK6H,GAC/B,OACI,sBAAK7R,UAAU,sBAAf,UACI,oBAAIA,UAAU,iBAAd,mBAAmCyS,EAAnC,YAA6CZ,EAAY,KACxC,gBAAhBW,EACG,cAAC,GAAD,CAAe/Y,KAAMA,EAAMoX,QAAS2B,EAAaX,UAAWA,IAE5DjK,EAAmBtD,KAAI,SAACzH,EAASqF,GAAV,OACnB,cAAC,GAAD,CACI4H,YAAaoI,GAAexX,EAASK,OAAQtB,GAC7CA,KAAMA,EAENoX,QAAS2B,EACTX,UAAWA,EACXhV,QAASA,GAHJqF,QATqB2P,WAuB9D,qBAAK7R,UAAU,kBAAf,SACI,sBAAKA,UAAU,mCAAf,UACI,mBAAGA,UAAU,uBAAb,SAAqCqS,IACrC,wBAAQrS,UAAU,2CAA2CS,QAnQrD,SAAAL,GACpB,QAAmBR,IAAfpF,EAAKf,GAAT,CAEA,IAAIsZ,EAAiBvY,EAAKf,GAAM+Y,GAEhC,GAA8C,QAA1CN,GAAexX,EAASK,OAAQtB,IAAmC,aAAhB+Y,EAA4B,CAQ/E,IAPA,IAAMQ,EAAY,GAEZC,EAASrL,EAAmBzK,QAAO,SAACC,EAAKC,GAE3C,OADAD,EAAIC,GAAQ,EACLD,IACR,IAEMmC,EAAI,EAAGA,EAAI/E,EAAKf,GAAM+Y,GAAapU,OAAQmB,IAChDyT,EAAU1Z,KAAK2Z,GAGnBF,EAAiBC,EACjBtX,EAAS,CACLrC,KAAM,UACNG,KAAK,2BACEgB,GADH,mBAECf,EAFD,2BAGOe,EAAKf,IAHZ,mBAIK+Y,EAAcO,aAIxB,IAAoB,aAAhBP,GAA8C,eAAhBA,IAEjCG,EAAYrV,UAAS,GAAQ,CAC7B,IAAM4V,EAAeP,EAChBrO,KAAI,SAAC1G,EAAMsE,GAAP,OAAmBtE,EAAmB,GAAZsE,EAAQ,KACtCtF,QAAO,SAAAgB,GAAI,MAAa,KAATA,KACf8H,KAAK,MAGV,YADA4M,EAAO,MAAD,OAAOY,EAAa9U,OAAS,EAAI,GAAK,KAAtC,YAA8C8U,EAA9C,6BAA+ER,EAA/E,cAKd,GAAoB,gBAAhBF,GACIG,EAAYrV,UAAS,GAD7B,CAEQ,IAAM4V,EAAeP,EAChBrO,KAAI,SAAC1G,EAAMsE,GAAP,OAAmBtE,EAAmB,GAAZsE,EAAQ,KACtCtF,QAAO,SAAAgB,GAAI,MAAa,KAATA,KACf8H,KAAK,MAEV4M,EAAO,oCAAD,OAAqCY,EAAa9U,OAAS,EAAI,GAAK,KAApE,YAA4E8U,SAI1F1V,EAAY,2BACL/C,GADI,mBAENhB,EAFM,YAAC,eAGDgB,EAAShB,IAHT,mBAIF+Y,EAAcO,OAGvBta,eAAeC,QACX,WACAC,KAAKC,UAAL,2BACO6B,GADP,mBAEKhB,EAFL,2BAGWgB,EAAShB,IAHpB,mBAIS+Y,EAAcO,QAI3BpE,MAAM,gCA8LM,SACKzG,GAAczN,EAAU+X,GAAe,EAAI,iBAAmB,qBAK3E,sBAAKxS,UAAU,4BAAf,UACI,qDACA,qBAAKA,UAAU,aAAf,SACK9F,EAAOoK,KAAI,SAACiD,EAAShI,GAClB,OAAOgI,EAAO,UAAgBiL,EAC1B,cAAChE,EAAD,CAEI/H,KAAMc,EAAO,QACbf,MAAOG,GAAcY,EAAO,SAC5BpG,IAAKyF,GAAeW,EAAO,UAHtBhI,GAKT,iBCnVb4T,GAXE,WACb,OACI,yBAASnT,UAAU,WAAnB,SACI,sBAAKA,UAAU,UAAf,UACI,0DACA,sJCsEDoT,I,OAzDH,WAAO,IAAD,EACoBvS,mBAAS,GAD7B,mBACPD,EADO,KACI4M,EADJ,OAEkB3M,oBAAS,kBAAMlI,KAAKkC,MAAMpC,eAAemC,QAAQ,cAAgB,MAFnF,mBAEPH,EAFO,KAEG+C,EAFH,KAmBd,OAfAE,qBAAU,WAIN,IAFA,IAAIkO,EAAQ,EAEHrM,EAAI,EAAGA,EAAIrB,OAAOkK,OAAO3N,GAAU2D,OAAQmB,IAGhD,IAFA,IAAM8T,EAAiBnV,OAAOkK,OAAOlK,OAAOkK,OAAO3N,GAAU8E,IAEpD+T,EAAI,EAAGA,EAAID,EAAejV,OAAQkV,IACvC1H,GAASyH,EAAeC,GAAGlV,QAAU,EAI7CoP,EAAa5B,KACd,CAACnR,IAGA,cAAC,EAAD,UACI,eAAC,IAAD,WACI,cAAC2V,GAAD,IACA,cAAC,EAAD,CAAW5S,YAAaA,IACxB,cAAC,EAAD,CAAQoD,UAAWA,IACnB,eAAC,IAAD,WACI,cAAC,IAAD,CAAO2S,KAAK,YAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,yBAAyBC,UAAWzD,KAChD,cAAC,IAAD,CAAOwD,KAAK,YAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CACIA,KAAK,iBACLC,UAAW,SAAA/L,GAAK,OAAI,cAAC,GAAD,2BAAeA,GAAf,IAAsBhN,SAAUA,EAAU+C,YAAaA,QAE/E,cAAC,IAAD,CAAO+V,KAAK,QAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,aAAaC,UAAW9C,KACpC,cAAC,IAAD,CAAO6C,KAAK,QAAZ,SACI,cAAC,GAAD,CAAM9Y,SAAUA,EAAU+C,YAAaA,EAAagQ,aAAcA,MAEtE,cAAC,IAAD,CAAO+F,KAAK,IAAZ,SACI,cAAC,GAAD,CAAM9Y,SAAUA,SAGxB,cAAC,GAAD,WC3DDgZ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3G,MAAK,YAAkD,IAA/C4G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.592656c1.chunk.js","sourcesContent":["export const reducer = (state, action) => {\r\n    const pushToLocalState = () => {\r\n        const getCircularReplacer = () => {\r\n            const seen = new WeakSet()\r\n            return (key, value) => {\r\n                if (typeof value === 'object' && value !== null) {\r\n                    if (seen.has(value)) {\r\n                        return\r\n                    }\r\n                    seen.add(value)\r\n                }\r\n                return value\r\n            }\r\n        }\r\n        sessionStorage.setItem('state', JSON.stringify(state, getCircularReplacer()))\r\n    }\r\n\r\n    const newState = []\r\n    switch (action.type) {\r\n        case 'setOrderCount':\r\n            newState.push({\r\n                ...state,\r\n                orderCount: action.data\r\n            })\r\n            break\r\n        case 'setDate':\r\n            newState.push({\r\n                ...state,\r\n                date: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'setMatchedCoupon':\r\n            newState.push({\r\n                ...state,\r\n                matchedCoupon: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'setCoupon':\r\n            newState.push({\r\n                ...state,\r\n                couponCode: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'setContactInfo':\r\n            newState.push({\r\n                ...state,\r\n                contactInfo: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'setPickup':\r\n            newState.push({\r\n                ...state,\r\n                pickup: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'setAddress':\r\n            newState.push({\r\n                ...state,\r\n                deliveryAddress: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'setPickupOptions':\r\n            newState.push({\r\n                ...state,\r\n                pickupOptions: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'setDelivery':\r\n            newState.push({\r\n                ...state,\r\n                delivery: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'setTotal':\r\n            newState.push({\r\n                ...state,\r\n                total: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'setPrices':\r\n            newState.push({\r\n                ...state,\r\n                prices: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'selectedFlavour':\r\n            newState.push({\r\n                ...state,\r\n                selectedFlavour: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'loading':\r\n            newState.push({\r\n                ...state,\r\n                loading: action.data\r\n            })\r\n            break\r\n        case 'toggleNav':\r\n            newState.push({\r\n                ...state,\r\n                showHamburger: !state.showHamburger\r\n            })\r\n            break\r\n        case 'setCouponList':\r\n            newState.push({\r\n                ...state,\r\n                couponList: action.data\r\n            })\r\n            break\r\n        case 'setBulkCalendar':\r\n            newState.push({\r\n                ...state,\r\n                bulkCalendar: action.data\r\n            })\r\n            break\r\n        case 'setCart':\r\n            newState.push({\r\n                ...state,\r\n                cart: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        case 'setCheckout':\r\n            newState.push({\r\n                ...state,\r\n                checkout: action.data\r\n            })\r\n            break\r\n        case 'setFlavours':\r\n            newState.push({\r\n                ...state,\r\n                flavours: action.data\r\n            })\r\n            pushToLocalState()\r\n            break\r\n        default:\r\n            newState.push(null)\r\n            break\r\n    }\r\n    return newState[0]\r\n}\r\n\r\n// const initialCart = state => {\r\n//     const weeklyCart = {\r\n//         'Box of 5': [],\r\n//         'MAC-A-GRAM': [],\r\n//         'Batch of 12': [],\r\n//         'Catering + Bulk': []\r\n//     }\r\n\r\n//     const result = nextOrderDates(state.flavours.weekly).reduce((acc, curr) => {\r\n//         if (!acc[curr]) acc[curr] = weeklyCart\r\n//         return acc\r\n//     }, {})\r\n\r\n//     return result\r\n// }\r\n\r\nconst localStateOverride = () => {\r\n    // const localState = JSON.parse(sessionStorage.getItem('state'))\r\n    // const cart = { ...localState.cart }\r\n\r\n    // if (!localState.cart[thisSaturday()]) {\r\n    //     cart[thisSaturday()] = {\r\n    //         \"Box of 5\": [],\r\n    //         \"MAC-A-GRAM\": [],\r\n    //         \"Batch of 12\": [],\r\n    //         \"Catering + Bulk\": []\r\n    //     }\r\n    // }\r\n    // if (!localState.cart[nextSaturday()]) {\r\n    //     cart[nextSaturday()] = {\r\n    //         \"Box of 5\": [],\r\n    //         \"MAC-A-GRAM\": [],\r\n    //         \"Batch of 12\": [],\r\n    //         \"Catering + Bulk\": []\r\n    //     }\r\n    // }\r\n\r\n    return {\r\n        loading: false,\r\n        showHamburger: false\r\n    }\r\n}\r\n// maybe sessionStorage --sensei Hairbear\r\nexport const initialState = sessionStorage.getItem('state')\r\n    ? {\r\n          ...JSON.parse(sessionStorage.getItem('state')),\r\n          ...localStateOverride()\r\n      }\r\n    : {\r\n          loading: false,\r\n          showHamburger: false,\r\n          flavours: { all: [], weekly: [] },\r\n          selectedFlavour: '',\r\n          cart: {\r\n              //   [thisSaturday()]: {\r\n              //       \"Box of 5\": [],\r\n              //       \"MAC-A-GRAM\": [],\r\n              //       \"Batch of 12\": [],\r\n              //       \"Catering + Bulk\": []\r\n              //   },\r\n              //   [nextSaturday()]: {\r\n              //       \"Box of 5\": [],\r\n              //       \"MAC-A-GRAM\": [],\r\n              //       \"Batch of 12\": [],\r\n              //       \"Catering + Bulk\": []\r\n              //   }\r\n          },\r\n          prices: [],\r\n          total: 0,\r\n          delivery: 'delivery',\r\n          pickupOptions: [],\r\n          bulkCalendar: [],\r\n          deliveryAddress: '',\r\n          pickup: {},\r\n          contactInfo: {\r\n              'user-name': '',\r\n              'user-email': '',\r\n              'user-cell': ''\r\n          },\r\n          couponCode: '',\r\n          couponList: [],\r\n          matchedCoupon: { Code: '', Amount: '', Type: '' },\r\n          date: '00/00/00',\r\n          orderCount: {}\r\n      }\r\n","import React from \"react\"\r\nimport { reducer, initialState } from \"./reducer\"\r\n\r\nexport const Context = React.createContext([initialState, function dispatch() {}])\r\n\r\nexport const Provider = ({ children, key, initCart }) => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState)\r\n\r\n    return <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\r\n}\r\n","export const CLIENT_EMAIL = process.env.REACT_APP_GOOGLE_CLIENT_EMAIL\r\n\r\nexport const PRIVATE_KEY =\r\n    process.env.REACT_APP_GOOGLE_SERVICE_PRIVATE_KEY.replace(/\\\\n/g, \"\\n\")\r\n\r\nexport const SPREADSHEET_ID =\r\n    process.env.REACT_APP_GOOGLE_WEBSITE_CONTENT_SPREADSHEET_ID\r\n\r\nexport const MAC_FLAVOURS_SHEET_ID =\r\n    process.env.REACT_APP_GOOGLE_MAC_FLAVOURS_SHEET_ID\r\n\r\nexport const WEEKLY_FLAVOURS_SHEET_ID =\r\n    process.env.REACT_APP_GOOGLE_WEEKLY_FLAVOURS_SHEET_ID\r\n\r\nexport const GOOGLE_PRICES_SHEET_ID =\r\n    process.env.REACT_APP_GOOGLE_PRICES_SHEET_ID\r\n\r\nexport const GOOGLE_DELIVERY_ID = process.env.REACT_APP_GOOGLE_DELIVERY_ID\r\n\r\nexport const GOOGLE_BULK_CALENDAR_ID = process.env.REACT_APP_GOOGLE_BULK_CALENDAR_ID\r\n\r\nexport const GOOGLE_COUPONS_ID = process.env.REACT_APP_GOOGLE_COUPONS_ID\r\n\r\nexport const GOOGLE_ORDERS_ID = process.env.REACT_APP_GOOGLE_ORDERS_ID\r\n\r\nexport const DISCORD_HOOK = process.env.REACT_APP_DISCORD_HOOK\r\nexport const DISCORD_HOOK_BULK = process.env.REACT_APP_DISCORD_HOOK_BULK\r\n\r\nexport const EMAILJS_USER_ID = process.env.REACT_APP_EMAILJS_USER_ID\r\n\r\nexport const SPECIAL_COUPON = process.env.REACT_APP_SPECIAL_COUPON","import moment from 'moment'\r\n\r\n// return moment info as integer not string\r\nexport const momentInt = (format, day) => parseInt(moment(day).format(format))\r\n\r\nexport const getNextDay = day => {\r\n    // expected value of day is the day of the week in number form ex: tuesday, day = 2\r\n    let daysToDay = parseInt(day) - parseInt(moment().format('d'))\r\n    // add 7 more days if day of the week is today or already passed\r\n    if (daysToDay < 1) daysToDay += 7\r\n    // add another 7 days if it is past thursday or if it is thursday after 8pm\r\n    if (\r\n        (parseInt(moment().format('d')) > 4 && parseInt(moment().format('d')) < 6) ||\r\n        (parseInt(moment().format('d')) === 4 && parseInt(moment().format('H')) > 19)\r\n    )\r\n        daysToDay += 7\r\n    return moment().add(daysToDay, 'days').format('MM/DD/YYYY')\r\n}\r\n\r\nexport const [thisSaturday, nextSaturday] = [\r\n    (format = 'MM/DD/YYYY') => moment(getNextDay(6)).format(format),\r\n    (format = 'MM/DD/YYYY') => moment(getNextDay(6)).add(7, 'days').format(format)\r\n]\r\n\r\n// use the weekly flavours to find the upcoming order dates\r\nexport const nextOrderDates = weeklyFlavours => {\r\n    return weeklyFlavours\r\n        .filter(flavour => {\r\n            // undefined argument is getting the date for current day\r\n            const isFutureFlavour =\r\n                momentInt('DDD', flavour['Date']) > momentInt('DDD') || momentInt('YY', flavour['Date']) > momentInt('YY')\r\n\r\n            const isMoreThanTwoDaysBeforeFlavourDate = moment(flavour['Date']).diff(moment(), 'days') > 2\r\n\r\n            const twoDaysBeforeFlavourDate = momentInt('DDD') === momentInt('DDD', flavour['Date']) - 2\r\n\r\n            const isBeforeEightPm = momentInt('H') < 20\r\n\r\n            return (\r\n                (isFutureFlavour && isMoreThanTwoDaysBeforeFlavourDate) ||\r\n                (isFutureFlavour && twoDaysBeforeFlavourDate && isBeforeEightPm)\r\n            )\r\n        })\r\n        .reduce((acc, curr) => {\r\n            if (!acc.includes(curr['Date'])) acc.push(curr['Date'])\r\n            return acc\r\n        }, [])\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Context } from '../context'\r\nimport { GoogleSpreadsheet } from 'google-spreadsheet'\r\nimport {\r\n    CLIENT_EMAIL,\r\n    PRIVATE_KEY,\r\n    SPREADSHEET_ID,\r\n    MAC_FLAVOURS_SHEET_ID,\r\n    WEEKLY_FLAVOURS_SHEET_ID,\r\n    GOOGLE_PRICES_SHEET_ID,\r\n    GOOGLE_DELIVERY_ID,\r\n    GOOGLE_ORDERS_ID,\r\n    GOOGLE_COUPONS_ID,\r\n    GOOGLE_BULK_CALENDAR_ID\r\n} from '../../utils/configs'\r\nimport { nextOrderDates } from '../../utils/getDates'\r\n\r\nfunction GetSheets({ setCheckout }) {\r\n    const [{ loading, flavours, cart }, dispatch] = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        // set a default image for flavours\r\n        flavours.all.forEach(item => {\r\n            const validExtensions = ['jpg', 'png']\r\n            const extension = (item['Image'] && item['Image'].split('.').reverse()[0]) || ''\r\n\r\n            if (!Boolean(item['Image']) || !validExtensions.includes(extension.toLowerCase())) {\r\n                item['Image'] = 'https://imgur.com/hY9uaS2.jpg'\r\n            }\r\n        })\r\n\r\n        if (Object.keys(cart).length === 0) {\r\n            const initialCart = () => {\r\n                const weeklyCart = {\r\n                    'Box of 5': [],\r\n                    'MAC-A-GRAM': [],\r\n                    'Batch of 12': [],\r\n                    'Catering + Bulk': []\r\n                }\r\n\r\n                const result = nextOrderDates(flavours.weekly).reduce((acc, curr) => {\r\n                    if (!acc[curr]) acc[curr] = weeklyCart\r\n                    return acc\r\n                }, {})\r\n\r\n                return result\r\n            }\r\n\r\n            dispatch({ type: 'setCart', data: initialCart() })\r\n            setCheckout(initialCart())\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [flavours])\r\n\r\n    useEffect(() => {\r\n        const doc = new GoogleSpreadsheet(SPREADSHEET_ID)\r\n        let isCancel = false\r\n        const getGoogleSheets = async () => {\r\n            try {\r\n                dispatch({ type: 'loading', data: true })\r\n\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: CLIENT_EMAIL,\r\n                    private_key: PRIVATE_KEY\r\n                })\r\n                // loads document properties and worksheets\r\n                await doc.loadInfo()\r\n                // get data in each row as objects in an array\r\n                const weekly = await doc.sheetsById[WEEKLY_FLAVOURS_SHEET_ID].getRows()\r\n                if (!isCancel) {\r\n                    dispatch({\r\n                        type: 'setFlavours',\r\n                        data: {\r\n                            all: await doc.sheetsById[MAC_FLAVOURS_SHEET_ID].getRows(),\r\n                            weekly: weekly\r\n                        }\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: 'setPrices',\r\n                        data: await doc.sheetsById[GOOGLE_PRICES_SHEET_ID].getRows()\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: 'setPickupOptions',\r\n                        data: await doc.sheetsById[GOOGLE_DELIVERY_ID].getRows()\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: 'setCouponList',\r\n                        data: await doc.sheetsById[GOOGLE_COUPONS_ID].getRows()\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: 'setBulkCalendar',\r\n                        data: (await doc.sheetsById[GOOGLE_BULK_CALENDAR_ID].getRows()).reduce((acc, curr) => {\r\n                            const monthToInteger = month => {\r\n                                const translator = [\r\n                                    'january',\r\n                                    'feburary',\r\n                                    'march',\r\n                                    'april',\r\n                                    'may',\r\n                                    'june',\r\n                                    'july',\r\n                                    'august',\r\n                                    'september',\r\n                                    'october',\r\n                                    'november',\r\n                                    'december'\r\n                                ]\r\n                                for (let i = 0; i < translator.length; i++) {\r\n                                    if (month.toLowerCase() === translator[i]) return i + 1\r\n                                }\r\n                            }\r\n                            const monthYear = curr._rawData.shift()\r\n                            const month = monthToInteger(monthYear.split(' ')[0].toLowerCase()).toLocaleString('en-US', {\r\n                                minimumIntegerDigits: 2\r\n                            })\r\n                            const year = `20${monthYear.split(' ')[1]}`\r\n\r\n                            const formattedDate = `${year}-${month}-01`\r\n\r\n                            acc[formattedDate] = curr._rawData\r\n                            return acc\r\n                        }, {})\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: 'setOrderCount',\r\n                        data: (await doc.sheetsById[GOOGLE_ORDERS_ID].getRows()).reduce((acc, curr) => {\r\n                            // count the number of orders per date\r\n                            if (\r\n                                curr['Date'] === '' ||\r\n                                curr['Date'] === undefined ||\r\n                                curr['Name'].toLowerCase() === 'total:' ||\r\n                                curr['Name'].toLowerCase() === 'total' ||\r\n                                curr['Name'] === undefined\r\n                            ) {\r\n                                return acc\r\n                            } else if (acc[curr['Date']] === undefined) {\r\n                                acc[curr['Date']] = 1\r\n                            } else if (acc[curr['Date']] > 0) {\r\n                                acc[curr['Date']] += 1\r\n                            }\r\n                            return acc\r\n                        }, {})\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: 'setDate',\r\n                        data: nextOrderDates(weekly)[0]\r\n                    })\r\n                }\r\n            } catch (e) {\r\n                if (!isCancel) {\r\n                    console.error('Error: ', e)\r\n                }\r\n            } finally {\r\n                dispatch({ type: 'loading', data: false })\r\n            }\r\n        }\r\n        getGoogleSheets()\r\n\r\n        return () => {\r\n            isCancel = true\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={loading ? 'overlay--loading' : 'hide'}>\r\n            <div className={loading ? 'loading' : 'hide'} aria-label='site is loading' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetSheets\r\n","import React, { useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Context } from \"../context/index\"\r\n\r\nconst Hamburger = () => {\r\n    const [state, dispatch] = useContext(Context)\r\n    const toggleNav = e => {\r\n        e.target.blur()\r\n        dispatch({ type: \"toggleNav\" })\r\n    }\r\n    const animateClass = state.showHamburger ? \"animate\" : \"\"\r\n    return (\r\n        <>\r\n            <a href=\"#home\" className=\"skip-link visuallyHidden\">\r\n                skip to main content\r\n            </a>\r\n            <nav className=\"nav\">\r\n                {/* <!-- hamburger checkbox starts --> */}\r\n                <button className=\"nav__hamburger\" onClick={e => toggleNav(e)}>\r\n                    <div\r\n                        className={`nav__hamburger__line nav__hamburger__line--top ${animateClass}`}></div>\r\n                    <div\r\n                        className={`nav__hamburger__line nav__hamburger__line--mid ${animateClass}`}></div>\r\n                    <div\r\n                        className={`nav__hamburger__line nav__hamburger__line--bot ${animateClass}`}></div>\r\n                </button>\r\n                <ul className={`nav__links ${animateClass}`}>\r\n                    <li className={animateClass}>\r\n                        <Link\r\n                            to=\"/\"\r\n                            className=\"nav__links__item\"\r\n                            onClick={toggleNav}>\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className={animateClass}>\r\n                        <Link\r\n                            to=\"/flavours\"\r\n                            className=\"nav__links__item\"\r\n                            onClick={toggleNav}>\r\n                            Flavours\r\n                        </Link>\r\n                    </li>\r\n                    <li className={animateClass}>\r\n                        <Link\r\n                            to=\"/products\"\r\n                            className=\"nav__links__item\"\r\n                            onClick={toggleNav}>\r\n                            Products\r\n                        </Link>\r\n                    </li>\r\n                    {/* <li className={animateClass}>\r\n                        <Link\r\n                            to=\"/reviews\"\r\n                            className=\"nav__links__item\"\r\n                            onClick={toggleNav}>\r\n                            Reviews\r\n                        </Link>\r\n                    </li> */}\r\n                    <li className={animateClass}>\r\n                        <Link\r\n                            to=\"/shop\"\r\n                            className=\"nav__links__item\"\r\n                            onClick={toggleNav}>\r\n                            Shop\r\n                        </Link>\r\n                    </li>\r\n                    <li className={animateClass}>\r\n                        <Link\r\n                            to=\"/cart\"\r\n                            className=\"nav__links__item\"\r\n                            onClick={toggleNav}>\r\n                            Cart\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Hamburger\r\n","export default __webpack_public_path__ + \"static/media/che.5d342953.svg\";","export default __webpack_public_path__ + \"static/media/cart.2b32e8ba.svg\";","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Hamburger from './Hamburger'\r\nimport che from '../../assets/che.svg'\r\nimport cart from '../../assets/cart.svg'\r\n\r\nconst Header = ({ cartCount }) => {\r\n    const [msgActive, setMsgActive] = useState(true)\r\n    const classes = cartCount > 0 ? `active` : ''\r\n\r\n    return (\r\n        <header className='header'>\r\n            <div className='header__wrapper wrapper'>\r\n                <Hamburger />\r\n                <Link className='header__che' to='/'>\r\n                    <img className='header__img' src={che} alt='Ché Pâtisserie logo' />\r\n                </Link>\r\n                <Link to='/cart' className='header__cart '>\r\n                    <p aria-label='items in shopping cart' className={`header__cart__count ${classes}`}>\r\n                        {cartCount}\r\n                    </p>\r\n                    <div className='header__img-container'>\r\n                        <img className='header__img' src={cart} alt='cart' />\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n            {msgActive && (\r\n                <div className='header__top-message'>\r\n                    <div className='header__top-message__wrapper wrapper'>\r\n                        <p className='header__p'>\r\n                            {/* 10% OFF {moment(preOrderDates(flavours.weekly)[0]).format(\"MMM DD\")} pre orders. LIMITED spots left! */}\r\n                            NOTICE: Due to rising gas prices, we\r\n                            <br /> have adjusted our delivery fee to <strong>$7</strong>\r\n                        </p>\r\n                        <button className='header__top-message__btn' onClick={() => setMsgActive(false)}>\r\n                            X\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nexport const PrevButton = ({ enabled, onClick }) => (\r\n    <button className=\"embla__button embla__button--prev\" onClick={onClick} disabled={!enabled}>\r\n        <svg className=\"embla__button__svg\" viewBox=\"137.718 -1.001 366.563 644\">\r\n            <path d=\"M428.36 12.5c16.67-16.67 43.76-16.67 60.42 0 16.67 16.67 16.67 43.76 0 60.42L241.7 320c148.25 148.24 230.61 230.6 247.08 247.08 16.67 16.66 16.67 43.75 0 60.42-16.67 16.66-43.76 16.67-60.42 0-27.72-27.71-249.45-249.37-277.16-277.08a42.308 42.308 0 0 1-12.48-30.34c0-11.1 4.1-22.05 12.48-30.42C206.63 234.23 400.64 40.21 428.36 12.5z\" />\r\n        </svg>\r\n    </button>\r\n)\r\n\r\nexport const NextButton = ({ enabled, onClick }) => (\r\n    <button className=\"embla__button embla__button--next\" onClick={onClick} disabled={!enabled}>\r\n        <svg className=\"embla__button__svg\" viewBox=\"0 0 238.003 238.003\">\r\n            <path d=\"M181.776 107.719L78.705 4.648c-6.198-6.198-16.273-6.198-22.47 0s-6.198 16.273 0 22.47l91.883 91.883-91.883 91.883c-6.198 6.198-6.198 16.273 0 22.47s16.273 6.198 22.47 0l103.071-103.039a15.741 15.741 0 0 0 4.64-11.283c0-4.13-1.526-8.199-4.64-11.313z\" />\r\n        </svg>\r\n    </button>\r\n)\r\n","export default __webpack_public_path__ + \"static/media/vertical1.cba4ce2f.JPG\";","export default __webpack_public_path__ + \"static/media/vertical2.6ad3d66f.JPG\";","export default __webpack_public_path__ + \"static/media/vertical3.f52f919c.JPG\";","export default __webpack_public_path__ + \"static/media/vertical4.aea06e7d.JPG\";","export default __webpack_public_path__ + \"static/media/vertical5.f88223b6.JPG\";","export default __webpack_public_path__ + \"static/media/vertical6.0c2fbb3e.JPG\";","export default __webpack_public_path__ + \"static/media/horizontal1.9cbee601.JPG\";","export default __webpack_public_path__ + \"static/media/horizontal2.f91d002d.JPG\";","export default __webpack_public_path__ + \"static/media/horizontal3.79d60b61.JPG\";","export default __webpack_public_path__ + \"static/media/horizontal4.1ea84455.JPG\";","export default __webpack_public_path__ + \"static/media/horizontal5.585008b8.JPG\";","export default __webpack_public_path__ + \"static/media/horizontal6.fd7eb196.JPG\";","import vertical1 from \"./vertical1.JPG\"\r\nimport vertical2 from \"./vertical2.JPG\"\r\nimport vertical3 from \"./vertical3.JPG\"\r\nimport vertical4 from \"./vertical4.JPG\"\r\nimport vertical5 from \"./vertical5.JPG\"\r\nimport vertical6 from \"./vertical6.JPG\"\r\nimport horizontal1 from \"./horizontal1.JPG\"\r\nimport horizontal2 from \"./horizontal2.JPG\"\r\nimport horizontal3 from \"./horizontal3.JPG\"\r\nimport horizontal4 from \"./horizontal4.JPG\"\r\nimport horizontal5 from \"./horizontal5.JPG\"\r\nimport horizontal6 from \"./horizontal6.JPG\"\r\n\r\nexport const verticalMedia = [vertical1, vertical2, vertical3, vertical4, vertical5, vertical6]\r\nexport const verticalMediaByIndex = index => verticalMedia[index % verticalMedia.length]\r\n\r\nexport const horizontalMedia = [horizontal1, horizontal2, horizontal3, horizontal4, horizontal5, horizontal6]\r\nexport const horizontalMediaByIndex = index => horizontalMedia[index % horizontalMedia.length]","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport { useEmblaCarousel } from \"embla-carousel/react\"\r\nimport { PrevButton, NextButton } from \"./EmblaCarouselButtons\"\r\nimport { horizontalMediaByIndex, verticalMediaByIndex } from \"../../assets/carousel/index\"\r\n\r\nconst PARALLAX_FACTOR = 1.2\r\n\r\nconst EmblaCarousel = ({ slides }) => {\r\n    const [viewportRef, embla] = useEmblaCarousel({\r\n        loop: true,\r\n        dragFree: false\r\n    })\r\n    const [prevBtnEnabled, setPrevBtnEnabled] = useState(false)\r\n    const [nextBtnEnabled, setNextBtnEnabled] = useState(false)\r\n    const [parallaxValues, setParallaxValues] = useState([])\r\n    const [width, setWidth] = useState(0)\r\n\r\n    const scrollPrev = useCallback(() => embla && embla.scrollPrev(), [embla])\r\n    const scrollNext = useCallback(() => embla && embla.scrollNext(), [embla])\r\n\r\n    const onSelect = useCallback(() => {\r\n        if (!embla) return\r\n        setPrevBtnEnabled(embla.canScrollPrev())\r\n        setNextBtnEnabled(embla.canScrollNext())\r\n    }, [embla])\r\n\r\n    const onScroll = useCallback(() => {\r\n        if (!embla) return\r\n\r\n        const engine = embla.dangerouslyGetEngine()\r\n        const scrollProgress = embla.scrollProgress()\r\n\r\n        const styles = embla.scrollSnapList().map((scrollSnap, index) => {\r\n            if (!embla.slidesInView().includes(index)) return 0\r\n            let diffToTarget = scrollSnap - scrollProgress\r\n\r\n            if (engine.options.loop) {\r\n                engine.slideLooper.loopPoints.forEach(loopItem => {\r\n                    const target = loopItem.getTarget()\r\n                    if (index === loopItem.index && target !== 0) {\r\n                        const sign = Math.sign(target)\r\n                        if (sign === -1) diffToTarget = scrollSnap - (1 + scrollProgress)\r\n                        if (sign === 1) diffToTarget = scrollSnap + (1 - scrollProgress)\r\n                    }\r\n                })\r\n            }\r\n            return diffToTarget * (-1 / PARALLAX_FACTOR) * 100\r\n        })\r\n        setParallaxValues(styles)\r\n    }, [embla, setParallaxValues])\r\n\r\n    useEffect(() => {\r\n        if (!embla) return\r\n        onSelect()\r\n        onScroll()\r\n        embla.on(\"select\", onSelect)\r\n        embla.on(\"scroll\", onScroll)\r\n        embla.on(\"resize\", onScroll)\r\n    }, [embla, onSelect, onScroll])\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth)\r\n        window.addEventListener(\"resize\", () => setWidth(window.innerWidth))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"embla\">\r\n            <div className=\"embla__viewport\" ref={viewportRef}>\r\n                <div className=\"embla__container\">\r\n                    {slides.map(index => (\r\n                        <div className=\"embla__slide\" key={index}>\r\n                            <div className=\"embla__slide__inner\">\r\n                                <div\r\n                                    className=\"embla__slide__parallax\"\r\n                                    style={{ transform: `translateX(${parallaxValues[index]}%)` }}>\r\n                                    <img\r\n                                        className=\"embla__slide__img\"\r\n                                        src={width > 800 ? horizontalMediaByIndex(index) : verticalMediaByIndex(index)}\r\n                                        alt=\"A cool cat.\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <PrevButton onClick={scrollPrev} enabled={prevBtnEnabled} />\r\n            <NextButton onClick={scrollNext} enabled={nextBtnEnabled} />\r\n        </div>\r\n    )\r\n}\r\nexport default EmblaCarousel\r\n","export const formatString = (string, format) => {\r\n    switch (format) {\r\n        case \"kebab\":\r\n            return string.toLowerCase().split(\" \").join(\"-\")\r\n        case \"snake\":\r\n            return string.toLowerCase().split(\" \").join(\"_\")\r\n        case \"title\":\r\n            return string.replace(\r\n                /\\w\\S*/g,\r\n                t => t.charAt(0).toUpperCase() + t.substr(1).toLowerCase()\r\n            )\r\n        case \"kebab to title\":\r\n            const skipWords = ['of', 'de']\r\n            return string\r\n                .split(\"-\")\r\n                .join(\" \")\r\n                .replace(/\\w\\S*/g, t => {\r\n                    if (skipWords.includes(t)) return t\r\n                    return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase()\r\n                })\r\n        default:\r\n            return string\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { Context } from '../context/index';\r\nimport { formatString } from '../../utils/formatString';\r\n\r\nconst Flavours = ({ className = '', h2 = '', weeklyFlavours, allFlavours }) => {\r\n    const [{ flavours }, dispatch] = useContext(Context);\r\n    const flavourImage = (flavourName) =>\r\n        flavours.all.find((item) => item['Flavour'] === flavourName)['Image'];\r\n\r\n    if (weeklyFlavours && weeklyFlavours.length > 0) {\r\n        const dateArr = weeklyFlavours[0]\r\n            ? weeklyFlavours[0]['Date'].split('/')\r\n            : '00/00/00';\r\n\r\n        return (\r\n            <div className={`flavours--${className} flavours`}>\r\n                {(h2 = !'' && <h2 className='flavours__h2'>{h2}</h2>)}\r\n                <p className='flavours__p'>\r\n                    *Delivery on{' '}\r\n                    {moment(dateArr, 'MM/DD/YYYY').format('MMM Do')}\r\n                </p>\r\n                <div className='flavours__grid'>\r\n                    {weeklyFlavours.map((flavour, i) => {\r\n                        return (\r\n                            <Link\r\n                                key={i}\r\n                                className='flavours__grid-item'\r\n                                to={`/flavours/${formatString(\r\n                                    flavour['Flavour'],\r\n                                    'kebab'\r\n                                )}`}\r\n                                onClick={() =>\r\n                                    dispatch({\r\n                                        type: 'selectedFlavour',\r\n                                        data: flavour['Flavour'],\r\n                                    })\r\n                                }\r\n                            >\r\n                                <img\r\n                                    className='flavours__grid-item__image'\r\n                                    src={flavourImage(flavour['Flavour'])}\r\n                                    alt={`${flavour['Flavour']} macaron`}\r\n                                />\r\n                                <h3 className='flavours__grid-item__name'>\r\n                                    {flavour['Flavour']}\r\n                                </h3>\r\n                            </Link>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (allFlavours) {\r\n        return (\r\n            <div className={`flavours--${className} flavours flavours--all`}>\r\n                {(h2 = !'' && <h2 className='flavours__h2'>{h2}</h2>)}\r\n                <div className='flavours__grid'>\r\n                    {allFlavours.map((flavour, i) => {\r\n                        return (\r\n                            <Link\r\n                                key={i}\r\n                                className={`flavours__grid-item`}\r\n                                to={`/flavours/${formatString(\r\n                                    flavour['Flavour'],\r\n                                    'kebab'\r\n                                )}`}\r\n                                onClick={() =>\r\n                                    dispatch({\r\n                                        type: 'selectedFlavour',\r\n                                        data: flavour['Flavour'],\r\n                                    })\r\n                                }\r\n                            >\r\n                                <img\r\n                                    className='flavours__grid-item__image'\r\n                                    src={flavourImage(flavour['Flavour'])}\r\n                                    alt={`${flavour['Flavour']} macaron`}\r\n                                />\r\n                                <h3 className='flavours__grid-item__name'>\r\n                                    {flavour['Flavour']}\r\n                                </h3>\r\n                            </Link>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Flavours;\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { formatString } from \"../../utils/formatString\"\r\n\r\nconst ShopItem = ({ image, name, altText }) => (\r\n    <Link className=\"shop-item\" to={`/shop/${formatString(name, \"kebab\")}`}>\r\n        <div className=\"shop-item__image-container\">\r\n            <img className=\"shop-item__image\" src={image} alt={altText} />\r\n            <h3 className=\"shop-item__name\">{name}</h3>\r\n        </div>\r\n    </Link>\r\n)\r\n\r\nexport default ShopItem\r\n","import box5 from \"../assets/package/box5.JPG\"\r\nimport macagram from \"../assets/package/macagram.JPG\"\r\nimport batch from \"../assets/package/batch.JPG\"\r\nimport bulk from \"../assets/package/bulk.JPG\"\r\n\r\nexport const productImages = {\r\n    \"Box of 5\": box5,\r\n    \"MAC-A-GRAM\": macagram,\r\n    \"Batch of 12\": batch,\r\n    \"Catering + Bulk\": bulk,\r\n}\r\nexport const productAltText = {\r\n    \"Box of 5\": \"a row of 5 macarons on their side placed inside a kraft paper box\",\r\n    \"MAC-A-GRAM\": \"2 macarons stacked inside a clear cube shaped box\",\r\n    \"Batch of 12\": \"alternative rows of macaron top and bottom shells on a baking tray\",\r\n    \"Catering + Bulk\": \"bulk\",\r\n\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/box5.29f4cf44.JPG\";","export default __webpack_public_path__ + \"static/media/macagram.5a655f50.JPG\";","export default __webpack_public_path__ + \"static/media/batch.5629013f.JPG\";","export default __webpack_public_path__ + \"static/media/bulk.b4df95dc.JPG\";","const awayMessage = `Assorted boxes are not available at the moment. Please DM or email us to place orders for batches and catering!`\r\n\r\nexport default awayMessage","import React, { useContext } from 'react'\r\nimport { Context } from '../../context/index'\r\nimport EmblaCarousel from '../../EmblaCarousel/EmblaCarousel'\r\nimport Flavours from '../Flavours'\r\nimport ShopItem from '../ShopItem'\r\nimport { nextOrderDates } from '../../../utils/getDates'\r\nimport { productAltText, productImages } from '../../../utils/productImages'\r\nimport moment from 'moment'\r\nimport awayMessage from '../../../utils/awayMessage'\r\n// import Calendar from '../../Calender'\r\n\r\nconst SLIDE_COUNT = 5\r\nconst slides = Array.from(Array(SLIDE_COUNT).keys())\r\n\r\nconst Home = () => {\r\n    const [{ flavours, prices }] = useContext(Context)\r\n\r\n    console.log('flavours', flavours)\r\n\r\n    const upcomingFlavours = () => {\r\n        const result = []\r\n        // console.log('nextOrderDates(flavours.weekly)', nextOrderDates(flavours.weekly));\r\n        nextOrderDates(flavours.weekly).forEach(week => {\r\n            console.log('week', week)\r\n            result.push(flavours.weekly.filter(entry => entry['Date'] === week))\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <section className='home'>\r\n            <EmblaCarousel slides={slides} />\r\n            <div className='wrapper'>\r\n                {/* Todo: bulk order Calendar */}\r\n                {/* <Calendar /> */}\r\n                <div className='home__believe'>\r\n                    <h2 className='home__h2 home__h2--believe'>\r\n                        Taste of Extravagance <span className='nowrap'>and Luxury</span>\r\n                    </h2>\r\n                    <p className='home__p home__p--sub-title'>\r\n                        —using traditional techniques <span className='nowrap'>with modern flavours</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        We aspire to bring freshness to this iconic, decadent French pastry that has been well-loved for\r\n                        centuries. Our premium macarons are made with high-quality ingredients, prepared fresh every week, and\r\n                        handled with the utmost care. Our recipes have been adapted to be less sweet with the pairing of more\r\n                        sophisticated choices of fillings and creams. With our attention to detail, individually hand-decorated\r\n                        macarons, and the incorporation of new and trendy flavours, we hope to deliver a modern, yet luxurious\r\n                        experience in each bite.\r\n                    </p>\r\n                </div>\r\n\r\n                {nextOrderDates(flavours.weekly).length < 1 && (\r\n                    <div className='home__away'>\r\n                        <h2 className='home__h2 home__h2--away'>DM Us to Order</h2>\r\n                        <p>{awayMessage}</p>\r\n                    </div>\r\n                )}\r\n\r\n                {upcomingFlavours().map((weeklyNames, i) => (\r\n                    <Flavours\r\n                        key={i}\r\n                        className='this-week'\r\n                        h2={`${moment(nextOrderDates(flavours.weekly)[i]).format('MMM Do')} Flavours`}\r\n                        weeklyFlavours={weeklyNames}\r\n                    />\r\n                ))}\r\n\r\n                <h2>Products & Prices</h2>\r\n                <div className='home__products'>\r\n                    {prices.map((product, i) => (\r\n                        <ShopItem\r\n                            key={i}\r\n                            image={productImages[product['Product']]}\r\n                            altText={productAltText[product['Product']]}\r\n                            name={product['Product']}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useContext } from \"react\"\r\nimport { nextOrderDates } from \"../../../utils/getDates\"\r\nimport Flavours from \"../Flavours\"\r\nimport { Context } from \"../../context/index\"\r\nimport moment from \"moment\"\r\n\r\nconst AllFlavours = props => {\r\n    const [{ flavours }] = useContext(Context)\r\n\r\n    const getNames = (acc, curr) => {\r\n        acc.push(curr[\"Flavour\"])\r\n        return acc\r\n    }\r\n\r\n    const upcomingFlavours = () => {\r\n        const result = []\r\n\r\n        nextOrderDates(flavours.weekly).forEach(week => {\r\n            result.push(flavours.weekly.filter(entry => entry[\"Date\"] === week))\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    const allFlavourNames = flavours.all.reduce(getNames, [])\r\n\r\n    const weeklyFlavourNames = upcomingFlavours().reduce((acc, curr) => {\r\n        acc.push(curr.reduce(getNames, []))\r\n        return acc\r\n    }, [])\r\n\r\n    const otherFlavourNames = allFlavourNames.filter(item => !weeklyFlavourNames.includes(item))\r\n\r\n    const otherFlavours = flavours.all.filter(item => otherFlavourNames.includes(item[\"Flavour\"])).reverse()\r\n\r\n    return (\r\n        <>\r\n            <section className=\"all-flavours\">\r\n                <div className=\"wrapper\">\r\n                    <h2>Our Flavours</h2>\r\n                    <div className=\"all-flavours__gallery\">\r\n                        {upcomingFlavours().map((flavoursArr, i) => (\r\n                            <Flavours\r\n                                key={i}\r\n                                className={`${i}`}\r\n                                h2={`${moment(nextOrderDates(flavours.weekly)[i]).format(\"MMM Do\")}`}\r\n                                weeklyFlavours={flavoursArr}\r\n                            />\r\n                        ))}\r\n                        <Flavours h2=\"All Others\" allFlavours={otherFlavours} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AllFlavours\r\n","import React, { useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { productImages, productAltText } from \"../../../utils/productImages\"\r\nimport { Context } from \"../../context\"\r\nimport { formatString } from \"../../../utils/formatString\"\r\n\r\nconst Products = () => {\r\n    const [{ prices }] = useContext(Context)\r\n\r\n    return (\r\n        <section className=\"products\">\r\n            <div className=\"wrapper\">\r\n                <h2>Products</h2>\r\n                <div className=\"products__item-container\">\r\n                    {prices.map((product, i) => {\r\n                        const formattedName = formatString(product[\"Product\"], \"kebab\")\r\n\r\n                        return (\r\n                            <div className={`products__item products__item--${formattedName}`} key={i}>\r\n                                {formattedName === \"mac-a-gram oos\" ? (\r\n                                    <div className=\"products__item__image-container\">\r\n                                        <div className=\"products__item__oos\">\r\n                                            <p className=\"products__item__oos__text\">Out of Stock</p>\r\n                                        </div>\r\n                                        <img\r\n                                            className=\"products__item__image\"\r\n                                            src={productImages[product[\"Product\"]]}\r\n                                            alt={productAltText[product[\"Product\"]]}\r\n                                        />\r\n                                    </div>\r\n                                ) : (\r\n                                    <Link to={`/shop/${formattedName}`} className=\"products__item__image-container\">\r\n                                        <img\r\n                                            className=\"products__item__image\"\r\n                                            src={productImages[product[\"Product\"]]}\r\n                                            alt={productAltText[product[\"Product\"]]}\r\n                                        />\r\n                                    </Link>\r\n                                )}\r\n                                <div className=\"products__item__info\">\r\n                                    <h3 className=\"products__item__name\">{product[\"Product\"]}</h3>\r\n                                    <p className=\"products__item__description\">{product[\"Description\"]}</p>\r\n                                    {product[\"Description 2\"] && (\r\n                                        <p className=\"products__item__description\">*{product[\"Description 2\"]}</p>\r\n                                    )}\r\n                                    {product[\"Description 3\"] && (\r\n                                        <p className=\"products__item__description\">*{product[\"Description 3\"]}</p>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"products__btn-container\">\r\n                <div className=\"wrapper\">\r\n                    <Link to=\"/shop\" className=\"products__btn btn\">\r\n                        Shop Now\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","const countProducts = (checkoutObj, product, date) => {\r\n    if (date) {\r\n        return product === 'all'\r\n            ? Object.values(checkoutObj[date]).reduce((acc, curr) => {\r\n                  acc += curr.length;\r\n                  return acc;\r\n              }, 0)\r\n            : checkoutObj[date][product].length;\r\n    } else {\r\n        return Object.values(checkoutObj).reduce((acc, curr) => {\r\n            acc += curr[product].length;\r\n            return acc;\r\n        }, 0);\r\n    }\r\n};\r\n\r\nexport default countProducts;\r\n","import countProducts from \"./countProducts\"\r\nimport { momentInt, nextSaturday, thisSaturday } from \"./getDates\"\r\n\r\nconst isPromotion = (checkout, promoCheck) => {\r\n    switch (promoCheck) {\r\n        case \"validWebLaunch\":\r\n            // website launch\r\n            const isWebLaunchDays =\r\n                (momentInt(\"DDD\") > 233 && momentInt(\"DDD\") < 236 && momentInt(\"YY\") === 21) ||\r\n                (momentInt(\"DDD\") === 236 && momentInt(\"H\") < 18 && momentInt(\"YY\") === 21)\r\n            const isTwoPlusBox5 =\r\n                countProducts(checkout, \"Box of 5\", thisSaturday()) > 2 || countProducts(checkout, \"Box of 5\", nextSaturday()) > 2\r\n            return isWebLaunchDays && isTwoPlusBox5\r\n\r\n        case \"webLaunchDays\":\r\n            return (momentInt(\"DDD\") > 233 && momentInt(\"DDD\") < 236) || (momentInt(\"DDD\") === 236 && momentInt(\"H\") < 18)\r\n\r\n        case \"blackFriday\":\r\n            // black friday\r\n            const isBlackFriday =\r\n                (momentInt(\"DDD\") > 320 && momentInt(\"DDD\") < 328 && momentInt(\"YY\") === 21) ||\r\n                (momentInt(\"DDD\") === 328 && momentInt(\"H\") < 18 && momentInt(\"YY\") === 21)\r\n            // const isBlackFridayBox = countProducts(checkout, \"Box of 5\", \"11/27/2021\") > 2 || countProducts(checkout, \"Box of 5\", \"12/04/2021\") > 2\r\n            const isBlackFridayBox = checkout[\"12/04/2021\"] && countProducts(checkout, \"Box of 5\", \"12/04/2021\") > 2\r\n\r\n            return isBlackFriday && isBlackFridayBox\r\n\r\n        case \"blackFridayDouble\":\r\n            const isBFDouble =\r\n                (momentInt(\"DDD\") > 320 && momentInt(\"DDD\") < 328 && momentInt(\"YY\") === 21) ||\r\n                (momentInt(\"DDD\") === 328 && momentInt(\"H\") < 18 && momentInt(\"YY\") === 21)\r\n            // const isBFDoubleBox = countProducts(checkout, \"Box of 5\", \"11/27/2021\") > 2 && countProducts(checkout, \"Box of 5\", \"12/04/2021\") > 2\r\n            const isBFDoubleBox = checkout[\"12/04/2021\"] && countProducts(checkout, \"Box of 5\", \"12/04/2021\") > 2\r\n\r\n            return isBFDouble && isBFDoubleBox\r\n\r\n        case \"blackFridayDays\":\r\n            return (\r\n                (momentInt(\"DDD\") > 320 && momentInt(\"DDD\") < 328 && momentInt(\"YY\") === 21) ||\r\n                (momentInt(\"DDD\") === 328 && momentInt(\"H\") < 18 && momentInt(\"YY\") === 21)\r\n            )\r\n        default:\r\n            break\r\n    }\r\n}\r\n\r\nexport default isPromotion\r\n","import countProducts from \"./countProducts\"\r\nimport isPromotion from \"./isPromotion\"\r\n\r\nconst calculateTotal = (prices, checkout, coupon, delivery) => {\r\n    // helper functions\r\n    const productInfo = (product, column) =>\r\n        parseFloat(\r\n            prices.find(item => item['Product'] === product) ? prices.find(item => item['Product'] === product)[column] : 0\r\n        )\r\n\r\n    // const bundleProductsCost = (\r\n    //     numberOfProducts,\r\n    //     numberInBundle,\r\n    //     singleCost,\r\n    //     bundleCost\r\n    // ) =>\r\n    //     ((numberOfProducts - (numberOfProducts % numberInBundle)) /\r\n    //         numberInBundle) *\r\n    //         bundleCost +\r\n    //     (numberOfProducts % numberInBundle) * singleCost\r\n\r\n    // define the numbers from sheets that are needed for prices\r\n    const [singleBox5, singleGram, singleBatch] = [\r\n        productInfo('Box of 5', 'Single'),\r\n        // productInfo(\"Box of 5\", \"Bundle\"),\r\n        productInfo('MAC-A-GRAM', 'Single'),\r\n        // productInfo(\"MAC-A-GRAM\", \"Bundle\"),\r\n        productInfo('Batch of 12', 'Single')\r\n    ]\r\n    // const [inBundleBox5, inBundleGram] = [\r\n    //     productInfo(\"Box of 5\", \"Bundle Size\"),\r\n    //     productInfo(\"MAC-A-GRAM\", \"Bundle Size\"),\r\n    // ]\r\n    const [amountBox5, amountGram, amountBatch] = [\r\n        countProducts(checkout, 'Box of 5'),\r\n        countProducts(checkout, 'MAC-A-GRAM'),\r\n        countProducts(checkout, 'Batch of 12')\r\n    ]\r\n\r\n    // math\r\n    const [costBox5, costGram, costBatch] = [amountBox5 * singleBox5, amountGram * singleGram, amountBatch * singleBatch]\r\n\r\n    // math for bundles. might come back\r\n    // const [costBox5, costGram, costBatch] = [\r\n    //     bundleProductsCost(amountBox5, inBundleBox5, singleBox5, bundleBox5),\r\n    //     bundleProductsCost(amountGram, inBundleGram, singleGram, bundleGram),\r\n    //     amountBatch * singleBatch,\r\n    // ]\r\n\r\n    const productsTotal = costBox5 + costGram + costBatch\r\n    const couponAmount = coupon ? parseFloat(coupon['Amount']) : 0\r\n    const discount =\r\n        isPromotion(checkout, 'blackFridayDouble') || isPromotion(checkout, 'blackFriday')\r\n            ? 15 * Math.floor(countProducts(checkout, 'Box of 5') / 3)\r\n            : coupon && coupon['Type'] === '%'\r\n            ? productsTotal * (couponAmount / 100)\r\n            : coupon && coupon['Type'] === '$'\r\n            ? couponAmount\r\n            : 0\r\n    const deliveryCost = productsTotal - parseFloat(discount) >= 40 ? 0 : delivery === 'delivery' ? 7 : 0\r\n\r\n    return productsTotal - parseFloat(discount) + deliveryCost\r\n}\r\n\r\nexport default calculateTotal\r\n","import React, { Fragment, useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { formatString } from \"../../../utils/formatString\"\r\nimport { Context } from \"../../context\"\r\n\r\nconst CheckoutBasket = ({ date, checkout }) => {\r\n    const [state, dispatch] = useContext(Context)\r\n    const boxHeaders = Object.keys(checkout[date]).reduce((acc, curr) => {\r\n        const result = curr.toLowerCase().includes(\"box\") ? \"Box\" : curr.toLowerCase().includes(\"batch\") ? \"Batch\" : curr\r\n\r\n        acc.push(result)\r\n        return acc\r\n    }, [])\r\n\r\n    const productTypeHeaders = [\"Box of 5\", \"MAC-A-GRAM\", \"Batch of 12\", \"Catering + Bulk\"]\r\n\r\n    const inCheckout = date => Object.values(checkout[date])\r\n\r\n    return inCheckout(date).map((productType, index) => {\r\n        const productClassName = formatString(productTypeHeaders[index], \"kebab\")\r\n\r\n        return productType.length > 0 ? (\r\n            <Fragment key={index}>\r\n                <h3 className=\"cart_h3 cart__h3--product\">{productTypeHeaders[index]}</h3>\r\n                <Link\r\n                    className=\"cart__btn cart__btn--edit btn\"\r\n                    to={`/shop/${productClassName}`}\r\n                    onClick={() => dispatch({ type: \"setDate\", data: date })}>\r\n                    Edit\r\n                </Link>\r\n                <div className={`cart__product cart__product--${productClassName}`}>\r\n                    {productType.map((box, i) => {\r\n                        return (\r\n                            <div className={`cart__product__box`} key={i}>\r\n                                <h4 className={`cart__h4 cart__h4--${productClassName}`}>{`${boxHeaders[index]} ${i + 1}`}</h4>\r\n                                {Object.keys(box).map((flavour, x) => {\r\n                                    return (\r\n                                        <div key={x} className=\"cart__product__flavour\">\r\n                                            <p className=\"cart__product__flavour__name\">{flavour}</p>\r\n                                            <p className=\"cart__product__flavour__amount\">{box[flavour]}</p>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n        ) : null\r\n    })\r\n}\r\n\r\nexport default CheckoutBasket\r\n","import React, { useContext } from \"react\"\r\nimport { Context } from \"../../context\"\r\n\r\nconst ContactInfo = ({ props }) => {\r\n    const [{ contactInfo }, dispatch] = useContext(Context)\r\n    // bind inputs\r\n    const handleInfoInput = e => {\r\n        const { name, value } = e.target\r\n        dispatch({\r\n            type: \"setContactInfo\",\r\n            data: { ...contactInfo, [name]: value },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact-info\">\r\n            <div className=\"contact-info__info__item flying-label-item\">\r\n                <input\r\n                    className=\"flying-label-item__input contact-info__input\"\r\n                    type=\"text\"\r\n                    name=\"user-name\"\r\n                    id=\"user-name\"\r\n                    value={contactInfo[\"user-name\"]}\r\n                    onChange={handleInfoInput}\r\n                    required\r\n                />\r\n                <label\r\n                    className=\"flying-label-item__label contact-info__label\"\r\n                    htmlFor=\"user-name\">\r\n                    Name\r\n                </label>\r\n            </div>\r\n            <div className=\"contact-info__info__item flying-label-item\">\r\n                <input\r\n                    className=\"flying-label-item__input contact-info__input\"\r\n                    type=\"email\"\r\n                    name=\"user-email\"\r\n                    id=\"user-email\"\r\n                    value={contactInfo[\"user-email\"]}\r\n                    onChange={handleInfoInput}\r\n                    required\r\n                />\r\n                <label\r\n                    className=\"flying-label-item__label contact-info__label\"\r\n                    htmlFor=\"user-email\">\r\n                    Email\r\n                </label>\r\n            </div>\r\n            <div className=\"contact-info__info__item flying-label-item\">\r\n                <input\r\n                    className=\"flying-label-item__input contact-info__input\"\r\n                    type=\"tel\"\r\n                    pattern=\"[0-9]{10}\"\r\n                    maxLength=\"10\"\r\n                    name=\"user-cell\"\r\n                    id=\"user-cell\"\r\n                    value={contactInfo[\"user-cell\"]}\r\n                    onChange={handleInfoInput}\r\n                    required\r\n                />\r\n                <label\r\n                    className=\"flying-label-item__label contact-info__label\"\r\n                    htmlFor=\"user-cell\">\r\n                    Phone\r\n                </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactInfo\r\n","import React, { useContext, useEffect } from \"react\"\r\nimport { Context } from \"../../context\"\r\n\r\nconst CouponCode = ({ disabled, disabledMsg }) => {\r\n    const [{ couponCode, couponList }, dispatch] = useContext(Context)\r\n\r\n    const inputHandler = e => {\r\n        dispatch({\r\n            type: \"setCoupon\",\r\n            data: e.target.value.trim().toUpperCase()\r\n        })\r\n    }\r\n\r\n    const matchedCoupon = couponList.find(coupon => coupon[\"Code\"] === couponCode)\r\n\r\n    useEffect(() => {\r\n        if (matchedCoupon) {\r\n            dispatch({ type: \"setMatchedCoupon\", data: matchedCoupon })\r\n        } else {\r\n            dispatch({\r\n                type: \"setMatchedCoupon\",\r\n                data: { Code: \"\", Amount: \"\", Type: \"\" }\r\n            })\r\n        }\r\n    }, [couponCode, matchedCoupon, dispatch])\r\n\r\n    return (\r\n        <div className=\"coupon-code\">\r\n            {disabled && <p className=\"coupon-code__message cart__p cart__p--coupon-msg\">{disabledMsg}</p>}\r\n            <div className=\"coupon-code__info__item flying-label-item\">\r\n                <input\r\n                    className={`flying-label-item__input flying-label-item__input--coupon coupon-code__input ${\r\n                        disabled ? \"disable\" : \"\"\r\n                    } ${matchedCoupon && matchedCoupon[\"Code\"] !== \"\" ? \"valid\" : \"\"}`}\r\n                    type=\"text\"\r\n                    value={couponCode}\r\n                    onChange={inputHandler}\r\n                    maxLength=\"5\"\r\n                    disabled={disabled}\r\n                />\r\n                <label\r\n                    className={`flying-label-item__label flying-label-item__label--coupon coupon-code__label ${\r\n                        disabled ? \"disable\" : \"\"\r\n                    }`}>\r\n                    Coupon Code\r\n                </label>\r\n            </div>\r\n            {matchedCoupon && matchedCoupon[\"Code\"] !== \"\" ? (\r\n                <p className=\"coupon-code__message cart__p cart__p--coupon-msg\">\r\n                    {matchedCoupon[\"Type\"] === \"%\"\r\n                        ? `${parseFloat(matchedCoupon[\"Amount\"])}% off your order!`\r\n                        : matchedCoupon[\"Type\"] === \"$\"\r\n                        ? `$${parseFloat(matchedCoupon[\"Amount\"])} off your order!`\r\n                        : \"\"}\r\n                </p>\r\n            ) : !matchedCoupon && couponCode !== \"\" ? (\r\n                <p className=\"coupon-code__message cart__p cart__p--coupon-msg\">That's an invalid code</p>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CouponCode\r\n","import React, { useContext } from 'react'\r\nimport { Context } from '../../context'\r\n\r\nconst DeliveryOptions = ({ data }) => {\r\n    const [{ delivery, pickupOptions, deliveryAddress, pickup }, dispatch] = useContext(Context)\r\n    // if selected date is xxx, then these times?\r\n    // const bulkDeliveryTimes = ['Saturday between 3:30pm-6:30pm', 'Saturday between 3:30pm-6:30pm']\r\n\r\n    const handleOption = e => {\r\n        e.preventDefault()\r\n        dispatch({\r\n            type: 'setDelivery',\r\n            data: e.target.innerText.toLowerCase()\r\n        })\r\n    }\r\n\r\n    const pickupHandler = e => {\r\n        dispatch({\r\n            type: 'setPickup',\r\n            data: { value: e.target.value, index: e.target.dataset.i }\r\n        })\r\n    }\r\n\r\n    const deliveryAddressHandler = e => {\r\n        dispatch({\r\n            type: 'setAddress',\r\n            data: e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='delivery-options'>\r\n            <button\r\n                className={`delivery-options__btn delivery-options__btn--delivery btn${delivery === 'delivery' ? ' active' : ''}`}\r\n                onClick={handleOption}>\r\n                Delivery\r\n            </button>\r\n            <button\r\n                className={`delivery-options__btn delivery-options__btn--delivery btn${delivery === 'pickup' ? ' active' : ''}`}\r\n                onClick={handleOption}>\r\n                Pickup\r\n            </button>\r\n\r\n            {delivery === 'pickup' && (\r\n                <div className='delivery-options__choice'>\r\n                    <p className='delivery-options__p'>\r\n                        Markham:{' '}\r\n                        <a\r\n                            className='form__method__link link'\r\n                            href='https://goo.gl/maps/1V6Gfqj2T31BUfjWA'\r\n                            target='_blank'\r\n                            rel='noreferrer'>\r\n                            First Markham Place\r\n                        </a>\r\n                    </p>\r\n                    {pickupOptions.map((option, i) => (\r\n                        <label key={i} className='delivery-options__control delivery-options__control-radio'>\r\n                            {`${option['Location']} ${option['Time']}`}\r\n                            <input\r\n                                type='radio'\r\n                                data-i={i}\r\n                                name={`radio--pickup`}\r\n                                value={`${option['Location']} ${option['Time']}`}\r\n                                onClick={pickupHandler}\r\n                                checked={parseInt(pickup['index']) === i}\r\n                                // required={i === 0 ? true : false}\r\n                                readOnly\r\n                            />\r\n                            <div className='delivery-options__control-indicator'></div>\r\n                        </label>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {delivery === 'delivery' && (\r\n                <div className='delivery-options__choice'>\r\n                    <p className='delivery-options__p'>\r\n                        $7 delivery within this{' '}\r\n                        <a\r\n                            className='footer__links__social link'\r\n                            href='https://www.google.com/maps/d/u/0/edit?mid=1aUrtlRxe7HBX87pm3d9JTY_7e7IcCDJq&usp=sharing'\r\n                            target='_blank'\r\n                            rel='noreferrer'>\r\n                            MAP\r\n                        </a>\r\n                    </p>\r\n                    <p className='delivery-options__p'>\r\n                        <a\r\n                            className='footer__links__social link'\r\n                            href='https://www.instagram.com/che.macarons/'\r\n                            target='_blank'\r\n                            rel='noreferrer'>\r\n                            DM\r\n                        </a>{' '}\r\n                        for quote outside our area\r\n                    </p>\r\n\r\n                    {data?.livesIn === 'bulk' ? (\r\n                        <>\r\n                            <label className='delivery-options__control delivery-options__control-radio'>\r\n                                {`Saturday between 3:30pm-6:30pm`}\r\n                                <input type='radio' name='radio' checked readOnly />\r\n                                <div className='delivery-options__control-indicator'></div>\r\n                            </label>\r\n                        </>\r\n                    ) : (\r\n                        <label className='delivery-options__control delivery-options__control-radio'>\r\n                            {`Saturday between 3:30pm-6:30pm`}\r\n                            <input type='radio' name='radio' checked readOnly />\r\n                            <div className='delivery-options__control-indicator'></div>\r\n                        </label>\r\n                    )}\r\n\r\n                    <div className='delivery-options__info__item flying-label-item'>\r\n                        <input\r\n                            className='flying-label-item__input delivery-options__input'\r\n                            type='text'\r\n                            value={deliveryAddress}\r\n                            onChange={deliveryAddressHandler}\r\n                            required\r\n                        />\r\n                        <label className='flying-label-item__label delivery-options__label'>Address</label>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeliveryOptions\r\n","import moment from \"moment\"\r\nimport { DISCORD_HOOK } from \"./configs\"\r\n\r\nconst sendToDiscord = state => {\r\n    const {\r\n        contactInfo,\r\n        delivery,\r\n        pickup,\r\n        deliveryAddress,\r\n        matchedCoupon,\r\n        couponCode,\r\n        total,\r\n        cart,\r\n    } = state\r\n\r\n    const deliveryDates = () => {\r\n        let result = \"\"\r\n        Object.keys(cart).forEach((date, i) => {\r\n            if (\r\n                Object.values(cart[date]).filter(item => item.length > 0)\r\n                    .length > 0\r\n            ) {\r\n                result += `${i > 0 ? `, ` : ``}${moment(date).format(\"MMM D\")}`\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n    const getProductAmount = product => {\r\n        let count = 0\r\n        Object.keys(cart).forEach(date => {\r\n            count += Object.values(cart[date]).find(\r\n                item => item === cart[date][product]\r\n            ).length\r\n        })\r\n        return count\r\n    }\r\n\r\n    const packagesDetails = () => {\r\n        let result = \"\"\r\n        Object.keys(cart).forEach((date, index) => {\r\n            const boxHeaders = Object.keys(cart[date]).reduce((acc, curr) => {\r\n                const result = curr.toLowerCase().includes(\"box\")\r\n                    ? \"Box\"\r\n                    : curr.toLowerCase().includes(\"batch\")\r\n                    ? \"Batch\"\r\n                    : curr\r\n\r\n                acc.push(result)\r\n                return acc\r\n            }, [])\r\n            // if the cart of that date is not empty\r\n            if (\r\n                Object.values(cart[date]).filter(item => item.length > 0)\r\n                    .length > 0\r\n            ) {\r\n                result += `${index > 0 ? \"\\r\\n\" : \"\"}${moment(date).format(\r\n                    \"MMM Do\"\r\n                )}\\r\\n`\r\n            }\r\n\r\n            Object.keys(cart[date]).forEach((product, productNumber) => {\r\n                // if the product is not empty\r\n                if (cart[date][product].length > 0) {\r\n                    cart[date][product].forEach((box, i) => {\r\n                        result += `\\r\\n${boxHeaders[productNumber]} ${\r\n                            i + 1\r\n                        }\\r\\n`\r\n\r\n                        for (const [key, value] of Object.entries(\r\n                            cart[date][product][i]\r\n                        )) {\r\n                            result += `${key}: ${value}\\r\\n`\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        return result\r\n    }\r\n\r\n    const request = new XMLHttpRequest()\r\n\r\n    request.open(\"POST\", DISCORD_HOOK)\r\n    request.setRequestHeader(\"Content-type\", \"application/json\")\r\n\r\n    const thankYouEmail = `Hi ${\r\n        contactInfo[\"user-name\"]\r\n    },\\r\\n\\r\\nThank you for ordering from us! This is an email to confirm that we have received your payment.\\r\\n\\r\\n${\r\n        delivery === \"pickup\" ? `Pickup Details - ${pickup[\"value\"]}` : \"\"\r\n    }${\r\n        delivery === \"delivery\"\r\n            ? `Delivery Date(s): ${deliveryDates()} \\r\\nAddress: ${deliveryAddress}`\r\n            : \"\"\r\n    }\\r\\n\\r\\nThank you so much for the support and we can't wait for you to taste our macarons!\\r\\n\\r\\nLove,\\r\\nChé Macarons`\r\n\r\n    const params = {\r\n        username: `Order from ${contactInfo[\"user-name\"]}`,\r\n        avatar_url: \"\",\r\n        content: thankYouEmail,\r\n        embeds: [\r\n            {\r\n                description: `${contactInfo[\"user-email\"]}\\r\\n${\r\n                    contactInfo[\"user-cell\"]\r\n                }\r\n                    +Box of Five:  ${getProductAmount(\"Box of 5\")}\r\n                    +MAC-A-GRAM:  ${getProductAmount(\"MAC-A-GRAM\")}\r\n                    +Batch of 12:  ${getProductAmount(\"Batch of 12\")}\r\n                    ${\r\n                        delivery === \"pickup\"\r\n                            ? `+Pick Up: ${pickup[\"value\"]}`\r\n                            : \"\"\r\n                    }${\r\n                    delivery === \"delivery\"\r\n                        ? `+Delivery Date: ${deliveryDates()}`\r\n                        : \"\"\r\n                }\r\n                    ${\r\n                        delivery === \"delivery\"\r\n                            ? `+Address: \r\n                    --${deliveryAddress}`\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        matchedCoupon[\"Code\"] !== \"\"\r\n                            ? `\\r\\n+Code: ${couponCode}\r\n                    --discount: ${matchedCoupon[\"Amount\"]}${matchedCoupon[\"Type\"]}`\r\n                            : \"\"\r\n                    }\r\n                    \r\n                    +TOTAL: ${total}`,\r\n                color: parseInt(\"#ff0000\".replace(\"#\", \"\"), 16),\r\n            },\r\n            {\r\n                description: \"Products: \\r\\n\" + packagesDetails(),\r\n                color: parseInt(\"#0000ff\".replace(\"#\", \"\"), 16),\r\n            },\r\n        ],\r\n    }\r\n    request.send(JSON.stringify(params))\r\n}\r\n\r\nexport default sendToDiscord\r\n","import emailjs from \"emailjs-com\"\r\nimport { EMAILJS_USER_ID } from \"./configs\"\r\n\r\nconst sendOrderEmail = e => {\r\n    emailjs\r\n        .sendForm(\r\n            \"cpgmail\", // serviceID\r\n            \"template_wymwgmp\", // email templateID\r\n            e.target, // my form\r\n            EMAILJS_USER_ID // userID\r\n        )\r\n        .then(\r\n            result => console.log(\"sent\", result.text),\r\n            error => console.log(\"failed--\", 'emailjs is not hooked up to the public version of this website')\r\n        )\r\n}\r\n\r\nexport default sendOrderEmail\r\n","import { GoogleSpreadsheet } from \"google-spreadsheet\"\r\nimport { CLIENT_EMAIL, PRIVATE_KEY, SPREADSHEET_ID } from \"../configs\"\r\n\r\nconst addRow = async (sheetId, newRow) => {\r\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID)\r\n    try {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: CLIENT_EMAIL,\r\n            private_key: PRIVATE_KEY,\r\n        })\r\n        // loads document properties and worksheets\r\n        await doc.loadInfo()\r\n        const sheet = doc.sheetsById[sheetId]\r\n        await sheet.addRow(newRow)\r\n    } catch (e) {\r\n        console.error(\"Error: \", e)\r\n    }\r\n}\r\n\r\nexport default addRow\r\n","const getWeeklyFlavourNames = (weeklyFlavours, date) => {\r\n    const getNames = (acc, curr) => {\r\n        acc.push(curr[\"Flavour\"])\r\n        return acc\r\n    }\r\n    return weeklyFlavours.filter(entry => entry[\"Date\"] === date).reduce(getNames, [])\r\n}\r\n\r\nexport default getWeeklyFlavourNames\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\r\nimport {\r\n    CLIENT_EMAIL,\r\n    GOOGLE_COUPONS_ID,\r\n    GOOGLE_ORDERS_ID,\r\n    PRIVATE_KEY,\r\n    SPREADSHEET_ID,\r\n    SPECIAL_COUPON,\r\n} from '../../../utils/configs';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { nextOrderDates } from '../../../utils/getDates';\r\nimport { Context } from '../../context';\r\nimport calculateTotal from '../../../utils/calculateTotal';\r\nimport CheckoutBasket from './CheckoutBasket';\r\nimport ContactInfo from './ContactInfo';\r\nimport CouponCode from './CouponCode';\r\nimport DeliveryOptions from './DeliveryOptions';\r\nimport sendToDiscord from '../../../utils/sendToDiscord';\r\nimport sendOrderEmail from '../../../utils/sendOrderEmail';\r\nimport moment from 'moment';\r\nimport addRow from '../../../utils/sheets/addRow';\r\nimport countProducts from '../../../utils/countProducts';\r\nimport getWeeklyFlavourNames from '../../../utils/getWeeklyFlavourNames';\r\nimport { formatString } from '../../../utils/formatString';\r\nimport { productAltText, productImages } from '../../../utils/productImages';\r\n\r\nconst Cart = ({ checkout, setCheckout, setCartCount }) => {\r\n    const history = useHistory();\r\n    const [state, dispatch] = useContext(Context);\r\n    const {\r\n        total,\r\n        prices,\r\n        delivery,\r\n        couponList,\r\n        couponCode,\r\n        matchedCoupon,\r\n        contactInfo,\r\n        cart,\r\n        pickup,\r\n        deliveryAddress,\r\n        flavours,\r\n    } = state;\r\n\r\n    const initialCart = () => {\r\n        const weeklyCart = {\r\n            'Box of 5': [],\r\n            'MAC-A-GRAM': [],\r\n            'Batch of 12': [],\r\n            'Catering + Bulk': [],\r\n        };\r\n\r\n        const result = nextOrderDates(flavours.weekly).reduce((acc, curr) => {\r\n            if (!acc[curr]) acc[curr] = weeklyCart;\r\n            return acc;\r\n        }, {});\r\n\r\n        return result;\r\n    };\r\n\r\n    // promotions -------------------\r\n    // const isWebLaunchDays =\r\n    //     (parseInt(moment().format(\"DDD\")) > 233 && parseInt(moment().format(\"DDD\")) < 236) ||\r\n    //     (parseInt(moment().format(\"DDD\")) === 236 && parseInt(moment().format(\"H\")) < 18)\r\n    // const isTwoPlusBox5 =\r\n    //     countProducts(checkout, \"Box of 5\", thisSaturday()) > 2 || countProducts(checkout, \"Box of 5\", nextSaturday()) > 2\r\n    // promotions ---------end------------\r\n\r\n    // reset sessionStorage and reload if the cart date doesnt exists yet\r\n    // if (cart[thisSaturday()] === undefined || cart[nextSaturday()] === undefined) {\r\n    //     sessionStorage.clear()\r\n    //     window.location.reload()\r\n    //     console.log(\"reload\")\r\n    // }\r\n\r\n    const handleClear = (e) => {\r\n        e.target.blur();\r\n        setCheckout(initialCart());\r\n        sessionStorage.clear();\r\n        dispatch({ type: 'loading', data: false });\r\n        dispatch({\r\n            type: 'setCart',\r\n            data: initialCart(),\r\n        });\r\n        dispatch({ type: 'setTotal', data: 0 });\r\n        setCartCount(0);\r\n    };\r\n\r\n    const getCartAmountOnDate = (date) => {\r\n        let count = 0;\r\n        if (checkout[date]) {\r\n            Object.values(checkout[date]).forEach((item, i) => {\r\n                count += item.length || 0;\r\n            });\r\n        }\r\n        return parseInt(count);\r\n    };\r\n\r\n    const totalCartAmount = nextOrderDates(flavours.weekly).reduce(\r\n        (acc, curr) => {\r\n            acc += getCartAmountOnDate(curr);\r\n            return acc;\r\n        },\r\n        0\r\n    );\r\n\r\n    const packagesDetails = () => {\r\n        let result = '';\r\n        Object.keys(checkout).forEach((date, index) => {\r\n            const boxHeaders = Object.keys(checkout[date]).reduce(\r\n                (acc, curr) => {\r\n                    const result = curr.toLowerCase().includes('box')\r\n                        ? 'Box'\r\n                        : curr.toLowerCase().includes('batch')\r\n                        ? 'Batch'\r\n                        : curr;\r\n\r\n                    acc.push(result);\r\n                    return acc;\r\n                },\r\n                []\r\n            );\r\n            // if the checkout of that date is not empty\r\n            if (\r\n                Object.values(checkout[date]).filter((item) => item.length > 0)\r\n                    .length > 0\r\n            ) {\r\n                result += `${index > 0 ? '<br><br>' : ''}<strong>${moment(\r\n                    date\r\n                ).format('MMM Do')}</strong>`;\r\n            }\r\n\r\n            Object.keys(checkout[date]).forEach((product, productNumber) => {\r\n                // if the product is not empty\r\n                if (checkout[date][product].length > 0) {\r\n                    checkout[date][product].forEach((box, i) => {\r\n                        result += `<br>${boxHeaders[productNumber]} ${i + 1}`;\r\n\r\n                        for (const [key, value] of Object.entries(\r\n                            checkout[date][product][i]\r\n                        )) {\r\n                            result += `<br> --${key}: ${value}`;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return result;\r\n    };\r\n\r\n    const deleteCoupon = async () => {\r\n        const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n        try {\r\n            await doc.useServiceAccountAuth({\r\n                client_email: CLIENT_EMAIL,\r\n                private_key: PRIVATE_KEY,\r\n            });\r\n            await doc.loadInfo();\r\n            const rows = await doc.sheetsById[GOOGLE_COUPONS_ID].getRows();\r\n            // delete the row that matches the rowNumber of the matchedCoupon\r\n            await rows[\r\n                rows.indexOf(\r\n                    rows.find(\r\n                        (row) => row.rowNumber === matchedCoupon.rowNumber\r\n                    )\r\n                )\r\n            ].delete();\r\n        } catch (e) {\r\n            console.error('Delete Error: ', e);\r\n        }\r\n    };\r\n\r\n    const handleConfirm = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (totalCartAmount < 1) {\r\n            alert('Your cart is empty');\r\n            return;\r\n        }\r\n        if (delivery === 'pickup' && !pickup['value']) {\r\n            alert('Please choose your pickup time.');\r\n            return;\r\n        }\r\n        if (\r\n            matchedCoupon &&\r\n            matchedCoupon['Code'] !== '' &&\r\n            couponCode !== SPECIAL_COUPON &&\r\n            couponCode !== 'BF20' &&\r\n            couponCode !== 'VDAY' &&\r\n            couponCode !== 'EAS15'\r\n        ) {\r\n            // delete coupon code on use\r\n            deleteCoupon()\r\n        }\r\n\r\n        const deliveryDates = () => {\r\n            const result = [];\r\n            Object.keys(cart).forEach((date, i) => {\r\n                if (\r\n                    Object.values(cart[date]).filter((item) => item.length > 0)\r\n                        .length > 0\r\n                ) {\r\n                    result.push(date);\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        deliveryDates().forEach((date, dateIndex) => {\r\n            const flavoursNames = getWeeklyFlavourNames(flavours.weekly, date);\r\n            const getFlavourAmount = (date, flavourString) => {\r\n                let result = 0;\r\n                // if the checkout of that date is not empty\r\n                if (\r\n                    Object.values(checkout[date]).filter(\r\n                        (item) => item.length > 0\r\n                    ).length > 0\r\n                ) {\r\n                    Object.keys(checkout[date]).forEach(\r\n                        (product, productNumber) => {\r\n                            // if the product is not empty\r\n                            if (checkout[date][product].length > 0) {\r\n                                checkout[date][product].forEach((box, i) => {\r\n                                    for (const [key, value] of Object.entries(\r\n                                        checkout[date][product][i]\r\n                                    )) {\r\n                                        if (key === flavourString)\r\n                                            result += value;\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n                return result;\r\n            };\r\n\r\n            setTimeout(\r\n                () => {\r\n                    addRow(GOOGLE_ORDERS_ID, {\r\n                        Name: `${contactInfo['user-name']} ${\r\n                            deliveryDates().length > 1\r\n                                ? `${dateIndex + 1}/${deliveryDates().length}`\r\n                                : ''\r\n                        }`,\r\n                        Date: date,\r\n                        Email: contactInfo['user-email'],\r\n                        Phone: contactInfo['user-cell'],\r\n                        Price:\r\n                            dateIndex === 0\r\n                                ? total\r\n                                : `x${dateIndex + 1}/${deliveryDates().length}`,\r\n                        'Box of 5':\r\n                            countProducts(checkout, 'Box of 5', date) === 0\r\n                                ? ''\r\n                                : countProducts(checkout, 'Box of 5', date),\r\n                        'MAC-A-GRAM':\r\n                            countProducts(checkout, 'MAC-A-GRAM', date) === 0\r\n                                ? ''\r\n                                : countProducts(checkout, 'MAC-A-GRAM', date),\r\n                        'Batch of 12':\r\n                            countProducts(checkout, 'Batch of 12', date) === 0\r\n                                ? ''\r\n                                : countProducts(checkout, 'Batch of 12', date),\r\n                        'Catering + Bulk':\r\n                            countProducts(checkout, 'Catering + Bulk', date) ===\r\n                            0\r\n                                ? ''\r\n                                : countProducts(\r\n                                      checkout,\r\n                                      'Catering + Bulk',\r\n                                      date\r\n                                  ),\r\n                        'Flavour 1': getFlavourAmount(date, flavoursNames[0]),\r\n                        'Flavour 2': getFlavourAmount(date, flavoursNames[1]),\r\n                        'Flavour 3': getFlavourAmount(date, flavoursNames[2]),\r\n                        'Flavour 4': getFlavourAmount(date, flavoursNames[3]),\r\n                        'Flavour 5':\r\n                            flavoursNames.length > 4\r\n                                ? getFlavourAmount(date, flavoursNames[4])\r\n                                : null,\r\n                        Coupon: matchedCoupon['Type'] !== '' ? couponCode : '',\r\n                        Pickup: delivery === 'pickup' ? pickup['value'] : '',\r\n                        Delivery:\r\n                            delivery === 'delivery' ? deliveryAddress : '',\r\n                    });\r\n                },\r\n                dateIndex > 0 ? 3000 : 0\r\n            );\r\n        });\r\n        history.push('/thankyou');\r\n        sendToDiscord(state);\r\n        sendOrderEmail(e);\r\n\r\n        handleClear(e);\r\n    };\r\n\r\n    const currCoupon = couponList.find(\r\n        (coupon) => coupon['Code'] === couponCode\r\n    );\r\n\r\n    const amountToFreeDelivery = (\r\n        40 - calculateTotal(state.prices, checkout, currCoupon, 'pickup')\r\n    ).toFixed(2);\r\n\r\n    const GridItem = ({ name = '', price = '', image = '', alt = '' }) => (\r\n        // a lot of customization needed. maybe should just be plain html\r\n        <Link\r\n            to={`/shop/${formatString(name, 'kebab')}`}\r\n            className='shop__grid-item'\r\n        >\r\n            <div className='shop-item__image-container'>\r\n                <img className='shop__grid-item__image' src={image} alt={alt} />\r\n            </div>\r\n            <div className='shop__grid-item__info'>\r\n                <h3 className='shop__grid-item__name'>\r\n                    {name.includes('Bulk') ? 'Bulk Order' : name}\r\n                </h3>\r\n                <p className='shop__grid__price'>{price}</p>\r\n            </div>\r\n        </Link>\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: 'setTotal',\r\n            data: calculateTotal(state.prices, checkout, currCoupon, delivery)\r\n        })\r\n    }, [checkout, delivery, total, couponCode, dispatch, state.prices, currCoupon])\r\n\r\n    return (\r\n        <>\r\n            <form className='cart' onSubmit={handleConfirm}>\r\n                <div className='cart__free'>\r\n                    <p className='cart__free__p wrapper'>\r\n                        {amountToFreeDelivery > 0\r\n                            ? `$${amountToFreeDelivery} away from FREE delivery`\r\n                            : `Free delivery!`}\r\n                    </p>\r\n                </div>\r\n                <div className='wrapper'>\r\n                    <h2 className='cart__h2 h2'>Cart</h2>\r\n\r\n                    {totalCartAmount < 1 && <p>Your cart is currently empty</p>}\r\n                    {totalCartAmount > 0 &&\r\n                        Object.keys(checkout).map((date, i) =>\r\n                            countProducts(checkout, 'all', date) > 0 ? (\r\n                                <div key={i} className='cart__date'>\r\n                                    <h3 className='cart__h3 cart__h3--date'>\r\n                                        {moment(date).format('MMM Do')}\r\n                                    </h3>\r\n                                    {(delivery === 'pickup' && total !== 0) ||\r\n                                    (delivery === 'delivery' && total > 5) ? (\r\n                                        <CheckoutBasket\r\n                                            checkout={checkout}\r\n                                            date={date}\r\n                                        />\r\n                                    ) : null}\r\n                                </div>\r\n                            ) : null\r\n                        )}\r\n\r\n                    <div className='cart__grid cart__grid--info-options'>\r\n                        <div className='cart__contact'>\r\n                            <h2 className='cart__h2 cart__h2--contact'>\r\n                                Your Info\r\n                            </h2>\r\n                            <ContactInfo />\r\n                        </div>\r\n\r\n                        <div className='cart__delivery'>\r\n                            <h2 className='cart__h2 cart__h2--delivery'>\r\n                                Delivery Options\r\n                            </h2>\r\n                            <DeliveryOptions />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h3 className='cart__total cart__h3--total'>{`Total: $${total.toFixed(\r\n                        2\r\n                    )}`}</h3>\r\n\r\n                    <div className='cart_coupon'>\r\n                        <CouponCode />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='cart__exit'>\r\n                    <button\r\n                        className='cart__btn cart__btn--confirm btn'\r\n                        // onClick={handleConfirm}\r\n                        type='submit'\r\n                    >\r\n                        Confirm Order\r\n                    </button>\r\n                    <button\r\n                        className='cart__btn cart__btn--clear btn'\r\n                        onClick={handleClear}\r\n                    >\r\n                        Clear Cart\r\n                    </button>\r\n                </div>\r\n\r\n                {/* hidden inputs to send to emailjs */}\r\n                <input\r\n                    defaultValue={contactInfo['user-email']}\r\n                    name='emailjs-email'\r\n                    className='hidden'\r\n                    aria-hidden\r\n                />\r\n                <input\r\n                    defaultValue={contactInfo['user-name']}\r\n                    name='emailjs-name'\r\n                    className='hidden'\r\n                    aria-hidden\r\n                />\r\n                <input\r\n                    defaultValue={packagesDetails()}\r\n                    name='package-details'\r\n                    className='hidden'\r\n                    aria-hidden\r\n                />\r\n                <input\r\n                    value={total}\r\n                    name='emailjs-total'\r\n                    className='hidden'\r\n                    readOnly\r\n                    aria-hidden\r\n                />\r\n                <input\r\n                    defaultValue={\r\n                        delivery === 'pickup'\r\n                            ? pickup['value']\r\n                            : delivery === 'delivery'\r\n                            ? deliveryAddress\r\n                            : `please contact us because we didn't get your pickup/delivery details`\r\n                    }\r\n                    name='method-details'\r\n                    className='hidden'\r\n                    aria-hidden\r\n                />\r\n            </form>\r\n            <div className='order-form__other wrapper'>\r\n                <h2>Continue Shopping</h2>\r\n                <div className='shop__grid'>\r\n                    {prices.map((product, i) => (\r\n                        <GridItem\r\n                            key={i}\r\n                            name={product['Product']}\r\n                            image={productImages[product['Product']]}\r\n                            alt={productAltText[product['Product']]}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","const Footer = () => {\r\n    const handleEmailClick = e => {\r\n        navigator.clipboard.writeText(e.target.innerText)\r\n    }\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"footer__links\">\r\n                    <a\r\n                        className=\"footer__links__social link\"\r\n                        href=\"https://www.instagram.com/che.macarons/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\">\r\n                        Instagram\r\n                    </a>\r\n                    <a\r\n                        className=\"footer__links__social link\"\r\n                        href=\"https://www.facebook.com/Che%CC%81-Macarons-103907881854600\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\">\r\n                        Facebook\r\n                    </a>\r\n                    <p className=\"footer__email\" onClick={handleEmailClick}>\r\n                        macarons@chepatisserie.com <i className=\"far fa-copy\" aria-hidden=\"true\"></i>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"footer__delivery\">\r\n                    <p className=\"delivery-options__p\">\r\n                        $7 delivery within this{\" \"}\r\n                        <a\r\n                            className=\"footer__links__social link\"\r\n                            href=\"https://www.google.com/maps/d/u/0/edit?mid=1aUrtlRxe7HBX87pm3d9JTY_7e7IcCDJq&usp=sharing\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\">\r\n                            MAP\r\n                        </a>\r\n                    </p>\r\n                    <p className=\"delivery-options__p\">\r\n                        <a\r\n                            className=\"footer__links__social link\"\r\n                            href=\"https://www.instagram.com/che.macarons/\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\">\r\n                            DM\r\n                        </a>{\" \"}\r\n                        for quote outside our area\r\n                    </p>\r\n                </div>\r\n                <div className=\"footer__pickup\">\r\n                    <p className=\"delivery-options__p\">Pickup Location: </p>\r\n                    <a\r\n                        className=\"form__method__link link\"\r\n                        href=\"https://goo.gl/maps/1V6Gfqj2T31BUfjWA\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\">\r\n                        First Markham Place\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"footer__credit\">\r\n                <p className=\"footer__credit__text\">\r\n                    © 2021,{\" \"}\r\n                    <a className=\"link\" target=\"_blank\" rel=\"noreferrer\" href=\"https://twitter.com/vinccimantsui\">\r\n                        Vincci T\r\n                    </a>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useContext, useEffect, useMemo } from 'react'\r\nimport { Context } from '../../context/index'\r\nimport { formatString } from '../../../utils/formatString'\r\nimport { thisSaturday, nextSaturday, nextOrderDates } from '../../../utils/getDates'\r\nimport { Link } from 'react-router-dom'\r\nimport Flavours from '../Flavours'\r\nimport moment from 'moment'\r\n\r\nconst FlavourInfo = () => {\r\n    const [{ selectedFlavour, flavours }, dispatch] = useContext(Context)\r\n    const currFlavour = useMemo(\r\n        () => flavours.all.find(item => item['Flavour'].includes(selectedFlavour)) || {},\r\n        [flavours.all, selectedFlavour]\r\n    )\r\n    const className = formatString(selectedFlavour, 'kebab')\r\n\r\n    const getNames = (acc, curr) => {\r\n        acc.push(curr['Flavour'])\r\n        return acc\r\n    }\r\n    const [flavourNamesThisWeek, flavourNamesNextWeek] = [\r\n        flavours.weekly.filter(entry => entry['Date'] === thisSaturday('MM/DD/YYYY')).reduce(getNames, []),\r\n        flavours.weekly.filter(entry => entry['Date'] === nextSaturday('MM/DD/YYYY')).reduce(getNames, [])\r\n    ]\r\n    const upcomingFlavours = () => {\r\n        const result = []\r\n\r\n        nextOrderDates(flavours.weekly).forEach(week => {\r\n            result.push(flavours.weekly.filter(entry => entry['Date'] === week))\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: 'selectedFlavour', data: currFlavour['Flavour'] })\r\n    }, [currFlavour, dispatch])\r\n\r\n    return (\r\n        <div className={`flavour-info flavour-info--${className} page`}>\r\n            <div className='wrapper'>\r\n                <div className='flavour-info__grid'>\r\n                    <div className='flavour-info__image-container'>\r\n                        <img src={currFlavour['Image']} alt={`${currFlavour['Flavour'] || ''} macaron`} />\r\n                    </div>\r\n                    <div className='flavour-info__description'>\r\n                        <h2>{selectedFlavour}</h2>\r\n                        <p className='flavour-info__p'>\r\n                            {currFlavour['Description'] ||\r\n                                'Sorry.. We are still thinking of the perfect way to describe this flavour. Please check back later!'}\r\n                        </p>\r\n                        <Link className='flavour-info__btn flavour-info__btn--question btn' to='/shop'>\r\n                            {' '}\r\n                            Shop Now\r\n                        </Link>\r\n                    </div>\r\n                    {upcomingFlavours().map((flavoursArr, i) => (\r\n                        <Flavours\r\n                            key={i}\r\n                            className={`${i}`}\r\n                            h2={`${moment(nextOrderDates(flavours.weekly)[i]).format('MMM Do')} Flavours`}\r\n                            weeklyFlavours={flavoursArr}\r\n                        />\r\n                    ))}\r\n                    {!flavourNamesThisWeek.includes(selectedFlavour) && !flavourNamesNextWeek.includes(selectedFlavour) && (\r\n                        <Flavours className='flavour-info' h2='Other Flavours' allFlavours={flavours.all} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlavourInfo\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { Context } from \"../../context\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { formatString } from \"../../../utils/formatString\"\r\nimport { productImages, productAltText } from \"../../../utils/productImages\"\r\n\r\nconst Shop = props => {\r\n    const [{ prices }] = useContext(Context)\r\n    // const altText = [\r\n    //     \"a row of 5 macarons on their side placed inside a kraft paper box\",\r\n    //     \"2 macarons stacked inside a clear cube shaped box\",\r\n    //     \"alternative rows of macaron top and bottom shells on a baking tray\",\r\n    //     \"bulk\"\r\n    // ]\r\n\r\n    const GridItem = ({ name = \"\", price = \"\", image = \"\", alt = \"\" }) =>\r\n        // a lot of customization needed. maybe should just be plain html\r\n        name === \"MAC-A-GRAM oos\" ? (\r\n            <div className=\"shop__grid-item\">\r\n                <div className=\"shop-item__image-container\">\r\n                    <div className=\"shop__grid-item__oos\">\r\n                        <p className=\"shop__grid-item__oos__text\">Out of Stock</p>\r\n                    </div>\r\n                    <img className=\"shop__grid-item__image\" src={image} alt={alt} />\r\n                </div>\r\n                <div className=\"shop__grid-item__info\">\r\n                    <h3 className=\"shop__grid-item__name\">{name}</h3>\r\n                    <p className=\"shop__grid-item__price\">{price}</p>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <Link to={`/shop/${formatString(name, \"kebab\")}`} className=\"shop__grid-item\">\r\n                <div className=\"shop-item__image-container\">\r\n                    <img className=\"shop__grid-item__image\" src={image} alt={alt} />\r\n                </div>\r\n                <div className=\"shop__grid-item__info\">\r\n                    <h3 className=\"shop__grid-item__name\">{name}</h3>\r\n                    <p className=\"shop__grid-item__price\">{price}</p>\r\n                </div>\r\n            </Link>\r\n        )\r\n\r\n    return (\r\n        <div className=\"shop\">\r\n            <div className=\"shop__wrapper wrapper\">\r\n                <h2>Shop Now</h2>\r\n                <div className=\"shop__grid\">\r\n                    {prices.map((product, i) => {\r\n                        const priceText =\r\n                            product[\"Product\"] === \"Box of 5\"\r\n                                ? `$${product[\"Single\"]}`\r\n                                : product[\"Product\"] === \"MAC-A-GRAM\"\r\n                                ? `$${product[\"Single\"]}`\r\n                                : product[\"Product\"] === \"Batch of 12\"\r\n                                ? `$${product[\"Single\"]}`\r\n                                : product[\"Product\"] === \"Catering + Bulk\"\r\n                                ? `DM or Email for quote`\r\n                                : \"\"\r\n                        return (\r\n                            <GridItem\r\n                                key={i}\r\n                                name={product[\"Product\"]}\r\n                                price={priceText}\r\n                                image={productImages[product[\"Product\"]]}\r\n                                alt={productAltText[product[\"Product\"]]}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shop\r\n","import React from 'react'\r\n// import { productImages, productAltText } from '../../../utils/productImages'\r\nimport ContactInfo from '../Cart/ContactInfo'\r\nimport DeliveryOptions from '../Cart/DeliveryOptions'\r\n\r\nconst BulkForm = ({ location }) => {\r\n    const { day } = location\r\n    console.log('day', day)\r\n    if (!day) return null\r\n\r\n    const handleConfirm = () => {}\r\n    const handleClear = () => {}\r\n\r\n    return (\r\n        <>\r\n            <form className='bulk-form' onSubmit={handleConfirm}>\r\n                <div className='wrapper'>\r\n                    {/* minimum 20 per flavour. 5 flavours max */}\r\n                    <h2 className='bulk-form__h2 h2'>Bulk Order Form</h2>\r\n                    <p className='bulk-form__date'>{day.format('MM/DD/YYYY')}</p>\r\n\r\n                    <div className='bulk-form__grid bulk-form__grid--info-options'>\r\n                        <div className='bulk-form__contact'>\r\n                            <h2 className='bulk-form__h2 bulk-form__h2--contact'>Your Info</h2>\r\n                            <ContactInfo />\r\n                        </div>\r\n\r\n                        <div className='bulk-form__delivery'>\r\n                            <h2 className='bulk-form__h2 bulk-form__h2--delivery'>Delivery Options</h2>\r\n                            <DeliveryOptions data={{ livesIn: 'bulk', day: day }} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <h3 className='bulk-form__total bulk-form__h3--total'>{`Total: $${total.toFixed(2)}`}</h3> */}\r\n                </div>\r\n\r\n                <div className='bulk-form__exit'>\r\n                    <button\r\n                        className='bulk-form__btn bulk-form__btn--confirm btn'\r\n                        // onClick={handleConfirm}\r\n                        type='submit'>\r\n                        Send Details\r\n                    </button>\r\n                    <button className='bulk-form__btn bulk-form__btn--clear btn' onClick={handleClear}>\r\n                        Clear Form\r\n                    </button>\r\n                </div>\r\n\r\n                {/* hidden inputs to send to emailjs */}\r\n                {/* <input defaultValue={contactInfo['user-email']} name='emailjs-email' className='hidden' aria-hidden />\r\n                <input defaultValue={contactInfo['user-name']} name='emailjs-name' className='hidden' aria-hidden />\r\n                <input defaultValue={packagesDetails()} name='package-details' className='hidden' aria-hidden />\r\n                <input defaultValue={total} value={total} name='emailjs-total' className='hidden' aria-hidden />\r\n                <input\r\n                    defaultValue={\r\n                        delivery === 'pickup'\r\n                            ? pickup['value']\r\n                            : delivery === 'delivery'\r\n                            ? deliveryAddress\r\n                            : `please contact us because we didn't get your pickup/delivery details`\r\n                    }\r\n                    name='method-details'\r\n                    className='hidden'\r\n                    aria-hidden\r\n                /> */}\r\n            </form>\r\n            {/* fix classes below */}\r\n            <div className='products__btn-container'>\r\n                <div className='wrapper'>\r\n                    <button className='products__btn btn'>Submit</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BulkForm\r\n","import React, { useContext } from \"react\"\r\nimport { Context } from \"../context/index\"\r\nimport { formatString } from \"../../utils/formatString\"\r\n\r\nconst CartInput = ({ boxType, date }) => {\r\n    const [{ selectedFlavour, cart }, dispatch] = useContext(Context)\r\n    // set limit for each product\r\n    const limit =\r\n        boxType === \"Box of 5\"\r\n            ? 10\r\n            : boxType === \"Batch of 12\"\r\n            ? 10\r\n            : boxType === \"MAC-A-GRAM\"\r\n            ? 20\r\n            : 0\r\n\r\n    const isNumberKey = e => {\r\n        const charCode = e.which ? e.which : e.keyCode\r\n        if (charCode > 31 && (charCode < 48 || charCode > 57))\r\n            e.preventDefault()\r\n    }\r\n\r\n    const btnHandler = (e, action) => {\r\n        e.target.blur()\r\n        // const currBoxNumber = parseInt(cart[date][boxType].length) + 1\r\n\r\n        switch (action) {\r\n            case \"add\":\r\n                if (cart[date][boxType].length >= limit) return\r\n                // maybe send an alert() to tell customer its reached max\r\n                return dispatch({\r\n                    type: \"setCart\",\r\n                    data: {\r\n                        ...cart,\r\n                        [date]: {\r\n                            ...cart[date],\r\n                            [boxType]: [...cart[date][boxType], {}],\r\n                        },\r\n                    },\r\n                })\r\n\r\n            case \"remove\":\r\n                // use splice to remove the last item in the array.\r\n                // don't remove anything from the array if there's none of the current flavour in the array\r\n                return dispatch({\r\n                    type: \"setCart\",\r\n                    data: {\r\n                        ...cart,\r\n                        [date]: {\r\n                            ...cart[date],\r\n                            [boxType]: cart[date][boxType].splice(\r\n                                0,\r\n                                cart[date][boxType].length - 1\r\n                            ),\r\n                        },\r\n                    },\r\n                })\r\n            default:\r\n                return console.log(\"something went wrong with cart input\")\r\n        }\r\n    }\r\n\r\n    const inputHandler = e => {\r\n        const finalValue = e.target.value > limit ? limit : e.target.value\r\n\r\n        const amountOfBoxes = () => {\r\n            var arr = []\r\n            for (var i = 0; i < finalValue; i++) arr.push({})\r\n            return arr\r\n        }\r\n\r\n        dispatch({\r\n            type: \"setCart\",\r\n            data: {\r\n                ...cart,\r\n                [date]: {\r\n                    ...cart[date],\r\n                    [boxType]: [...amountOfBoxes()],\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const formattedName = formatString(selectedFlavour, \"kebab\")\r\n    \r\n    return (\r\n        <div className=\"cart-input\">\r\n            <button\r\n                className=\"cart-input__btn--remove cart-input__btn\"\r\n                onClick={e => btnHandler(e, \"remove\")}>\r\n                -\r\n            </button>\r\n            <input\r\n                className={`cart-input__amount cart-input__amount--${boxType}`}\r\n                name={`${formattedName}--${date}`}\r\n                id={`${formattedName}--${date}`}\r\n                onKeyPress={isNumberKey}\r\n                onChange={inputHandler}\r\n                onClick={e => e.target.select()}\r\n                value={cart[date][boxType] ? cart[date][boxType].length : 0}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max={limit}\r\n                pattern=\"[0-9]+\"\r\n                title=\"Non-negative integral number\"\r\n            />\r\n            <button\r\n                className=\"cart-input__btn--add cart-input__btn\"\r\n                onClick={e => btnHandler(e, \"add\")}>\r\n                +\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartInput\r\n","import React, { useContext, useEffect } from \"react\"\r\nimport { formatString } from \"../../../utils/formatString\"\r\nimport { Context } from \"../../context\"\r\n\r\nconst FlavourPicker = ({ boxNumber, boxType, flavour = \"\", date, productType }) => {\r\n    const [{ cart, flavours }, dispatch] = useContext(Context)\r\n\r\n    const flavourNameKebab = formatString(flavour, \"kebab\")\r\n    // set limit for each product\r\n    const limit = boxType === \"Box of 5\" ? 5 : boxType === \"MAC-A-GRAM\" ? 2 : 0\r\n\r\n    const btnHandler = (e, action) => {\r\n        e.target.blur()\r\n        const boxCopy = [...cart[date][boxType]]\r\n        const flavourAmount = parseInt(cart[date][boxType][boxNumber][flavour]) || 0\r\n\r\n        switch (action) {\r\n            case \"add\":\r\n                if (flavourAmount >= limit) return\r\n                // maybe send an alert() to tell customer its reached max\r\n                boxCopy[boxNumber] = {\r\n                    ...boxCopy[boxNumber],\r\n                    [flavour]: flavourAmount + 1\r\n                }\r\n                return dispatch({\r\n                    type: \"setCart\",\r\n                    data: {\r\n                        ...cart,\r\n                        [date]: {\r\n                            ...cart[date],\r\n                            [boxType]: boxCopy\r\n                        }\r\n                    }\r\n                })\r\n\r\n            case \"remove\":\r\n                if (flavourAmount < 1) return\r\n                // maybe send an alert() to tell customer its reached 0\r\n                boxCopy[boxNumber] = {\r\n                    ...boxCopy[boxNumber],\r\n                    [flavour]: flavourAmount - 1\r\n                }\r\n                return dispatch({\r\n                    type: \"setCart\",\r\n                    data: {\r\n                        ...cart,\r\n                        [date]: {\r\n                            ...cart[date],\r\n                            [boxType]: boxCopy\r\n                        }\r\n                    }\r\n                })\r\n            default:\r\n                return console.log(\"something went wrong with flavour input\")\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const finalValue = e.target.value > limit ? limit : e.target.value\r\n\r\n        const boxCopy = [...cart[date][boxType]]\r\n        boxCopy[boxNumber] = {\r\n            ...boxCopy[boxNumber],\r\n            [flavour]: parseInt(finalValue) || 0\r\n        }\r\n\r\n        dispatch({\r\n            type: \"setCart\",\r\n            data: {\r\n                ...cart,\r\n                [date]: {\r\n                    ...cart[date],\r\n                    [boxType]: boxCopy\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleBatchChange = e => {\r\n        const boxCopy = [...cart[date][boxType]]\r\n        boxCopy[boxNumber] = {\r\n            // ...boxCopy[boxNumber],\r\n            [e.target.value]: e.target.value === \"Choose One\" ? 0 : 12\r\n        }\r\n\r\n        dispatch({\r\n            type: \"setCart\",\r\n            data: {\r\n                ...cart,\r\n                [date]: {\r\n                    ...cart[date],\r\n                    [boxType]: boxCopy\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {}, [])\r\n\r\n    return (\r\n        <div className=\"flavour-picker\">\r\n            {boxType === \"Batch of 12\" ? (\r\n                <>\r\n                    <select\r\n                        className=\"form__select form__product__batch-flavour\"\r\n                        name={`batch${boxNumber + 1}`}\r\n                        id={`batch${boxNumber + 1}`}\r\n                        value={Object.keys(cart[date][boxType][boxNumber])}\r\n                        onChange={handleBatchChange}>\r\n                        <option>Choose One</option>\r\n                        {flavours.all.map((flavour, i) => (\r\n                            <option key={i}>{flavour[\"Flavour\"]}</option>\r\n                        ))}\r\n                    </select>\r\n                </>\r\n            ) : productType === \"set\" ? (\r\n                <>\r\n                    <label\r\n                        className={`flavour-picker__label flavour-picker__label--${flavourNameKebab}`}\r\n                        htmlFor={`${flavourNameKebab}--${formatString(boxType, \"kebab\")}-${boxNumber + 1}`}>\r\n                        {flavour}\r\n                    </label>\r\n                    <div className=\"flavour-picker__container\">\r\n                        <div className=\"flavour-picker__btn--remove flavour-picker__btn\" />\r\n                        <input\r\n                            className={`flavour-picker__amount flavour-picker__amount--${flavourNameKebab}`}\r\n                            id={flavourNameKebab}\r\n                            name={`${flavourNameKebab}--${formatString(boxType, \"kebab\")}-${boxNumber + 1}`}\r\n                            value={1}\r\n                            disabled\r\n                            onClick={e => e.target.select()}\r\n                            onChange={handleChange}\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            max=\"5\"\r\n                            pattern=\"[0-9]*\"\r\n                            title=\"Non-negative integral number\"\r\n                        />\r\n                        <div className=\"flavour-picker__btn--add flavour-picker__btn\" />\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <label\r\n                        className={`flavour-picker__label flavour-picker__label--${flavourNameKebab}`}\r\n                        htmlFor={`${flavourNameKebab}--${formatString(boxType, \"kebab\")}-${boxNumber + 1}`}>\r\n                        {flavour}\r\n                    </label>\r\n                    <div className=\"flavour-picker__container\">\r\n                        <button\r\n                            className=\"flavour-picker__btn--remove flavour-picker__btn\"\r\n                            onClick={e => btnHandler(e, \"remove\")}>\r\n                            -\r\n                        </button>\r\n                        <input\r\n                            className={`flavour-picker__amount flavour-picker__amount--${flavourNameKebab}`}\r\n                            id={flavourNameKebab}\r\n                            name={`${flavourNameKebab}--${formatString(boxType, \"kebab\")}-${boxNumber + 1}`}\r\n                            value={cart[date][boxType][boxNumber][flavour] || 0}\r\n                            onClick={e => e.target.select()}\r\n                            onChange={handleChange}\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            max=\"5\"\r\n                            pattern=\"[0-9]*\"\r\n                            title=\"Non-negative integral number\"\r\n                        />\r\n                        <button className=\"flavour-picker__btn--add flavour-picker__btn\" onClick={e => btnHandler(e, \"add\")}>\r\n                            +\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlavourPicker\r\n","import { momentInt } from \"./getDates\"\r\n\r\nconst getProductType = (weeklyFlavours, date) => {\r\n    const productTypes = weeklyFlavours\r\n        .filter(\r\n            flavour => momentInt(\"DDD\", flavour[\"Date\"]) > momentInt(\"DDD\") || momentInt(\"YY\", flavour[\"Date\"]) > momentInt(\"YY\")\r\n        )\r\n        .reduce((acc, curr) => {\r\n            if (curr[\"Type\"] !== undefined && !acc[curr[\"Date\"]]) acc[curr[\"Date\"]] = curr[\"Type\"]\r\n            return acc\r\n        }, {})\r\n\r\n    return productTypes[date]\r\n}\r\n\r\nexport default getProductType\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Context } from '../../context'\r\nimport CartInput from '../CartInput'\r\nimport FlavourPicker from './FlavourPicker'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { productImages, productAltText } from '../../../utils/productImages'\r\nimport { formatString } from '../../../utils/formatString'\r\nimport { nextOrderDates } from '../../../utils/getDates'\r\nimport awayMessage from '../../../utils/awayMessage'\r\nimport countProducts from '../../../utils/countProducts'\r\nimport getProductType from '../../../utils/getProductType'\r\n\r\nconst OrderForm = ({ match, setCheckout, checkout }) => {\r\n    const [{ cart, flavours, prices, date }, dispatch] = useContext(Context)\r\n    const [msg, setMsg] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(cart).length === 0) {\r\n            const initialCart = () => {\r\n                const weeklyCart = {\r\n                    'Box of 5': [],\r\n                    'MAC-A-GRAM': [],\r\n                    'Batch of 12': [],\r\n                    'Catering + Bulk': []\r\n                }\r\n\r\n                const result = nextOrderDates(flavours.weekly).reduce((acc, curr) => {\r\n                    if (!acc[curr]) acc[curr] = weeklyCart\r\n                    return acc\r\n                }, {})\r\n\r\n                return result\r\n            }\r\n\r\n            dispatch({ type: 'setCart', data: initialCart() })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const getNames = (acc, curr) => {\r\n        acc.push(curr['Flavour'])\r\n        return acc\r\n    }\r\n\r\n    const weeklyFlavourNames = flavours.weekly.filter(entry => entry['Date'] === date).reduce(getNames, [])\r\n\r\n    // const isRestWeek = week =>\r\n    //     flavours.weekly.filter(entry => entry['Date'] === moment(week).format('MM/DD/YYYY')).reduce(getNames, []).length === 0\r\n\r\n    const endpoint = match.params.product\r\n    const productName = endpoint === 'mac-a-gram' ? endpoint.toUpperCase() : formatString(endpoint, 'kebab to title')\r\n\r\n    const header = productName.toLowerCase().includes('box')\r\n        ? 'Box'\r\n        : productName.toLowerCase().includes('batch')\r\n        ? 'Batch'\r\n        : productName\r\n\r\n    const macsInBox = productName === 'Box of 5' ? 5 : productName === 'MAC-A-GRAM' ? 2 : productName === 'Batch of 12' ? 12 : 0\r\n\r\n    const isFilledBox =\r\n        Object.keys(cart).length > 0\r\n            ? cart[date][productName].reduce((acc, curr) => {\r\n                  // checks each box and returns an array of [true, false, true...]\r\n                  if (Object.values(curr).reduce((a, b) => a + b, 0) === macsInBox) {\r\n                      acc.push(true)\r\n                  } else {\r\n                      acc.push(false)\r\n                  }\r\n                  return acc\r\n              }, [])\r\n            : []\r\n\r\n    const handleDateClick = date => dispatch({ type: 'setDate', data: date })\r\n\r\n    const handleAddToCart = e => {\r\n        if (cart[date] === undefined) return\r\n\r\n        let chosenFlavours = cart[date][productName]\r\n\r\n        if (getProductType(flavours.weekly, date) === 'set' && productName === 'Box of 5') {\r\n            const finalData = []\r\n\r\n            const setObj = weeklyFlavourNames.reduce((acc, curr) => {\r\n                acc[curr] = 1\r\n                return acc\r\n            }, {})\r\n\r\n            for (let i = 0; i < cart[date][productName].length; i++) {\r\n                finalData.push(setObj)\r\n            }\r\n\r\n            chosenFlavours = finalData\r\n            dispatch({\r\n                type: 'setCart',\r\n                data: {\r\n                    ...cart,\r\n                    [date]: {\r\n                        ...cart[date],\r\n                        [productName]: chosenFlavours\r\n                    }\r\n                }\r\n            })\r\n        } else if (productName === 'Box of 5' || productName === 'MAC-A-GRAM') {\r\n            // error message for boxes\r\n            if (isFilledBox.includes(false)) {\r\n                const problemBoxes = isFilledBox\r\n                    .map((item, index) => (!item ? index + 1 : ''))\r\n                    .filter(item => item !== '')\r\n                    .join(', ')\r\n\r\n                setMsg(`Box${problemBoxes.length < 2 ? '' : 'es'} ${problemBoxes} needs a total of ${macsInBox} macarons`)\r\n                return\r\n            }\r\n        }\r\n        // error for batches\r\n        if (productName === 'Batch of 12') {\r\n            if (isFilledBox.includes(false)) {\r\n                const problemBoxes = isFilledBox\r\n                    .map((item, index) => (!item ? index + 1 : ''))\r\n                    .filter(item => item !== '')\r\n                    .join(', ')\r\n\r\n                setMsg(`Please choose a flavour for Batch${problemBoxes.length < 2 ? '' : 'es'} ${problemBoxes}`)\r\n                return\r\n            }\r\n        }\r\n        setCheckout({\r\n            ...checkout,\r\n            [date]: {\r\n                ...checkout[date],\r\n                [productName]: chosenFlavours\r\n            }\r\n        })\r\n        sessionStorage.setItem(\r\n            'checkout',\r\n            JSON.stringify({\r\n                ...checkout,\r\n                [date]: {\r\n                    ...checkout[date],\r\n                    [productName]: chosenFlavours\r\n                }\r\n            })\r\n        )\r\n        alert('Successfully added to cart')\r\n    }\r\n\r\n    const GridItem = ({ name = '', price = '', image = '', alt = '' }) =>\r\n        // a lot of customization needed. maybe should just be plain html\r\n        name === 'MAC-A-GRAM oos' ? (\r\n            <div className='shop__grid-item'>\r\n                <div className='shop-item__image-container'>\r\n                    <div className='shop__grid-item__oos'>\r\n                        <p className='shop__grid-item__oos__text'>Out of Stock</p>\r\n                    </div>\r\n                    <img className='shop__grid-item__image' src={image} alt={alt} />\r\n                </div>\r\n                <div className='shop__grid-item__info'>\r\n                    <h3 className='shop__grid-item__name'>{name}</h3>\r\n                    <p className='shop__grid-item__price'>{price}</p>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <Link to={`/shop/${formatString(name, 'kebab')}`} className='shop__grid-item'>\r\n                <div className='shop-item__image-container'>\r\n                    <img className='shop__grid-item__image' src={image} alt={alt} />\r\n                </div>\r\n                <div className='shop__grid-item__info'>\r\n                    <h3 className='shop__grid-item__name'>{name.includes('Bulk') ? 'Bulk Order' : name}</h3>\r\n                    <p className='shop__grid__price'>{price}</p>\r\n                </div>\r\n            </Link>\r\n        )\r\n\r\n    const handleEmailClick = e => {\r\n        navigator.clipboard.writeText(e.target.innerText)\r\n    }\r\n\r\n    const productObj = productType => prices.find(product => product['Product'] === productType)\r\n\r\n    const [msgActive, setMsgActive] = useState(false)\r\n\r\n    return productName.includes('Bulk') ? (\r\n        <div className={`order-form order-form--${endpoint}`}>\r\n            <div className='order-form__image-container'>\r\n                <img src={productImages[productName]} alt={productAltText[productName]} />\r\n            </div>\r\n\r\n            <div className='order-form__week-selection'>\r\n                <div className='order-form__week-selection__wrapper wrapper'>\r\n                    <h2 className='order-form__name'>{productName}</h2>\r\n                    <p className='order-form__p order-form__p--bulk'>\r\n                        {productObj('Catering + Bulk')['Description'] && productObj('Catering + Bulk')['Description']}\r\n                    </p>\r\n                    <p className='order-form__p order-form__p--bulk'>\r\n                        {productObj('Catering + Bulk')['Description 2'] && productObj('Catering + Bulk')['Description 2']}\r\n                    </p>\r\n                    <p className='order-form__p order-form__p--bulk'>\r\n                        {productObj('Catering + Bulk')['Description 3'] && productObj('Catering + Bulk')['Description 3']}\r\n                    </p>\r\n                    <a\r\n                        className='footer__links__social link'\r\n                        href='https://www.instagram.com/che.macarons/'\r\n                        target='_blank'\r\n                        rel='noreferrer'>\r\n                        Instagram\r\n                    </a>\r\n                    <p className='footer__email' onClick={handleEmailClick}>\r\n                        macarons@chepatisserie.com <i className='far fa-copy' aria-hidden='true'></i>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className='order-form__other wrapper'>\r\n                <h2>Shop Other Products</h2>\r\n                <div className='shop__grid'>\r\n                    {prices.map((product, i) => {\r\n                        return product['Product'] !== productName ? (\r\n                            <GridItem\r\n                                key={i}\r\n                                name={product['Product']}\r\n                                image={productImages[product['Product']]}\r\n                                alt={productAltText[product['Product']]}\r\n                            />\r\n                        ) : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className={`order-form order-form--${endpoint}`}>\r\n            <div className='order-form__image-container'>\r\n                {endpoint === 'box-of-5' && msgActive && (\r\n                    <div className='home__top-message'>\r\n                        <div className='home__top-message__wrapper wrapper'>\r\n                            <p className='home__p'>\r\n                                Add 3 <strong>Box of 5s</strong> to cart for Buy 2 get 1 FREE\r\n                            </p>\r\n                            <button className='home__top-message__btn' onClick={() => setMsgActive(false)}>\r\n                                X\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <img src={productImages[productName]} alt={productAltText[productName]} />\r\n            </div>\r\n\r\n            <div className='order-form__week-selection'>\r\n                <div className='order-form__week-selection__wrapper wrapper'>\r\n                    <h2 className='order-form__name'>{`${productName} - $${productObj(productName)['Single']}`}</h2>\r\n                    {nextOrderDates(flavours.weekly).length > 0 && (\r\n                        <>\r\n                            <p className='order-form__p order-form__week-selection__choose'>Order for</p>\r\n                            <div className='order-form__btns'>\r\n                                {nextOrderDates(flavours.weekly).map((week, i) => {\r\n                                    return endpoint === 'mac-a-gram' ? (\r\n                                        getProductType(flavours.weekly, week) !== 'set' && (\r\n                                            <button\r\n                                                key={i}\r\n                                                className={`order-form__btn order-form__btn--week btn${\r\n                                                    date === week ? ' active' : ''\r\n                                                }`}\r\n                                                onClick={() => handleDateClick(week)}>\r\n                                                {moment(week).format('MMM DD')}\r\n                                            </button>\r\n                                        )\r\n                                    ) : (\r\n                                        <button\r\n                                            key={i}\r\n                                            className={`order-form__btn order-form__btn--week btn${\r\n                                                date === week ? ' active' : ''\r\n                                            }`}\r\n                                            onClick={() => handleDateClick(week)}>\r\n                                            {moment(week).format('MMM DD')}\r\n                                        </button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            {endpoint !== 'mac-a-gram' && getProductType(flavours.weekly, date) === 'set' && (\r\n                                <p className='order-form__p order-form__p--set'>5 preset premium flavours this week</p>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                    {nextOrderDates(flavours.weekly).length < 1 && (\r\n                        <p className='order-form__instruction order-form__p'>{awayMessage}</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {endpoint === 'mac-a-gram' && getProductType(flavours.weekly, date) === 'set' ? null : nextOrderDates(flavours.weekly)\r\n                  .length > 0 ? (\r\n                <div className='order-form__quantity'>\r\n                    <div className='order-form__quantity__wrapper wrapper'>\r\n                        <p className='order-form__p order-form__p--quantity p'>Quantity</p>\r\n                        <CartInput boxType={productName} date={date} />\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n\r\n            <div className='order-form__boxes wrapper'>\r\n                {Object.keys(cart).length > 0 && (\r\n                    <>\r\n                        {cart[date][productName].length < 1 && (\r\n                            <p className='order-form__instruction'>\r\n                                Please choose the date and the amount of products you want to order.\r\n                            </p>\r\n                        )}\r\n                        {cart[date][productName].map((box, boxNumber) => {\r\n                            return (\r\n                                <div className='order-form__package' key={boxNumber}>\r\n                                    <h5 className='order-form__h5'>{`${header} ${boxNumber + 1}`}</h5>\r\n                                    {productName === 'Batch of 12' ? (\r\n                                        <FlavourPicker date={date} boxType={productName} boxNumber={boxNumber} />\r\n                                    ) : (\r\n                                        weeklyFlavourNames.map((flavour, index) => (\r\n                                            <FlavourPicker\r\n                                                productType={getProductType(flavours.weekly, date)}\r\n                                                date={date}\r\n                                                key={index}\r\n                                                boxType={productName}\r\n                                                boxNumber={boxNumber}\r\n                                                flavour={flavour}\r\n                                            />\r\n                                        ))\r\n                                    )}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            <div className='order-form__atc'>\r\n                <div className='order-form__atc__wrapper wrapper'>\r\n                    <p className='order-form__atc__msg'>{msg}</p>\r\n                    <button className='order-form__btn order-form__btn--atc btn' onClick={handleAddToCart}>\r\n                        {countProducts(checkout, productName) > 0 ? 'Submit Changes' : 'Add to Cart'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='order-form__other wrapper'>\r\n                <h2>Shop Other Products</h2>\r\n                <div className='shop__grid'>\r\n                    {prices.map((product, i) => {\r\n                        return product['Product'] !== productName ? (\r\n                            <GridItem\r\n                                key={i}\r\n                                name={product['Product']}\r\n                                image={productImages[product['Product']]}\r\n                                alt={productAltText[product['Product']]}\r\n                            />\r\n                        ) : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderForm\r\n","import React from \"react\"\r\n\r\nconst ThankYou = () => {\r\n    return (\r\n        <section className=\"thankyou\">\r\n            <div className=\"wrapper\">\r\n                <p>Thank you for your order!</p>\r\n                <p>We have sent you a confirmation email. It might end up in your \"Promotions\" tab instead of your default \"Inbox\"</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ThankYou\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { Provider } from './components/context/index'\r\n\r\nimport GetSheets from './components/GetSheets/index'\r\nimport Header from './components/Header/index'\r\nimport Home from './components/Pages/Home/index'\r\nimport AllFlavours from './components/Pages/AllFlavours/index'\r\nimport Products from './components/Pages/Products'\r\nimport Cart from './components/Pages/Cart/index'\r\nimport Footer from './components/Footer/index'\r\nimport FlavourInfo from './components/Pages/FlavourInfo'\r\nimport ScrollToTop from './utils/ScrollToTop'\r\nimport Shop from './components/Pages/Shop'\r\nimport BulkForm from './components/Pages/BulkForm'\r\nimport OrderForm from './components/Pages/Shop/OrderForm'\r\nimport ThankYou from './components/Pages/ThankYou'\r\n\r\nimport './style/style.css'\r\n\r\nconst App = () => {\r\n    const [cartCount, setCartCount] = useState(0)\r\n    const [checkout, setCheckout] = useState(() => JSON.parse(sessionStorage.getItem('checkout')) || {})\r\n\r\n    useEffect(() => {\r\n        // add up the length of the checkout arrays to count how many things are in cart\r\n        let count = 0\r\n\r\n        for (let i = 0; i < Object.values(checkout).length; i++) {\r\n            const productsInCart = Object.values(Object.values(checkout)[i])\r\n\r\n            for (let j = 0; j < productsInCart.length; j++) {\r\n                count += productsInCart[j].length || 0\r\n            }\r\n        }\r\n        \r\n        setCartCount(count)\r\n    }, [checkout])\r\n\r\n    return (\r\n        <Provider>\r\n            <Router>\r\n                <ScrollToTop />\r\n                <GetSheets setCheckout={setCheckout} />\r\n                <Header cartCount={cartCount} />\r\n                <Switch>\r\n                    <Route path='/thankyou'>\r\n                        <ThankYou />\r\n                    </Route>\r\n                    <Route path='/flavours/:flavourName' component={FlavourInfo} />\r\n                    <Route path='/flavours'>\r\n                        <AllFlavours />\r\n                    </Route>\r\n                    <Route path='/products'>\r\n                        <Products />\r\n                    </Route>\r\n                    <Route\r\n                        path='/shop/:product'\r\n                        component={props => <OrderForm {...props} checkout={checkout} setCheckout={setCheckout} />}\r\n                    />\r\n                    <Route path='/shop'>\r\n                        <Shop />\r\n                    </Route>\r\n                    <Route path='/bulk-form' component={BulkForm} />\r\n                    <Route path='/cart'>\r\n                        <Cart checkout={checkout} setCheckout={setCheckout} setCartCount={setCartCount} />\r\n                    </Route>\r\n                    <Route path='/'>\r\n                        <Home checkout={checkout} />\r\n                    </Route>\r\n                </Switch>\r\n                <Footer />\r\n            </Router>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}